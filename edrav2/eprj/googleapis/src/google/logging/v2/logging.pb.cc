// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/logging/v2/logging.proto

#include "google/logging/v2/logging.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fmonitored_5fresource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MonitoredResource_google_2fapi_2fmonitored_5fresource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fmonitored_5fresource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MonitoredResourceDescriptor_google_2fapi_2fmonitored_5fresource_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2flogging_2fv2_2flog_5fentry_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<9> scc_info_LogEntry_google_2flogging_2fv2_2flog_5fentry_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2flogging_2fv2_2flogging_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse_google_2flogging_2fv2_2flogging_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2flogging_2fv2_2flogging_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WriteLogEntriesRequest_LabelsEntry_DoNotUse_google_2flogging_2fv2_2flogging_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2frpc_2fstatus_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Status_google_2frpc_2fstatus_2eproto;
namespace google {
namespace logging {
namespace v2 {
class DeleteLogRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteLogRequest> _instance;
} _DeleteLogRequest_default_instance_;
class WriteLogEntriesRequest_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WriteLogEntriesRequest_LabelsEntry_DoNotUse> _instance;
} _WriteLogEntriesRequest_LabelsEntry_DoNotUse_default_instance_;
class WriteLogEntriesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WriteLogEntriesRequest> _instance;
} _WriteLogEntriesRequest_default_instance_;
class WriteLogEntriesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WriteLogEntriesResponse> _instance;
} _WriteLogEntriesResponse_default_instance_;
class WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse> _instance;
} _WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse_default_instance_;
class WriteLogEntriesPartialErrorsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WriteLogEntriesPartialErrors> _instance;
} _WriteLogEntriesPartialErrors_default_instance_;
class ListLogEntriesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListLogEntriesRequest> _instance;
} _ListLogEntriesRequest_default_instance_;
class ListLogEntriesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListLogEntriesResponse> _instance;
} _ListLogEntriesResponse_default_instance_;
class ListMonitoredResourceDescriptorsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListMonitoredResourceDescriptorsRequest> _instance;
} _ListMonitoredResourceDescriptorsRequest_default_instance_;
class ListMonitoredResourceDescriptorsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListMonitoredResourceDescriptorsResponse> _instance;
} _ListMonitoredResourceDescriptorsResponse_default_instance_;
class ListLogsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListLogsRequest> _instance;
} _ListLogsRequest_default_instance_;
class ListLogsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListLogsResponse> _instance;
} _ListLogsResponse_default_instance_;
}  // namespace v2
}  // namespace logging
}  // namespace google
static void InitDefaultsscc_info_DeleteLogRequest_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_DeleteLogRequest_default_instance_;
    new (ptr) ::google::logging::v2::DeleteLogRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::DeleteLogRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteLogRequest_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteLogRequest_google_2flogging_2fv2_2flogging_2eproto}, {}};

static void InitDefaultsscc_info_ListLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_ListLogEntriesRequest_default_instance_;
    new (ptr) ::google::logging::v2::ListLogEntriesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListLogEntriesRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto}, {}};

static void InitDefaultsscc_info_ListLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_ListLogEntriesResponse_default_instance_;
    new (ptr) ::google::logging::v2::ListLogEntriesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListLogEntriesResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto}, {
      &scc_info_LogEntry_google_2flogging_2fv2_2flog_5fentry_2eproto.base,}};

static void InitDefaultsscc_info_ListLogsRequest_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_ListLogsRequest_default_instance_;
    new (ptr) ::google::logging::v2::ListLogsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListLogsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListLogsRequest_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListLogsRequest_google_2flogging_2fv2_2flogging_2eproto}, {}};

static void InitDefaultsscc_info_ListLogsResponse_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_ListLogsResponse_default_instance_;
    new (ptr) ::google::logging::v2::ListLogsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListLogsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListLogsResponse_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListLogsResponse_google_2flogging_2fv2_2flogging_2eproto}, {}};

static void InitDefaultsscc_info_ListMonitoredResourceDescriptorsRequest_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_ListMonitoredResourceDescriptorsRequest_default_instance_;
    new (ptr) ::google::logging::v2::ListMonitoredResourceDescriptorsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListMonitoredResourceDescriptorsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListMonitoredResourceDescriptorsRequest_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListMonitoredResourceDescriptorsRequest_google_2flogging_2fv2_2flogging_2eproto}, {}};

static void InitDefaultsscc_info_ListMonitoredResourceDescriptorsResponse_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_ListMonitoredResourceDescriptorsResponse_default_instance_;
    new (ptr) ::google::logging::v2::ListMonitoredResourceDescriptorsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListMonitoredResourceDescriptorsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListMonitoredResourceDescriptorsResponse_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListMonitoredResourceDescriptorsResponse_google_2flogging_2fv2_2flogging_2eproto}, {
      &scc_info_MonitoredResourceDescriptor_google_2fapi_2fmonitored_5fresource_2eproto.base,}};

static void InitDefaultsscc_info_WriteLogEntriesPartialErrors_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_WriteLogEntriesPartialErrors_default_instance_;
    new (ptr) ::google::logging::v2::WriteLogEntriesPartialErrors();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::WriteLogEntriesPartialErrors::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WriteLogEntriesPartialErrors_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_WriteLogEntriesPartialErrors_google_2flogging_2fv2_2flogging_2eproto}, {
      &scc_info_WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse_google_2flogging_2fv2_2flogging_2eproto.base,}};

static void InitDefaultsscc_info_WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::logging::v2::WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse();
  }
  ::google::logging::v2::WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse_google_2flogging_2fv2_2flogging_2eproto}, {
      &scc_info_Status_google_2frpc_2fstatus_2eproto.base,}};

static void InitDefaultsscc_info_WriteLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_WriteLogEntriesRequest_default_instance_;
    new (ptr) ::google::logging::v2::WriteLogEntriesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::WriteLogEntriesRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_WriteLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_WriteLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto}, {
      &scc_info_MonitoredResource_google_2fapi_2fmonitored_5fresource_2eproto.base,
      &scc_info_WriteLogEntriesRequest_LabelsEntry_DoNotUse_google_2flogging_2fv2_2flogging_2eproto.base,
      &scc_info_LogEntry_google_2flogging_2fv2_2flog_5fentry_2eproto.base,}};

static void InitDefaultsscc_info_WriteLogEntriesRequest_LabelsEntry_DoNotUse_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_WriteLogEntriesRequest_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::logging::v2::WriteLogEntriesRequest_LabelsEntry_DoNotUse();
  }
  ::google::logging::v2::WriteLogEntriesRequest_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WriteLogEntriesRequest_LabelsEntry_DoNotUse_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_WriteLogEntriesRequest_LabelsEntry_DoNotUse_google_2flogging_2fv2_2flogging_2eproto}, {}};

static void InitDefaultsscc_info_WriteLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_WriteLogEntriesResponse_default_instance_;
    new (ptr) ::google::logging::v2::WriteLogEntriesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::WriteLogEntriesResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WriteLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_WriteLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_google_2flogging_2fv2_2flogging_2eproto[12];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_google_2flogging_2fv2_2flogging_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_google_2flogging_2fv2_2flogging_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_google_2flogging_2fv2_2flogging_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::DeleteLogRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::DeleteLogRequest, log_name_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesRequest_LabelsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesRequest_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesRequest_LabelsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesRequest_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesRequest, log_name_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesRequest, resource_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesRequest, labels_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesRequest, entries_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesRequest, partial_success_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesRequest, dry_run_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesPartialErrors, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::WriteLogEntriesPartialErrors, log_entry_errors_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogEntriesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogEntriesRequest, project_ids_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogEntriesRequest, resource_names_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogEntriesRequest, filter_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogEntriesRequest, order_by_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogEntriesRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogEntriesRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogEntriesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogEntriesResponse, entries_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogEntriesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListMonitoredResourceDescriptorsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListMonitoredResourceDescriptorsRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListMonitoredResourceDescriptorsRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListMonitoredResourceDescriptorsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListMonitoredResourceDescriptorsResponse, resource_descriptors_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListMonitoredResourceDescriptorsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogsRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogsRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogsRequest, page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogsResponse, log_names_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogsResponse, next_page_token_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::logging::v2::DeleteLogRequest)},
  { 6, 13, sizeof(::google::logging::v2::WriteLogEntriesRequest_LabelsEntry_DoNotUse)},
  { 15, -1, sizeof(::google::logging::v2::WriteLogEntriesRequest)},
  { 26, -1, sizeof(::google::logging::v2::WriteLogEntriesResponse)},
  { 31, 38, sizeof(::google::logging::v2::WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse)},
  { 40, -1, sizeof(::google::logging::v2::WriteLogEntriesPartialErrors)},
  { 46, -1, sizeof(::google::logging::v2::ListLogEntriesRequest)},
  { 57, -1, sizeof(::google::logging::v2::ListLogEntriesResponse)},
  { 64, -1, sizeof(::google::logging::v2::ListMonitoredResourceDescriptorsRequest)},
  { 71, -1, sizeof(::google::logging::v2::ListMonitoredResourceDescriptorsResponse)},
  { 78, -1, sizeof(::google::logging::v2::ListLogsRequest)},
  { 86, -1, sizeof(::google::logging::v2::ListLogsResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::logging::v2::_DeleteLogRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::logging::v2::_WriteLogEntriesRequest_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::logging::v2::_WriteLogEntriesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::logging::v2::_WriteLogEntriesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::logging::v2::_WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::logging::v2::_WriteLogEntriesPartialErrors_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::logging::v2::_ListLogEntriesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::logging::v2::_ListLogEntriesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::logging::v2::_ListMonitoredResourceDescriptorsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::logging::v2::_ListMonitoredResourceDescriptorsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::logging::v2::_ListLogsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::logging::v2::_ListLogsResponse_default_instance_),
};

const char descriptor_table_protodef_google_2flogging_2fv2_2flogging_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\037google/logging/v2/logging.proto\022\021googl"
  "e.logging.v2\032#google/api/monitored_resou"
  "rce.proto\032!google/logging/v2/log_entry.p"
  "roto\032&google/logging/v2/logging_config.p"
  "roto\032\036google/protobuf/duration.proto\032\033go"
  "ogle/protobuf/empty.proto\032\037google/protob"
  "uf/timestamp.proto\032\027google/rpc/status.pr"
  "oto\032\034google/api/annotations.proto\032\027googl"
  "e/api/client.proto\"$\n\020DeleteLogRequest\022\020"
  "\n\010log_name\030\001 \001(\t\"\251\002\n\026WriteLogEntriesRequ"
  "est\022\020\n\010log_name\030\001 \001(\t\022/\n\010resource\030\002 \001(\0132"
  "\035.google.api.MonitoredResource\022E\n\006labels"
  "\030\003 \003(\01325.google.logging.v2.WriteLogEntri"
  "esRequest.LabelsEntry\022,\n\007entries\030\004 \003(\0132\033"
  ".google.logging.v2.LogEntry\022\027\n\017partial_s"
  "uccess\030\005 \001(\010\022\017\n\007dry_run\030\006 \001(\010\032-\n\013LabelsE"
  "ntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\031\n\027"
  "WriteLogEntriesResponse\"\310\001\n\034WriteLogEntr"
  "iesPartialErrors\022]\n\020log_entry_errors\030\001 \003"
  "(\0132C.google.logging.v2.WriteLogEntriesPa"
  "rtialErrors.LogEntryErrorsEntry\032I\n\023LogEn"
  "tryErrorsEntry\022\013\n\003key\030\001 \001(\005\022!\n\005value\030\002 \001"
  "(\0132\022.google.rpc.Status:\0028\001\"\221\001\n\025ListLogEn"
  "triesRequest\022\027\n\013project_ids\030\001 \003(\tB\002\030\001\022\026\n"
  "\016resource_names\030\010 \003(\t\022\016\n\006filter\030\002 \001(\t\022\020\n"
  "\010order_by\030\003 \001(\t\022\021\n\tpage_size\030\004 \001(\005\022\022\n\npa"
  "ge_token\030\005 \001(\t\"_\n\026ListLogEntriesResponse"
  "\022,\n\007entries\030\001 \003(\0132\033.google.logging.v2.Lo"
  "gEntry\022\027\n\017next_page_token\030\002 \001(\t\"P\n\'ListM"
  "onitoredResourceDescriptorsRequest\022\021\n\tpa"
  "ge_size\030\001 \001(\005\022\022\n\npage_token\030\002 \001(\t\"\212\001\n(Li"
  "stMonitoredResourceDescriptorsResponse\022E"
  "\n\024resource_descriptors\030\001 \003(\0132\'.google.ap"
  "i.MonitoredResourceDescriptor\022\027\n\017next_pa"
  "ge_token\030\002 \001(\t\"H\n\017ListLogsRequest\022\016\n\006par"
  "ent\030\001 \001(\t\022\021\n\tpage_size\030\002 \001(\005\022\022\n\npage_tok"
  "en\030\003 \001(\t\">\n\020ListLogsResponse\022\021\n\tlog_name"
  "s\030\003 \003(\t\022\027\n\017next_page_token\030\002 \001(\t2\205\n\n\020Log"
  "gingServiceV2\022\210\002\n\tDeleteLog\022#.google.log"
  "ging.v2.DeleteLogRequest\032\026.google.protob"
  "uf.Empty\"\275\001\202\323\344\223\002\266\001* /v2/{log_name=projec"
  "ts/*/logs/*}Z\033*\031/v2/{log_name=*/*/logs/*"
  "}Z\'*%/v2/{log_name=organizations/*/logs/"
  "*}Z!*\037/v2/{log_name=folders/*/logs/*}Z)*"
  "\'/v2/{log_name=billingAccounts/*/logs/*}"
  "\022\206\001\n\017WriteLogEntries\022).google.logging.v2"
  ".WriteLogEntriesRequest\032*.google.logging"
  ".v2.WriteLogEntriesResponse\"\034\202\323\344\223\002\026\"\021/v2"
  "/entries:write:\001*\022\202\001\n\016ListLogEntries\022(.g"
  "oogle.logging.v2.ListLogEntriesRequest\032)"
  ".google.logging.v2.ListLogEntriesRespons"
  "e\"\033\202\323\344\223\002\025\"\020/v2/entries:list:\001*\022\305\001\n ListM"
  "onitoredResourceDescriptors\022:.google.log"
  "ging.v2.ListMonitoredResourceDescriptors"
  "Request\032;.google.logging.v2.ListMonitore"
  "dResourceDescriptorsResponse\"(\202\323\344\223\002\"\022 /v"
  "2/monitoredResourceDescriptors\022\377\001\n\010ListL"
  "ogs\022\".google.logging.v2.ListLogsRequest\032"
  "#.google.logging.v2.ListLogsResponse\"\251\001\202"
  "\323\344\223\002\242\001\022\025/v2/{parent=*/*}/logsZ\036\022\034/v2/{pa"
  "rent=projects/*}/logsZ#\022!/v2/{parent=org"
  "anizations/*}/logsZ\035\022\033/v2/{parent=folder"
  "s/*}/logsZ%\022#/v2/{parent=billingAccounts"
  "/*}/logs\032\215\002\312A\026logging.googleapis.com\322A\360\001"
  "https://www.googleapis.com/auth/cloud-pl"
  "atform,https://www.googleapis.com/auth/c"
  "loud-platform.read-only,https://www.goog"
  "leapis.com/auth/logging.admin,https://ww"
  "w.googleapis.com/auth/logging.read,https"
  "://www.googleapis.com/auth/logging.write"
  "B\230\001\n\025com.google.logging.v2B\014LoggingProto"
  "P\001Z8google.golang.org/genproto/googleapi"
  "s/logging/v2;logging\370\001\001\252\002\027Google.Cloud.L"
  "ogging.V2\312\002\027Google\\Cloud\\Logging\\V2b\006pro"
  "to3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_google_2flogging_2fv2_2flogging_2eproto_deps[9] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fapi_2fclient_2eproto,
  &::descriptor_table_google_2fapi_2fmonitored_5fresource_2eproto,
  &::descriptor_table_google_2flogging_2fv2_2flog_5fentry_2eproto,
  &::descriptor_table_google_2flogging_2fv2_2flogging_5fconfig_2eproto,
  &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_google_2frpc_2fstatus_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_google_2flogging_2fv2_2flogging_2eproto_sccs[12] = {
  &scc_info_DeleteLogRequest_google_2flogging_2fv2_2flogging_2eproto.base,
  &scc_info_ListLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto.base,
  &scc_info_ListLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto.base,
  &scc_info_ListLogsRequest_google_2flogging_2fv2_2flogging_2eproto.base,
  &scc_info_ListLogsResponse_google_2flogging_2fv2_2flogging_2eproto.base,
  &scc_info_ListMonitoredResourceDescriptorsRequest_google_2flogging_2fv2_2flogging_2eproto.base,
  &scc_info_ListMonitoredResourceDescriptorsResponse_google_2flogging_2fv2_2flogging_2eproto.base,
  &scc_info_WriteLogEntriesPartialErrors_google_2flogging_2fv2_2flogging_2eproto.base,
  &scc_info_WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse_google_2flogging_2fv2_2flogging_2eproto.base,
  &scc_info_WriteLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto.base,
  &scc_info_WriteLogEntriesRequest_LabelsEntry_DoNotUse_google_2flogging_2fv2_2flogging_2eproto.base,
  &scc_info_WriteLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_google_2flogging_2fv2_2flogging_2eproto_once;
static bool descriptor_table_google_2flogging_2fv2_2flogging_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2flogging_2fv2_2flogging_2eproto = {
  &descriptor_table_google_2flogging_2fv2_2flogging_2eproto_initialized, descriptor_table_protodef_google_2flogging_2fv2_2flogging_2eproto, "google/logging/v2/logging.proto", 2963,
  &descriptor_table_google_2flogging_2fv2_2flogging_2eproto_once, descriptor_table_google_2flogging_2fv2_2flogging_2eproto_sccs, descriptor_table_google_2flogging_2fv2_2flogging_2eproto_deps, 12, 9,
  schemas, file_default_instances, TableStruct_google_2flogging_2fv2_2flogging_2eproto::offsets,
  file_level_metadata_google_2flogging_2fv2_2flogging_2eproto, 12, file_level_enum_descriptors_google_2flogging_2fv2_2flogging_2eproto, file_level_service_descriptors_google_2flogging_2fv2_2flogging_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2flogging_2fv2_2flogging_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_google_2flogging_2fv2_2flogging_2eproto), true);
namespace google {
namespace logging {
namespace v2 {

// ===================================================================

void DeleteLogRequest::InitAsDefaultInstance() {
}
class DeleteLogRequest::_Internal {
 public:
};

DeleteLogRequest::DeleteLogRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.DeleteLogRequest)
}
DeleteLogRequest::DeleteLogRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.DeleteLogRequest)
}
DeleteLogRequest::DeleteLogRequest(const DeleteLogRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  log_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_log_name().empty()) {
    log_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_log_name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.DeleteLogRequest)
}

void DeleteLogRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteLogRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  log_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteLogRequest::~DeleteLogRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.DeleteLogRequest)
  SharedDtor();
}

void DeleteLogRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  log_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteLogRequest::ArenaDtor(void* object) {
  DeleteLogRequest* _this = reinterpret_cast< DeleteLogRequest* >(object);
  (void)_this;
}
void DeleteLogRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteLogRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteLogRequest& DeleteLogRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteLogRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  return *internal_default_instance();
}


void DeleteLogRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.DeleteLogRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  log_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

const char* DeleteLogRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string log_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_log_name(), ptr, ctx, "google.logging.v2.DeleteLogRequest.log_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteLogRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.DeleteLogRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string log_name = 1;
  if (this->log_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_log_name().data(), static_cast<int>(this->_internal_log_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.DeleteLogRequest.log_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_log_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.DeleteLogRequest)
  return target;
}

size_t DeleteLogRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.DeleteLogRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string log_name = 1;
  if (this->log_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_log_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteLogRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.DeleteLogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteLogRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteLogRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.DeleteLogRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.DeleteLogRequest)
    MergeFrom(*source);
  }
}

void DeleteLogRequest::MergeFrom(const DeleteLogRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.DeleteLogRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.log_name().size() > 0) {
    _internal_set_log_name(from._internal_log_name());
  }
}

void DeleteLogRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.DeleteLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteLogRequest::CopyFrom(const DeleteLogRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.DeleteLogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteLogRequest::IsInitialized() const {
  return true;
}

void DeleteLogRequest::InternalSwap(DeleteLogRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  log_name_.Swap(&other->log_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteLogRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

WriteLogEntriesRequest_LabelsEntry_DoNotUse::WriteLogEntriesRequest_LabelsEntry_DoNotUse() {}
WriteLogEntriesRequest_LabelsEntry_DoNotUse::WriteLogEntriesRequest_LabelsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void WriteLogEntriesRequest_LabelsEntry_DoNotUse::MergeFrom(const WriteLogEntriesRequest_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata WriteLogEntriesRequest_LabelsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void WriteLogEntriesRequest_LabelsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void WriteLogEntriesRequest::InitAsDefaultInstance() {
  ::google::logging::v2::_WriteLogEntriesRequest_default_instance_._instance.get_mutable()->resource_ = const_cast< ::google::api::MonitoredResource*>(
      ::google::api::MonitoredResource::internal_default_instance());
}
class WriteLogEntriesRequest::_Internal {
 public:
  static const ::google::api::MonitoredResource& resource(const WriteLogEntriesRequest* msg);
};

const ::google::api::MonitoredResource&
WriteLogEntriesRequest::_Internal::resource(const WriteLogEntriesRequest* msg) {
  return *msg->resource_;
}
void WriteLogEntriesRequest::unsafe_arena_set_allocated_resource(
    ::google::api::MonitoredResource* resource) {
  if (GetArenaNoVirtual() == nullptr) {
    delete resource_;
  }
  resource_ = resource;
  if (resource) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.WriteLogEntriesRequest.resource)
}
void WriteLogEntriesRequest::clear_resource() {
  if (GetArenaNoVirtual() == nullptr && resource_ != nullptr) {
    delete resource_;
  }
  resource_ = nullptr;
}
void WriteLogEntriesRequest::clear_entries() {
  entries_.Clear();
}
WriteLogEntriesRequest::WriteLogEntriesRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.WriteLogEntriesRequest)
}
WriteLogEntriesRequest::WriteLogEntriesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  labels_(arena),
  entries_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.WriteLogEntriesRequest)
}
WriteLogEntriesRequest::WriteLogEntriesRequest(const WriteLogEntriesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  log_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_log_name().empty()) {
    log_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_log_name(),
      GetArenaNoVirtual());
  }
  if (from._internal_has_resource()) {
    resource_ = new ::google::api::MonitoredResource(*from.resource_);
  } else {
    resource_ = nullptr;
  }
  ::memcpy(&partial_success_, &from.partial_success_,
    static_cast<size_t>(reinterpret_cast<char*>(&dry_run_) -
    reinterpret_cast<char*>(&partial_success_)) + sizeof(dry_run_));
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.WriteLogEntriesRequest)
}

void WriteLogEntriesRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WriteLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  log_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&resource_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dry_run_) -
      reinterpret_cast<char*>(&resource_)) + sizeof(dry_run_));
}

WriteLogEntriesRequest::~WriteLogEntriesRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.WriteLogEntriesRequest)
  SharedDtor();
}

void WriteLogEntriesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  log_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete resource_;
}

void WriteLogEntriesRequest::ArenaDtor(void* object) {
  WriteLogEntriesRequest* _this = reinterpret_cast< WriteLogEntriesRequest* >(object);
  (void)_this;
}
void WriteLogEntriesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WriteLogEntriesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WriteLogEntriesRequest& WriteLogEntriesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WriteLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  return *internal_default_instance();
}


void WriteLogEntriesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.WriteLogEntriesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  entries_.Clear();
  log_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && resource_ != nullptr) {
    delete resource_;
  }
  resource_ = nullptr;
  ::memset(&partial_success_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dry_run_) -
      reinterpret_cast<char*>(&partial_success_)) + sizeof(dry_run_));
  _internal_metadata_.Clear();
}

const char* WriteLogEntriesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string log_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_log_name(), ptr, ctx, "google.logging.v2.WriteLogEntriesRequest.log_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.MonitoredResource resource = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_resource(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> labels = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&labels_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .google.logging.v2.LogEntry entries = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // bool partial_success = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          partial_success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool dry_run = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          dry_run_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WriteLogEntriesRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.WriteLogEntriesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string log_name = 1;
  if (this->log_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_log_name().data(), static_cast<int>(this->_internal_log_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.WriteLogEntriesRequest.log_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_log_name(), target);
  }

  // .google.api.MonitoredResource resource = 2;
  if (this->has_resource()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::resource(this), target, stream);
  }

  // map<string, string> labels = 3;
  if (!this->_internal_labels().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.logging.v2.WriteLogEntriesRequest.LabelsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.logging.v2.WriteLogEntriesRequest.LabelsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_labels().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_labels().begin();
          it != this->_internal_labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = WriteLogEntriesRequest_LabelsEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_labels().begin();
          it != this->_internal_labels().end(); ++it) {
        target = WriteLogEntriesRequest_LabelsEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // repeated .google.logging.v2.LogEntry entries = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_entries_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(4, this->_internal_entries(i), target, stream);
  }

  // bool partial_success = 5;
  if (this->partial_success() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_partial_success(), target);
  }

  // bool dry_run = 6;
  if (this->dry_run() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(6, this->_internal_dry_run(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.WriteLogEntriesRequest)
  return target;
}

size_t WriteLogEntriesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.WriteLogEntriesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> labels = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_labels_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_labels().begin();
      it != this->_internal_labels().end(); ++it) {
    total_size += WriteLogEntriesRequest_LabelsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated .google.logging.v2.LogEntry entries = 4;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string log_name = 1;
  if (this->log_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_log_name());
  }

  // .google.api.MonitoredResource resource = 2;
  if (this->has_resource()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *resource_);
  }

  // bool partial_success = 5;
  if (this->partial_success() != 0) {
    total_size += 1 + 1;
  }

  // bool dry_run = 6;
  if (this->dry_run() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteLogEntriesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.WriteLogEntriesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteLogEntriesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WriteLogEntriesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.WriteLogEntriesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.WriteLogEntriesRequest)
    MergeFrom(*source);
  }
}

void WriteLogEntriesRequest::MergeFrom(const WriteLogEntriesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.WriteLogEntriesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  entries_.MergeFrom(from.entries_);
  if (from.log_name().size() > 0) {
    _internal_set_log_name(from._internal_log_name());
  }
  if (from.has_resource()) {
    _internal_mutable_resource()->::google::api::MonitoredResource::MergeFrom(from._internal_resource());
  }
  if (from.partial_success() != 0) {
    _internal_set_partial_success(from._internal_partial_success());
  }
  if (from.dry_run() != 0) {
    _internal_set_dry_run(from._internal_dry_run());
  }
}

void WriteLogEntriesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.WriteLogEntriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteLogEntriesRequest::CopyFrom(const WriteLogEntriesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.WriteLogEntriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteLogEntriesRequest::IsInitialized() const {
  return true;
}

void WriteLogEntriesRequest::InternalSwap(WriteLogEntriesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  labels_.Swap(&other->labels_);
  entries_.InternalSwap(&other->entries_);
  log_name_.Swap(&other->log_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(resource_, other->resource_);
  swap(partial_success_, other->partial_success_);
  swap(dry_run_, other->dry_run_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WriteLogEntriesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WriteLogEntriesResponse::InitAsDefaultInstance() {
}
class WriteLogEntriesResponse::_Internal {
 public:
};

WriteLogEntriesResponse::WriteLogEntriesResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.WriteLogEntriesResponse)
}
WriteLogEntriesResponse::WriteLogEntriesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.WriteLogEntriesResponse)
}
WriteLogEntriesResponse::WriteLogEntriesResponse(const WriteLogEntriesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.WriteLogEntriesResponse)
}

void WriteLogEntriesResponse::SharedCtor() {
}

WriteLogEntriesResponse::~WriteLogEntriesResponse() {
  // @@protoc_insertion_point(destructor:google.logging.v2.WriteLogEntriesResponse)
  SharedDtor();
}

void WriteLogEntriesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
}

void WriteLogEntriesResponse::ArenaDtor(void* object) {
  WriteLogEntriesResponse* _this = reinterpret_cast< WriteLogEntriesResponse* >(object);
  (void)_this;
}
void WriteLogEntriesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WriteLogEntriesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WriteLogEntriesResponse& WriteLogEntriesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WriteLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto.base);
  return *internal_default_instance();
}


void WriteLogEntriesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.WriteLogEntriesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* WriteLogEntriesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WriteLogEntriesResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.WriteLogEntriesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.WriteLogEntriesResponse)
  return target;
}

size_t WriteLogEntriesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.WriteLogEntriesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteLogEntriesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.WriteLogEntriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteLogEntriesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WriteLogEntriesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.WriteLogEntriesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.WriteLogEntriesResponse)
    MergeFrom(*source);
  }
}

void WriteLogEntriesResponse::MergeFrom(const WriteLogEntriesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.WriteLogEntriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void WriteLogEntriesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.WriteLogEntriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteLogEntriesResponse::CopyFrom(const WriteLogEntriesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.WriteLogEntriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteLogEntriesResponse::IsInitialized() const {
  return true;
}

void WriteLogEntriesResponse::InternalSwap(WriteLogEntriesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WriteLogEntriesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse::WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse() {}
WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse::WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse::MergeFrom(const WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void WriteLogEntriesPartialErrors::InitAsDefaultInstance() {
}
class WriteLogEntriesPartialErrors::_Internal {
 public:
};

void WriteLogEntriesPartialErrors::clear_log_entry_errors() {
  log_entry_errors_.Clear();
}
WriteLogEntriesPartialErrors::WriteLogEntriesPartialErrors()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.WriteLogEntriesPartialErrors)
}
WriteLogEntriesPartialErrors::WriteLogEntriesPartialErrors(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  log_entry_errors_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.WriteLogEntriesPartialErrors)
}
WriteLogEntriesPartialErrors::WriteLogEntriesPartialErrors(const WriteLogEntriesPartialErrors& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  log_entry_errors_.MergeFrom(from.log_entry_errors_);
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.WriteLogEntriesPartialErrors)
}

void WriteLogEntriesPartialErrors::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WriteLogEntriesPartialErrors_google_2flogging_2fv2_2flogging_2eproto.base);
}

WriteLogEntriesPartialErrors::~WriteLogEntriesPartialErrors() {
  // @@protoc_insertion_point(destructor:google.logging.v2.WriteLogEntriesPartialErrors)
  SharedDtor();
}

void WriteLogEntriesPartialErrors::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
}

void WriteLogEntriesPartialErrors::ArenaDtor(void* object) {
  WriteLogEntriesPartialErrors* _this = reinterpret_cast< WriteLogEntriesPartialErrors* >(object);
  (void)_this;
}
void WriteLogEntriesPartialErrors::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WriteLogEntriesPartialErrors::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WriteLogEntriesPartialErrors& WriteLogEntriesPartialErrors::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WriteLogEntriesPartialErrors_google_2flogging_2fv2_2flogging_2eproto.base);
  return *internal_default_instance();
}


void WriteLogEntriesPartialErrors::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.WriteLogEntriesPartialErrors)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  log_entry_errors_.Clear();
  _internal_metadata_.Clear();
}

const char* WriteLogEntriesPartialErrors::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<int32, .google.rpc.Status> log_entry_errors = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&log_entry_errors_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WriteLogEntriesPartialErrors::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.WriteLogEntriesPartialErrors)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, .google.rpc.Status> log_entry_errors = 1;
  if (!this->_internal_log_entry_errors().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::google::rpc::Status >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_log_entry_errors().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_log_entry_errors().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::google::rpc::Status >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::google::rpc::Status >::const_iterator
          it = this->_internal_log_entry_errors().begin();
          it != this->_internal_log_entry_errors().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::google::rpc::Status >::const_iterator
          it = this->_internal_log_entry_errors().begin();
          it != this->_internal_log_entry_errors().end(); ++it) {
        target = WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.WriteLogEntriesPartialErrors)
  return target;
}

size_t WriteLogEntriesPartialErrors::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.WriteLogEntriesPartialErrors)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<int32, .google.rpc.Status> log_entry_errors = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_log_entry_errors_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::google::rpc::Status >::const_iterator
      it = this->_internal_log_entry_errors().begin();
      it != this->_internal_log_entry_errors().end(); ++it) {
    total_size += WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WriteLogEntriesPartialErrors::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.WriteLogEntriesPartialErrors)
  GOOGLE_DCHECK_NE(&from, this);
  const WriteLogEntriesPartialErrors* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WriteLogEntriesPartialErrors>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.WriteLogEntriesPartialErrors)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.WriteLogEntriesPartialErrors)
    MergeFrom(*source);
  }
}

void WriteLogEntriesPartialErrors::MergeFrom(const WriteLogEntriesPartialErrors& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.WriteLogEntriesPartialErrors)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  log_entry_errors_.MergeFrom(from.log_entry_errors_);
}

void WriteLogEntriesPartialErrors::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.WriteLogEntriesPartialErrors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WriteLogEntriesPartialErrors::CopyFrom(const WriteLogEntriesPartialErrors& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.WriteLogEntriesPartialErrors)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WriteLogEntriesPartialErrors::IsInitialized() const {
  return true;
}

void WriteLogEntriesPartialErrors::InternalSwap(WriteLogEntriesPartialErrors* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  log_entry_errors_.Swap(&other->log_entry_errors_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WriteLogEntriesPartialErrors::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListLogEntriesRequest::InitAsDefaultInstance() {
}
class ListLogEntriesRequest::_Internal {
 public:
};

ListLogEntriesRequest::ListLogEntriesRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListLogEntriesRequest)
}
ListLogEntriesRequest::ListLogEntriesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  project_ids_(arena),
  resource_names_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListLogEntriesRequest)
}
ListLogEntriesRequest::ListLogEntriesRequest(const ListLogEntriesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      project_ids_(from.project_ids_),
      resource_names_(from.resource_names_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_filter().empty()) {
    filter_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_filter(),
      GetArenaNoVirtual());
  }
  order_by_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_order_by().empty()) {
    order_by_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_order_by(),
      GetArenaNoVirtual());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_page_token().empty()) {
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_page_token(),
      GetArenaNoVirtual());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListLogEntriesRequest)
}

void ListLogEntriesRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  filter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_by_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListLogEntriesRequest::~ListLogEntriesRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListLogEntriesRequest)
  SharedDtor();
}

void ListLogEntriesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  filter_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_by_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListLogEntriesRequest::ArenaDtor(void* object) {
  ListLogEntriesRequest* _this = reinterpret_cast< ListLogEntriesRequest* >(object);
  (void)_this;
}
void ListLogEntriesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListLogEntriesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListLogEntriesRequest& ListLogEntriesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListLogEntriesRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  return *internal_default_instance();
}


void ListLogEntriesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListLogEntriesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  project_ids_.Clear();
  resource_names_.Clear();
  filter_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  order_by_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

const char* ListLogEntriesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string project_ids = 1 [deprecated = true];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_add_project_ids(), ptr, ctx, "google.logging.v2.ListLogEntriesRequest.project_ids");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string filter = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_filter(), ptr, ctx, "google.logging.v2.ListLogEntriesRequest.filter");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string order_by = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_order_by(), ptr, ctx, "google.logging.v2.ListLogEntriesRequest.order_by");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 page_size = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string page_token = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_page_token(), ptr, ctx, "google.logging.v2.ListLogEntriesRequest.page_token");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string resource_names = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_add_resource_names(), ptr, ctx, "google.logging.v2.ListLogEntriesRequest.resource_names");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListLogEntriesRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListLogEntriesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string project_ids = 1 [deprecated = true];
  for (int i = 0, n = this->_internal_project_ids_size(); i < n; i++) {
    const auto& s = this->_internal_project_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesRequest.project_ids");
    target = stream->WriteString(1, s, target);
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filter().data(), static_cast<int>(this->_internal_filter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesRequest.filter");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_filter(), target);
  }

  // string order_by = 3;
  if (this->order_by().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order_by().data(), static_cast<int>(this->_internal_order_by().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesRequest.order_by");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_order_by(), target);
  }

  // int32 page_size = 4;
  if (this->page_size() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_page_size(), target);
  }

  // string page_token = 5;
  if (this->page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_page_token(), target);
  }

  // repeated string resource_names = 8;
  for (int i = 0, n = this->_internal_resource_names_size(); i < n; i++) {
    const auto& s = this->_internal_resource_names(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesRequest.resource_names");
    target = stream->WriteString(8, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListLogEntriesRequest)
  return target;
}

size_t ListLogEntriesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListLogEntriesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string project_ids = 1 [deprecated = true];
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(project_ids_.size());
  for (int i = 0, n = project_ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      project_ids_.Get(i));
  }

  // repeated string resource_names = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(resource_names_.size());
  for (int i = 0, n = resource_names_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      resource_names_.Get(i));
  }

  // string filter = 2;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filter());
  }

  // string order_by = 3;
  if (this->order_by().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order_by());
  }

  // string page_token = 5;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 4;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_page_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListLogEntriesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListLogEntriesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListLogEntriesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListLogEntriesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListLogEntriesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListLogEntriesRequest)
    MergeFrom(*source);
  }
}

void ListLogEntriesRequest::MergeFrom(const ListLogEntriesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListLogEntriesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  project_ids_.MergeFrom(from.project_ids_);
  resource_names_.MergeFrom(from.resource_names_);
  if (from.filter().size() > 0) {
    _internal_set_filter(from._internal_filter());
  }
  if (from.order_by().size() > 0) {
    _internal_set_order_by(from._internal_order_by());
  }
  if (from.page_token().size() > 0) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from.page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
}

void ListLogEntriesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListLogEntriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListLogEntriesRequest::CopyFrom(const ListLogEntriesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListLogEntriesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListLogEntriesRequest::IsInitialized() const {
  return true;
}

void ListLogEntriesRequest::InternalSwap(ListLogEntriesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  project_ids_.InternalSwap(&other->project_ids_);
  resource_names_.InternalSwap(&other->resource_names_);
  filter_.Swap(&other->filter_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  order_by_.Swap(&other->order_by_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListLogEntriesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListLogEntriesResponse::InitAsDefaultInstance() {
}
class ListLogEntriesResponse::_Internal {
 public:
};

void ListLogEntriesResponse::clear_entries() {
  entries_.Clear();
}
ListLogEntriesResponse::ListLogEntriesResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListLogEntriesResponse)
}
ListLogEntriesResponse::ListLogEntriesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  entries_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListLogEntriesResponse)
}
ListLogEntriesResponse::ListLogEntriesResponse(const ListLogEntriesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_next_page_token(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListLogEntriesResponse)
}

void ListLogEntriesResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto.base);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListLogEntriesResponse::~ListLogEntriesResponse() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListLogEntriesResponse)
  SharedDtor();
}

void ListLogEntriesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListLogEntriesResponse::ArenaDtor(void* object) {
  ListLogEntriesResponse* _this = reinterpret_cast< ListLogEntriesResponse* >(object);
  (void)_this;
}
void ListLogEntriesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListLogEntriesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListLogEntriesResponse& ListLogEntriesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListLogEntriesResponse_google_2flogging_2fv2_2flogging_2eproto.base);
  return *internal_default_instance();
}


void ListLogEntriesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListLogEntriesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  next_page_token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

const char* ListLogEntriesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .google.logging.v2.LogEntry entries = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_next_page_token(), ptr, ctx, "google.logging.v2.ListLogEntriesResponse.next_page_token");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListLogEntriesResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListLogEntriesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogEntry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_entries_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(1, this->_internal_entries(i), target, stream);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogEntriesResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListLogEntriesResponse)
  return target;
}

size_t ListLogEntriesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListLogEntriesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogEntry entries = 1;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListLogEntriesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListLogEntriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListLogEntriesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListLogEntriesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListLogEntriesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListLogEntriesResponse)
    MergeFrom(*source);
  }
}

void ListLogEntriesResponse::MergeFrom(const ListLogEntriesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListLogEntriesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from.next_page_token().size() > 0) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
}

void ListLogEntriesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListLogEntriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListLogEntriesResponse::CopyFrom(const ListLogEntriesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListLogEntriesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListLogEntriesResponse::IsInitialized() const {
  return true;
}

void ListLogEntriesResponse::InternalSwap(ListLogEntriesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  entries_.InternalSwap(&other->entries_);
  next_page_token_.Swap(&other->next_page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListLogEntriesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListMonitoredResourceDescriptorsRequest::InitAsDefaultInstance() {
}
class ListMonitoredResourceDescriptorsRequest::_Internal {
 public:
};

ListMonitoredResourceDescriptorsRequest::ListMonitoredResourceDescriptorsRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
}
ListMonitoredResourceDescriptorsRequest::ListMonitoredResourceDescriptorsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
}
ListMonitoredResourceDescriptorsRequest::ListMonitoredResourceDescriptorsRequest(const ListMonitoredResourceDescriptorsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_page_token().empty()) {
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_page_token(),
      GetArenaNoVirtual());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
}

void ListMonitoredResourceDescriptorsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListMonitoredResourceDescriptorsRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListMonitoredResourceDescriptorsRequest::~ListMonitoredResourceDescriptorsRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  SharedDtor();
}

void ListMonitoredResourceDescriptorsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListMonitoredResourceDescriptorsRequest::ArenaDtor(void* object) {
  ListMonitoredResourceDescriptorsRequest* _this = reinterpret_cast< ListMonitoredResourceDescriptorsRequest* >(object);
  (void)_this;
}
void ListMonitoredResourceDescriptorsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListMonitoredResourceDescriptorsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListMonitoredResourceDescriptorsRequest& ListMonitoredResourceDescriptorsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListMonitoredResourceDescriptorsRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  return *internal_default_instance();
}


void ListMonitoredResourceDescriptorsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  page_token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

const char* ListMonitoredResourceDescriptorsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 page_size = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_page_token(), ptr, ctx, "google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListMonitoredResourceDescriptorsRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 page_size = 1;
  if (this->page_size() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_page_size(), target);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListMonitoredResourceDescriptorsRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  return target;
}

size_t ListMonitoredResourceDescriptorsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 1;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_page_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListMonitoredResourceDescriptorsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListMonitoredResourceDescriptorsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListMonitoredResourceDescriptorsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
    MergeFrom(*source);
  }
}

void ListMonitoredResourceDescriptorsRequest::MergeFrom(const ListMonitoredResourceDescriptorsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.page_token().size() > 0) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from.page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
}

void ListMonitoredResourceDescriptorsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListMonitoredResourceDescriptorsRequest::CopyFrom(const ListMonitoredResourceDescriptorsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListMonitoredResourceDescriptorsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListMonitoredResourceDescriptorsRequest::IsInitialized() const {
  return true;
}

void ListMonitoredResourceDescriptorsRequest::InternalSwap(ListMonitoredResourceDescriptorsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  page_token_.Swap(&other->page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListMonitoredResourceDescriptorsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListMonitoredResourceDescriptorsResponse::InitAsDefaultInstance() {
}
class ListMonitoredResourceDescriptorsResponse::_Internal {
 public:
};

void ListMonitoredResourceDescriptorsResponse::clear_resource_descriptors() {
  resource_descriptors_.Clear();
}
ListMonitoredResourceDescriptorsResponse::ListMonitoredResourceDescriptorsResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
}
ListMonitoredResourceDescriptorsResponse::ListMonitoredResourceDescriptorsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  resource_descriptors_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
}
ListMonitoredResourceDescriptorsResponse::ListMonitoredResourceDescriptorsResponse(const ListMonitoredResourceDescriptorsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      resource_descriptors_(from.resource_descriptors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_next_page_token(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
}

void ListMonitoredResourceDescriptorsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListMonitoredResourceDescriptorsResponse_google_2flogging_2fv2_2flogging_2eproto.base);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListMonitoredResourceDescriptorsResponse::~ListMonitoredResourceDescriptorsResponse() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  SharedDtor();
}

void ListMonitoredResourceDescriptorsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListMonitoredResourceDescriptorsResponse::ArenaDtor(void* object) {
  ListMonitoredResourceDescriptorsResponse* _this = reinterpret_cast< ListMonitoredResourceDescriptorsResponse* >(object);
  (void)_this;
}
void ListMonitoredResourceDescriptorsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListMonitoredResourceDescriptorsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListMonitoredResourceDescriptorsResponse& ListMonitoredResourceDescriptorsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListMonitoredResourceDescriptorsResponse_google_2flogging_2fv2_2flogging_2eproto.base);
  return *internal_default_instance();
}


void ListMonitoredResourceDescriptorsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_descriptors_.Clear();
  next_page_token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

const char* ListMonitoredResourceDescriptorsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_resource_descriptors(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_next_page_token(), ptr, ctx, "google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListMonitoredResourceDescriptorsResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_resource_descriptors_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(1, this->_internal_resource_descriptors(i), target, stream);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListMonitoredResourceDescriptorsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  return target;
}

size_t ListMonitoredResourceDescriptorsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.MonitoredResourceDescriptor resource_descriptors = 1;
  total_size += 1UL * this->_internal_resource_descriptors_size();
  for (const auto& msg : this->resource_descriptors_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListMonitoredResourceDescriptorsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListMonitoredResourceDescriptorsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListMonitoredResourceDescriptorsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
    MergeFrom(*source);
  }
}

void ListMonitoredResourceDescriptorsResponse::MergeFrom(const ListMonitoredResourceDescriptorsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resource_descriptors_.MergeFrom(from.resource_descriptors_);
  if (from.next_page_token().size() > 0) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
}

void ListMonitoredResourceDescriptorsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListMonitoredResourceDescriptorsResponse::CopyFrom(const ListMonitoredResourceDescriptorsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListMonitoredResourceDescriptorsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListMonitoredResourceDescriptorsResponse::IsInitialized() const {
  return true;
}

void ListMonitoredResourceDescriptorsResponse::InternalSwap(ListMonitoredResourceDescriptorsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  resource_descriptors_.InternalSwap(&other->resource_descriptors_);
  next_page_token_.Swap(&other->next_page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListMonitoredResourceDescriptorsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListLogsRequest::InitAsDefaultInstance() {
}
class ListLogsRequest::_Internal {
 public:
};

ListLogsRequest::ListLogsRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListLogsRequest)
}
ListLogsRequest::ListLogsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListLogsRequest)
}
ListLogsRequest::ListLogsRequest(const ListLogsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_parent().empty()) {
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_parent(),
      GetArenaNoVirtual());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_page_token().empty()) {
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_page_token(),
      GetArenaNoVirtual());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListLogsRequest)
}

void ListLogsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListLogsRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListLogsRequest::~ListLogsRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListLogsRequest)
  SharedDtor();
}

void ListLogsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListLogsRequest::ArenaDtor(void* object) {
  ListLogsRequest* _this = reinterpret_cast< ListLogsRequest* >(object);
  (void)_this;
}
void ListLogsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListLogsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListLogsRequest& ListLogsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListLogsRequest_google_2flogging_2fv2_2flogging_2eproto.base);
  return *internal_default_instance();
}


void ListLogsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListLogsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

const char* ListLogsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string parent = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_parent(), ptr, ctx, "google.logging.v2.ListLogsRequest.parent");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 page_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string page_token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_page_token(), ptr, ctx, "google.logging.v2.ListLogsRequest.page_token");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListLogsRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListLogsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogsRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_page_size(), target);
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogsRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListLogsRequest)
  return target;
}

size_t ListLogsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListLogsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 3;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_page_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListLogsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListLogsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListLogsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListLogsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListLogsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListLogsRequest)
    MergeFrom(*source);
  }
}

void ListLogsRequest::MergeFrom(const ListLogsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListLogsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    _internal_set_parent(from._internal_parent());
  }
  if (from.page_token().size() > 0) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from.page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
}

void ListLogsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListLogsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListLogsRequest::CopyFrom(const ListLogsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListLogsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListLogsRequest::IsInitialized() const {
  return true;
}

void ListLogsRequest::InternalSwap(ListLogsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListLogsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListLogsResponse::InitAsDefaultInstance() {
}
class ListLogsResponse::_Internal {
 public:
};

ListLogsResponse::ListLogsResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListLogsResponse)
}
ListLogsResponse::ListLogsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  log_names_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListLogsResponse)
}
ListLogsResponse::ListLogsResponse(const ListLogsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      log_names_(from.log_names_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_next_page_token(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListLogsResponse)
}

void ListLogsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListLogsResponse_google_2flogging_2fv2_2flogging_2eproto.base);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListLogsResponse::~ListLogsResponse() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListLogsResponse)
  SharedDtor();
}

void ListLogsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListLogsResponse::ArenaDtor(void* object) {
  ListLogsResponse* _this = reinterpret_cast< ListLogsResponse* >(object);
  (void)_this;
}
void ListLogsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListLogsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListLogsResponse& ListLogsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListLogsResponse_google_2flogging_2fv2_2flogging_2eproto.base);
  return *internal_default_instance();
}


void ListLogsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListLogsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  log_names_.Clear();
  next_page_token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

const char* ListLogsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_next_page_token(), ptr, ctx, "google.logging.v2.ListLogsResponse.next_page_token");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string log_names = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_add_log_names(), ptr, ctx, "google.logging.v2.ListLogsResponse.log_names");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListLogsResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListLogsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  // repeated string log_names = 3;
  for (int i = 0, n = this->_internal_log_names_size(); i < n; i++) {
    const auto& s = this->_internal_log_names(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogsResponse.log_names");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListLogsResponse)
  return target;
}

size_t ListLogsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListLogsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string log_names = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(log_names_.size());
  for (int i = 0, n = log_names_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      log_names_.Get(i));
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListLogsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListLogsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListLogsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListLogsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListLogsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListLogsResponse)
    MergeFrom(*source);
  }
}

void ListLogsResponse::MergeFrom(const ListLogsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListLogsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  log_names_.MergeFrom(from.log_names_);
  if (from.next_page_token().size() > 0) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
}

void ListLogsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListLogsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListLogsResponse::CopyFrom(const ListLogsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListLogsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListLogsResponse::IsInitialized() const {
  return true;
}

void ListLogsResponse::InternalSwap(ListLogsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  log_names_.InternalSwap(&other->log_names_);
  next_page_token_.Swap(&other->next_page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListLogsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace logging
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::logging::v2::DeleteLogRequest* Arena::CreateMaybeMessage< ::google::logging::v2::DeleteLogRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::DeleteLogRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::WriteLogEntriesRequest_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::logging::v2::WriteLogEntriesRequest_LabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::WriteLogEntriesRequest_LabelsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::WriteLogEntriesRequest* Arena::CreateMaybeMessage< ::google::logging::v2::WriteLogEntriesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::WriteLogEntriesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::WriteLogEntriesResponse* Arena::CreateMaybeMessage< ::google::logging::v2::WriteLogEntriesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::WriteLogEntriesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::logging::v2::WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::WriteLogEntriesPartialErrors_LogEntryErrorsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::WriteLogEntriesPartialErrors* Arena::CreateMaybeMessage< ::google::logging::v2::WriteLogEntriesPartialErrors >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::WriteLogEntriesPartialErrors >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::ListLogEntriesRequest* Arena::CreateMaybeMessage< ::google::logging::v2::ListLogEntriesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::ListLogEntriesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::ListLogEntriesResponse* Arena::CreateMaybeMessage< ::google::logging::v2::ListLogEntriesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::ListLogEntriesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::ListMonitoredResourceDescriptorsRequest* Arena::CreateMaybeMessage< ::google::logging::v2::ListMonitoredResourceDescriptorsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::ListMonitoredResourceDescriptorsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::ListMonitoredResourceDescriptorsResponse* Arena::CreateMaybeMessage< ::google::logging::v2::ListMonitoredResourceDescriptorsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::ListMonitoredResourceDescriptorsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::ListLogsRequest* Arena::CreateMaybeMessage< ::google::logging::v2::ListLogsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::ListLogsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::ListLogsResponse* Arena::CreateMaybeMessage< ::google::logging::v2::ListLogsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::ListLogsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
