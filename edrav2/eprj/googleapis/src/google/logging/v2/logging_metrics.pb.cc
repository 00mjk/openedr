// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/logging/v2/logging_metrics.proto

#include "google/logging/v2/logging_metrics.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fdistribution_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Distribution_BucketOptions_google_2fapi_2fdistribution_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fmetric_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_MetricDescriptor_google_2fapi_2fmetric_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2flogging_2fv2_2flogging_5fmetrics_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_LogMetric_google_2flogging_2fv2_2flogging_5fmetrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2flogging_2fv2_2flogging_5fmetrics_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LogMetric_LabelExtractorsEntry_DoNotUse_google_2flogging_2fv2_2flogging_5fmetrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace google {
namespace logging {
namespace v2 {
class LogMetric_LabelExtractorsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LogMetric_LabelExtractorsEntry_DoNotUse> _instance;
} _LogMetric_LabelExtractorsEntry_DoNotUse_default_instance_;
class LogMetricDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LogMetric> _instance;
} _LogMetric_default_instance_;
class ListLogMetricsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListLogMetricsRequest> _instance;
} _ListLogMetricsRequest_default_instance_;
class ListLogMetricsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListLogMetricsResponse> _instance;
} _ListLogMetricsResponse_default_instance_;
class GetLogMetricRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetLogMetricRequest> _instance;
} _GetLogMetricRequest_default_instance_;
class CreateLogMetricRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateLogMetricRequest> _instance;
} _CreateLogMetricRequest_default_instance_;
class UpdateLogMetricRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateLogMetricRequest> _instance;
} _UpdateLogMetricRequest_default_instance_;
class DeleteLogMetricRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteLogMetricRequest> _instance;
} _DeleteLogMetricRequest_default_instance_;
}  // namespace v2
}  // namespace logging
}  // namespace google
static void InitDefaultsscc_info_CreateLogMetricRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_CreateLogMetricRequest_default_instance_;
    new (ptr) ::google::logging::v2::CreateLogMetricRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::CreateLogMetricRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateLogMetricRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateLogMetricRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto}, {
      &scc_info_LogMetric_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base,}};

static void InitDefaultsscc_info_DeleteLogMetricRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_DeleteLogMetricRequest_default_instance_;
    new (ptr) ::google::logging::v2::DeleteLogMetricRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::DeleteLogMetricRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteLogMetricRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteLogMetricRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto}, {}};

static void InitDefaultsscc_info_GetLogMetricRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_GetLogMetricRequest_default_instance_;
    new (ptr) ::google::logging::v2::GetLogMetricRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::GetLogMetricRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetLogMetricRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetLogMetricRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto}, {}};

static void InitDefaultsscc_info_ListLogMetricsRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_ListLogMetricsRequest_default_instance_;
    new (ptr) ::google::logging::v2::ListLogMetricsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListLogMetricsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListLogMetricsRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListLogMetricsRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto}, {}};

static void InitDefaultsscc_info_ListLogMetricsResponse_google_2flogging_2fv2_2flogging_5fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_ListLogMetricsResponse_default_instance_;
    new (ptr) ::google::logging::v2::ListLogMetricsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::ListLogMetricsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListLogMetricsResponse_google_2flogging_2fv2_2flogging_5fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListLogMetricsResponse_google_2flogging_2fv2_2flogging_5fmetrics_2eproto}, {
      &scc_info_LogMetric_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base,}};

static void InitDefaultsscc_info_LogMetric_google_2flogging_2fv2_2flogging_5fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_LogMetric_default_instance_;
    new (ptr) ::google::logging::v2::LogMetric();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::LogMetric::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_LogMetric_google_2flogging_2fv2_2flogging_5fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_LogMetric_google_2flogging_2fv2_2flogging_5fmetrics_2eproto}, {
      &scc_info_MetricDescriptor_google_2fapi_2fmetric_2eproto.base,
      &scc_info_LogMetric_LabelExtractorsEntry_DoNotUse_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base,
      &scc_info_Distribution_BucketOptions_google_2fapi_2fdistribution_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_LogMetric_LabelExtractorsEntry_DoNotUse_google_2flogging_2fv2_2flogging_5fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_LogMetric_LabelExtractorsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::logging::v2::LogMetric_LabelExtractorsEntry_DoNotUse();
  }
  ::google::logging::v2::LogMetric_LabelExtractorsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LogMetric_LabelExtractorsEntry_DoNotUse_google_2flogging_2fv2_2flogging_5fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LogMetric_LabelExtractorsEntry_DoNotUse_google_2flogging_2fv2_2flogging_5fmetrics_2eproto}, {}};

static void InitDefaultsscc_info_UpdateLogMetricRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::logging::v2::_UpdateLogMetricRequest_default_instance_;
    new (ptr) ::google::logging::v2::UpdateLogMetricRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::logging::v2::UpdateLogMetricRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UpdateLogMetricRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UpdateLogMetricRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto}, {
      &scc_info_LogMetric_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_google_2flogging_2fv2_2flogging_5fmetrics_2eproto[8];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_google_2flogging_2fv2_2flogging_5fmetrics_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_google_2flogging_2fv2_2flogging_5fmetrics_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogMetric_LabelExtractorsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogMetric_LabelExtractorsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogMetric_LabelExtractorsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogMetric_LabelExtractorsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogMetric, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogMetric, name_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogMetric, description_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogMetric, filter_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogMetric, metric_descriptor_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogMetric, value_extractor_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogMetric, label_extractors_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogMetric, bucket_options_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogMetric, create_time_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogMetric, update_time_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::LogMetric, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogMetricsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogMetricsRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogMetricsRequest, page_token_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogMetricsRequest, page_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogMetricsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogMetricsResponse, metrics_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::ListLogMetricsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::GetLogMetricRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::GetLogMetricRequest, metric_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::CreateLogMetricRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::CreateLogMetricRequest, parent_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::CreateLogMetricRequest, metric_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UpdateLogMetricRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UpdateLogMetricRequest, metric_name_),
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::UpdateLogMetricRequest, metric_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::DeleteLogMetricRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::logging::v2::DeleteLogMetricRequest, metric_name_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::google::logging::v2::LogMetric_LabelExtractorsEntry_DoNotUse)},
  { 9, -1, sizeof(::google::logging::v2::LogMetric)},
  { 24, -1, sizeof(::google::logging::v2::ListLogMetricsRequest)},
  { 32, -1, sizeof(::google::logging::v2::ListLogMetricsResponse)},
  { 39, -1, sizeof(::google::logging::v2::GetLogMetricRequest)},
  { 45, -1, sizeof(::google::logging::v2::CreateLogMetricRequest)},
  { 52, -1, sizeof(::google::logging::v2::UpdateLogMetricRequest)},
  { 59, -1, sizeof(::google::logging::v2::DeleteLogMetricRequest)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::logging::v2::_LogMetric_LabelExtractorsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::logging::v2::_LogMetric_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::logging::v2::_ListLogMetricsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::logging::v2::_ListLogMetricsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::logging::v2::_GetLogMetricRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::logging::v2::_CreateLogMetricRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::logging::v2::_UpdateLogMetricRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::logging::v2::_DeleteLogMetricRequest_default_instance_),
};

const char descriptor_table_protodef_google_2flogging_2fv2_2flogging_5fmetrics_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\'google/logging/v2/logging_metrics.prot"
  "o\022\021google.logging.v2\032\035google/api/distrib"
  "ution.proto\032\027google/api/metric.proto\032\033go"
  "ogle/protobuf/empty.proto\032 google/protob"
  "uf/field_mask.proto\032\037google/protobuf/tim"
  "estamp.proto\032\034google/api/annotations.pro"
  "to\032\027google/api/client.proto\"\223\004\n\tLogMetri"
  "c\022\014\n\004name\030\001 \001(\t\022\023\n\013description\030\002 \001(\t\022\016\n\006"
  "filter\030\003 \001(\t\0227\n\021metric_descriptor\030\005 \001(\0132"
  "\034.google.api.MetricDescriptor\022\027\n\017value_e"
  "xtractor\030\006 \001(\t\022K\n\020label_extractors\030\007 \003(\013"
  "21.google.logging.v2.LogMetric.LabelExtr"
  "actorsEntry\022>\n\016bucket_options\030\010 \001(\0132&.go"
  "ogle.api.Distribution.BucketOptions\022/\n\013c"
  "reate_time\030\t \001(\0132\032.google.protobuf.Times"
  "tamp\022/\n\013update_time\030\n \001(\0132\032.google.proto"
  "buf.Timestamp\022<\n\007version\030\004 \001(\0162\'.google."
  "logging.v2.LogMetric.ApiVersionB\002\030\001\0326\n\024L"
  "abelExtractorsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005valu"
  "e\030\002 \001(\t:\0028\001\"\034\n\nApiVersion\022\006\n\002V2\020\000\022\006\n\002V1\020"
  "\001\"N\n\025ListLogMetricsRequest\022\016\n\006parent\030\001 \001"
  "(\t\022\022\n\npage_token\030\002 \001(\t\022\021\n\tpage_size\030\003 \001("
  "\005\"`\n\026ListLogMetricsResponse\022-\n\007metrics\030\001"
  " \003(\0132\034.google.logging.v2.LogMetric\022\027\n\017ne"
  "xt_page_token\030\002 \001(\t\"*\n\023GetLogMetricReque"
  "st\022\023\n\013metric_name\030\001 \001(\t\"V\n\026CreateLogMetr"
  "icRequest\022\016\n\006parent\030\001 \001(\t\022,\n\006metric\030\002 \001("
  "\0132\034.google.logging.v2.LogMetric\"[\n\026Updat"
  "eLogMetricRequest\022\023\n\013metric_name\030\001 \001(\t\022,"
  "\n\006metric\030\002 \001(\0132\034.google.logging.v2.LogMe"
  "tric\"-\n\026DeleteLogMetricRequest\022\023\n\013metric"
  "_name\030\001 \001(\t2\344\007\n\020MetricsServiceV2\022\216\001\n\016Lis"
  "tLogMetrics\022(.google.logging.v2.ListLogM"
  "etricsRequest\032).google.logging.v2.ListLo"
  "gMetricsResponse\"\'\202\323\344\223\002!\022\037/v2/{parent=pr"
  "ojects/*}/metrics\022\204\001\n\014GetLogMetric\022&.goo"
  "gle.logging.v2.GetLogMetricRequest\032\034.goo"
  "gle.logging.v2.LogMetric\".\202\323\344\223\002(\022&/v2/{m"
  "etric_name=projects/*/metrics/*}\022\213\001\n\017Cre"
  "ateLogMetric\022).google.logging.v2.CreateL"
  "ogMetricRequest\032\034.google.logging.v2.LogM"
  "etric\"/\202\323\344\223\002)\"\037/v2/{parent=projects/*}/m"
  "etrics:\006metric\022\222\001\n\017UpdateLogMetric\022).goo"
  "gle.logging.v2.UpdateLogMetricRequest\032\034."
  "google.logging.v2.LogMetric\"6\202\323\344\223\0020\032&/v2"
  "/{metric_name=projects/*/metrics/*}:\006met"
  "ric\022\204\001\n\017DeleteLogMetric\022).google.logging"
  ".v2.DeleteLogMetricRequest\032\026.google.prot"
  "obuf.Empty\".\202\323\344\223\002(*&/v2/{metric_name=pro"
  "jects/*/metrics/*}\032\215\002\312A\026logging.googleap"
  "is.com\322A\360\001https://www.googleapis.com/aut"
  "h/cloud-platform,https://www.googleapis."
  "com/auth/cloud-platform.read-only,https:"
  "//www.googleapis.com/auth/logging.admin,"
  "https://www.googleapis.com/auth/logging."
  "read,https://www.googleapis.com/auth/log"
  "ging.writeB\237\001\n\025com.google.logging.v2B\023Lo"
  "ggingMetricsProtoP\001Z8google.golang.org/g"
  "enproto/googleapis/logging/v2;logging\370\001\001"
  "\252\002\027Google.Cloud.Logging.V2\312\002\027Google\\Clou"
  "d\\Logging\\V2b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_google_2flogging_2fv2_2flogging_5fmetrics_2eproto_deps[7] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fapi_2fclient_2eproto,
  &::descriptor_table_google_2fapi_2fdistribution_2eproto,
  &::descriptor_table_google_2fapi_2fmetric_2eproto,
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
  &::descriptor_table_google_2fprotobuf_2ffield_5fmask_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_google_2flogging_2fv2_2flogging_5fmetrics_2eproto_sccs[8] = {
  &scc_info_CreateLogMetricRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base,
  &scc_info_DeleteLogMetricRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base,
  &scc_info_GetLogMetricRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base,
  &scc_info_ListLogMetricsRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base,
  &scc_info_ListLogMetricsResponse_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base,
  &scc_info_LogMetric_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base,
  &scc_info_LogMetric_LabelExtractorsEntry_DoNotUse_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base,
  &scc_info_UpdateLogMetricRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_google_2flogging_2fv2_2flogging_5fmetrics_2eproto_once;
static bool descriptor_table_google_2flogging_2fv2_2flogging_5fmetrics_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2flogging_2fv2_2flogging_5fmetrics_2eproto = {
  &descriptor_table_google_2flogging_2fv2_2flogging_5fmetrics_2eproto_initialized, descriptor_table_protodef_google_2flogging_2fv2_2flogging_5fmetrics_2eproto, "google/logging/v2/logging_metrics.proto", 2420,
  &descriptor_table_google_2flogging_2fv2_2flogging_5fmetrics_2eproto_once, descriptor_table_google_2flogging_2fv2_2flogging_5fmetrics_2eproto_sccs, descriptor_table_google_2flogging_2fv2_2flogging_5fmetrics_2eproto_deps, 8, 7,
  schemas, file_default_instances, TableStruct_google_2flogging_2fv2_2flogging_5fmetrics_2eproto::offsets,
  file_level_metadata_google_2flogging_2fv2_2flogging_5fmetrics_2eproto, 8, file_level_enum_descriptors_google_2flogging_2fv2_2flogging_5fmetrics_2eproto, file_level_service_descriptors_google_2flogging_2fv2_2flogging_5fmetrics_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2flogging_2fv2_2flogging_5fmetrics_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_google_2flogging_2fv2_2flogging_5fmetrics_2eproto), true);
namespace google {
namespace logging {
namespace v2 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* LogMetric_ApiVersion_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2flogging_2fv2_2flogging_5fmetrics_2eproto);
  return file_level_enum_descriptors_google_2flogging_2fv2_2flogging_5fmetrics_2eproto[0];
}
bool LogMetric_ApiVersion_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr LogMetric_ApiVersion LogMetric::V2;
constexpr LogMetric_ApiVersion LogMetric::V1;
constexpr LogMetric_ApiVersion LogMetric::ApiVersion_MIN;
constexpr LogMetric_ApiVersion LogMetric::ApiVersion_MAX;
constexpr int LogMetric::ApiVersion_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

LogMetric_LabelExtractorsEntry_DoNotUse::LogMetric_LabelExtractorsEntry_DoNotUse() {}
LogMetric_LabelExtractorsEntry_DoNotUse::LogMetric_LabelExtractorsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void LogMetric_LabelExtractorsEntry_DoNotUse::MergeFrom(const LogMetric_LabelExtractorsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata LogMetric_LabelExtractorsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void LogMetric_LabelExtractorsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void LogMetric::InitAsDefaultInstance() {
  ::google::logging::v2::_LogMetric_default_instance_._instance.get_mutable()->metric_descriptor_ = const_cast< ::google::api::MetricDescriptor*>(
      ::google::api::MetricDescriptor::internal_default_instance());
  ::google::logging::v2::_LogMetric_default_instance_._instance.get_mutable()->bucket_options_ = const_cast< ::google::api::Distribution_BucketOptions*>(
      ::google::api::Distribution_BucketOptions::internal_default_instance());
  ::google::logging::v2::_LogMetric_default_instance_._instance.get_mutable()->create_time_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::google::logging::v2::_LogMetric_default_instance_._instance.get_mutable()->update_time_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class LogMetric::_Internal {
 public:
  static const ::google::api::MetricDescriptor& metric_descriptor(const LogMetric* msg);
  static const ::google::api::Distribution_BucketOptions& bucket_options(const LogMetric* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& create_time(const LogMetric* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& update_time(const LogMetric* msg);
};

const ::google::api::MetricDescriptor&
LogMetric::_Internal::metric_descriptor(const LogMetric* msg) {
  return *msg->metric_descriptor_;
}
const ::google::api::Distribution_BucketOptions&
LogMetric::_Internal::bucket_options(const LogMetric* msg) {
  return *msg->bucket_options_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
LogMetric::_Internal::create_time(const LogMetric* msg) {
  return *msg->create_time_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
LogMetric::_Internal::update_time(const LogMetric* msg) {
  return *msg->update_time_;
}
void LogMetric::unsafe_arena_set_allocated_metric_descriptor(
    ::google::api::MetricDescriptor* metric_descriptor) {
  if (GetArenaNoVirtual() == nullptr) {
    delete metric_descriptor_;
  }
  metric_descriptor_ = metric_descriptor;
  if (metric_descriptor) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.LogMetric.metric_descriptor)
}
void LogMetric::clear_metric_descriptor() {
  if (GetArenaNoVirtual() == nullptr && metric_descriptor_ != nullptr) {
    delete metric_descriptor_;
  }
  metric_descriptor_ = nullptr;
}
void LogMetric::unsafe_arena_set_allocated_bucket_options(
    ::google::api::Distribution_BucketOptions* bucket_options) {
  if (GetArenaNoVirtual() == nullptr) {
    delete bucket_options_;
  }
  bucket_options_ = bucket_options;
  if (bucket_options) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.LogMetric.bucket_options)
}
void LogMetric::clear_bucket_options() {
  if (GetArenaNoVirtual() == nullptr && bucket_options_ != nullptr) {
    delete bucket_options_;
  }
  bucket_options_ = nullptr;
}
void LogMetric::unsafe_arena_set_allocated_create_time(
    PROTOBUF_NAMESPACE_ID::Timestamp* create_time) {
  if (GetArenaNoVirtual() == nullptr) {
    delete create_time_;
  }
  create_time_ = create_time;
  if (create_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.LogMetric.create_time)
}
void LogMetric::clear_create_time() {
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
}
void LogMetric::unsafe_arena_set_allocated_update_time(
    PROTOBUF_NAMESPACE_ID::Timestamp* update_time) {
  if (GetArenaNoVirtual() == nullptr) {
    delete update_time_;
  }
  update_time_ = update_time;
  if (update_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.LogMetric.update_time)
}
void LogMetric::clear_update_time() {
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
}
LogMetric::LogMetric()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.LogMetric)
}
LogMetric::LogMetric(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  label_extractors_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.LogMetric)
}
LogMetric::LogMetric(const LogMetric& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  label_extractors_.MergeFrom(from.label_extractors_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArenaNoVirtual());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArenaNoVirtual());
  }
  filter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_filter().empty()) {
    filter_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_filter(),
      GetArenaNoVirtual());
  }
  value_extractor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value_extractor().empty()) {
    value_extractor_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value_extractor(),
      GetArenaNoVirtual());
  }
  if (from._internal_has_metric_descriptor()) {
    metric_descriptor_ = new ::google::api::MetricDescriptor(*from.metric_descriptor_);
  } else {
    metric_descriptor_ = nullptr;
  }
  if (from._internal_has_bucket_options()) {
    bucket_options_ = new ::google::api::Distribution_BucketOptions(*from.bucket_options_);
  } else {
    bucket_options_ = nullptr;
  }
  if (from._internal_has_create_time()) {
    create_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.create_time_);
  } else {
    create_time_ = nullptr;
  }
  if (from._internal_has_update_time()) {
    update_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.update_time_);
  } else {
    update_time_ = nullptr;
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.LogMetric)
}

void LogMetric::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LogMetric_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_extractor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&metric_descriptor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&metric_descriptor_)) + sizeof(version_));
}

LogMetric::~LogMetric() {
  // @@protoc_insertion_point(destructor:google.logging.v2.LogMetric)
  SharedDtor();
}

void LogMetric::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_extractor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metric_descriptor_;
  if (this != internal_default_instance()) delete bucket_options_;
  if (this != internal_default_instance()) delete create_time_;
  if (this != internal_default_instance()) delete update_time_;
}

void LogMetric::ArenaDtor(void* object) {
  LogMetric* _this = reinterpret_cast< LogMetric* >(object);
  (void)_this;
}
void LogMetric::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LogMetric::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LogMetric& LogMetric::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LogMetric_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base);
  return *internal_default_instance();
}


void LogMetric::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.LogMetric)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  label_extractors_.Clear();
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  filter_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  value_extractor_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && metric_descriptor_ != nullptr) {
    delete metric_descriptor_;
  }
  metric_descriptor_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && bucket_options_ != nullptr) {
    delete bucket_options_;
  }
  bucket_options_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && update_time_ != nullptr) {
    delete update_time_;
  }
  update_time_ = nullptr;
  version_ = 0;
  _internal_metadata_.Clear();
}

const char* LogMetric::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_name(), ptr, ctx, "google.logging.v2.LogMetric.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_description(), ptr, ctx, "google.logging.v2.LogMetric.description");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string filter = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_filter(), ptr, ctx, "google.logging.v2.LogMetric.filter");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.logging.v2.LogMetric.ApiVersion version = 4 [deprecated = true];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_version(static_cast<::google::logging::v2::LogMetric_ApiVersion>(val));
        } else goto handle_unusual;
        continue;
      // .google.api.MetricDescriptor metric_descriptor = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_metric_descriptor(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string value_extractor = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_value_extractor(), ptr, ctx, "google.logging.v2.LogMetric.value_extractor");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> label_extractors = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&label_extractors_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      // .google.api.Distribution.BucketOptions bucket_options = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_bucket_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp create_time = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_create_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp update_time = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_update_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LogMetric::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.LogMetric)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogMetric.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogMetric.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // string filter = 3;
  if (this->filter().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filter().data(), static_cast<int>(this->_internal_filter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogMetric.filter");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_filter(), target);
  }

  // .google.logging.v2.LogMetric.ApiVersion version = 4 [deprecated = true];
  if (this->version() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_version(), target);
  }

  // .google.api.MetricDescriptor metric_descriptor = 5;
  if (this->has_metric_descriptor()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::metric_descriptor(this), target, stream);
  }

  // string value_extractor = 6;
  if (this->value_extractor().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value_extractor().data(), static_cast<int>(this->_internal_value_extractor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.LogMetric.value_extractor");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_value_extractor(), target);
  }

  // map<string, string> label_extractors = 7;
  if (!this->_internal_label_extractors().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.logging.v2.LogMetric.LabelExtractorsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.logging.v2.LogMetric.LabelExtractorsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_label_extractors().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_label_extractors().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_label_extractors().begin();
          it != this->_internal_label_extractors().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = LogMetric_LabelExtractorsEntry_DoNotUse::Funcs::InternalSerialize(7, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_label_extractors().begin();
          it != this->_internal_label_extractors().end(); ++it) {
        target = LogMetric_LabelExtractorsEntry_DoNotUse::Funcs::InternalSerialize(7, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .google.api.Distribution.BucketOptions bucket_options = 8;
  if (this->has_bucket_options()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, _Internal::bucket_options(this), target, stream);
  }

  // .google.protobuf.Timestamp create_time = 9;
  if (this->has_create_time()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, _Internal::create_time(this), target, stream);
  }

  // .google.protobuf.Timestamp update_time = 10;
  if (this->has_update_time()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, _Internal::update_time(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.LogMetric)
  return target;
}

size_t LogMetric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.LogMetric)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> label_extractors = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_label_extractors_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_label_extractors().begin();
      it != this->_internal_label_extractors().end(); ++it) {
    total_size += LogMetric_LabelExtractorsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string filter = 3;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filter());
  }

  // string value_extractor = 6;
  if (this->value_extractor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value_extractor());
  }

  // .google.api.MetricDescriptor metric_descriptor = 5;
  if (this->has_metric_descriptor()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metric_descriptor_);
  }

  // .google.api.Distribution.BucketOptions bucket_options = 8;
  if (this->has_bucket_options()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *bucket_options_);
  }

  // .google.protobuf.Timestamp create_time = 9;
  if (this->has_create_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.protobuf.Timestamp update_time = 10;
  if (this->has_update_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *update_time_);
  }

  // .google.logging.v2.LogMetric.ApiVersion version = 4 [deprecated = true];
  if (this->version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogMetric::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.LogMetric)
  GOOGLE_DCHECK_NE(&from, this);
  const LogMetric* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LogMetric>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.LogMetric)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.LogMetric)
    MergeFrom(*source);
  }
}

void LogMetric::MergeFrom(const LogMetric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.LogMetric)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  label_extractors_.MergeFrom(from.label_extractors_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.filter().size() > 0) {
    _internal_set_filter(from._internal_filter());
  }
  if (from.value_extractor().size() > 0) {
    _internal_set_value_extractor(from._internal_value_extractor());
  }
  if (from.has_metric_descriptor()) {
    _internal_mutable_metric_descriptor()->::google::api::MetricDescriptor::MergeFrom(from._internal_metric_descriptor());
  }
  if (from.has_bucket_options()) {
    _internal_mutable_bucket_options()->::google::api::Distribution_BucketOptions::MergeFrom(from._internal_bucket_options());
  }
  if (from.has_create_time()) {
    _internal_mutable_create_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_create_time());
  }
  if (from.has_update_time()) {
    _internal_mutable_update_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_update_time());
  }
  if (from.version() != 0) {
    _internal_set_version(from._internal_version());
  }
}

void LogMetric::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.LogMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogMetric::CopyFrom(const LogMetric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.LogMetric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogMetric::IsInitialized() const {
  return true;
}

void LogMetric::InternalSwap(LogMetric* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  label_extractors_.Swap(&other->label_extractors_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_.Swap(&other->filter_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_extractor_.Swap(&other->value_extractor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(metric_descriptor_, other->metric_descriptor_);
  swap(bucket_options_, other->bucket_options_);
  swap(create_time_, other->create_time_);
  swap(update_time_, other->update_time_);
  swap(version_, other->version_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LogMetric::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListLogMetricsRequest::InitAsDefaultInstance() {
}
class ListLogMetricsRequest::_Internal {
 public:
};

ListLogMetricsRequest::ListLogMetricsRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListLogMetricsRequest)
}
ListLogMetricsRequest::ListLogMetricsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListLogMetricsRequest)
}
ListLogMetricsRequest::ListLogMetricsRequest(const ListLogMetricsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_parent().empty()) {
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_parent(),
      GetArenaNoVirtual());
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_page_token().empty()) {
    page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_page_token(),
      GetArenaNoVirtual());
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListLogMetricsRequest)
}

void ListLogMetricsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListLogMetricsRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListLogMetricsRequest::~ListLogMetricsRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListLogMetricsRequest)
  SharedDtor();
}

void ListLogMetricsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListLogMetricsRequest::ArenaDtor(void* object) {
  ListLogMetricsRequest* _this = reinterpret_cast< ListLogMetricsRequest* >(object);
  (void)_this;
}
void ListLogMetricsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListLogMetricsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListLogMetricsRequest& ListLogMetricsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListLogMetricsRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base);
  return *internal_default_instance();
}


void ListLogMetricsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListLogMetricsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

const char* ListLogMetricsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string parent = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_parent(), ptr, ctx, "google.logging.v2.ListLogMetricsRequest.parent");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_page_token(), ptr, ctx, "google.logging.v2.ListLogMetricsRequest.page_token");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 page_size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListLogMetricsRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListLogMetricsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogMetricsRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogMetricsRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_page_token(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_page_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListLogMetricsRequest)
  return target;
}

size_t ListLogMetricsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListLogMetricsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_page_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListLogMetricsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListLogMetricsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListLogMetricsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListLogMetricsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListLogMetricsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListLogMetricsRequest)
    MergeFrom(*source);
  }
}

void ListLogMetricsRequest::MergeFrom(const ListLogMetricsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListLogMetricsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    _internal_set_parent(from._internal_parent());
  }
  if (from.page_token().size() > 0) {
    _internal_set_page_token(from._internal_page_token());
  }
  if (from.page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
}

void ListLogMetricsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListLogMetricsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListLogMetricsRequest::CopyFrom(const ListLogMetricsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListLogMetricsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListLogMetricsRequest::IsInitialized() const {
  return true;
}

void ListLogMetricsRequest::InternalSwap(ListLogMetricsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListLogMetricsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListLogMetricsResponse::InitAsDefaultInstance() {
}
class ListLogMetricsResponse::_Internal {
 public:
};

ListLogMetricsResponse::ListLogMetricsResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.ListLogMetricsResponse)
}
ListLogMetricsResponse::ListLogMetricsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  metrics_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.ListLogMetricsResponse)
}
ListLogMetricsResponse::ListLogMetricsResponse(const ListLogMetricsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      metrics_(from.metrics_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_next_page_token(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.ListLogMetricsResponse)
}

void ListLogMetricsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListLogMetricsResponse_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListLogMetricsResponse::~ListLogMetricsResponse() {
  // @@protoc_insertion_point(destructor:google.logging.v2.ListLogMetricsResponse)
  SharedDtor();
}

void ListLogMetricsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListLogMetricsResponse::ArenaDtor(void* object) {
  ListLogMetricsResponse* _this = reinterpret_cast< ListLogMetricsResponse* >(object);
  (void)_this;
}
void ListLogMetricsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListLogMetricsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListLogMetricsResponse& ListLogMetricsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListLogMetricsResponse_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base);
  return *internal_default_instance();
}


void ListLogMetricsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.ListLogMetricsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metrics_.Clear();
  next_page_token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

const char* ListLogMetricsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .google.logging.v2.LogMetric metrics = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_metrics(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_next_page_token(), ptr, ctx, "google.logging.v2.ListLogMetricsResponse.next_page_token");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListLogMetricsResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.ListLogMetricsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogMetric metrics = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_metrics_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(1, this->_internal_metrics(i), target, stream);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.ListLogMetricsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.ListLogMetricsResponse)
  return target;
}

size_t ListLogMetricsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.ListLogMetricsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.logging.v2.LogMetric metrics = 1;
  total_size += 1UL * this->_internal_metrics_size();
  for (const auto& msg : this->metrics_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListLogMetricsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.ListLogMetricsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListLogMetricsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListLogMetricsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.ListLogMetricsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.ListLogMetricsResponse)
    MergeFrom(*source);
  }
}

void ListLogMetricsResponse::MergeFrom(const ListLogMetricsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.ListLogMetricsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metrics_.MergeFrom(from.metrics_);
  if (from.next_page_token().size() > 0) {
    _internal_set_next_page_token(from._internal_next_page_token());
  }
}

void ListLogMetricsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.ListLogMetricsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListLogMetricsResponse::CopyFrom(const ListLogMetricsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.ListLogMetricsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListLogMetricsResponse::IsInitialized() const {
  return true;
}

void ListLogMetricsResponse::InternalSwap(ListLogMetricsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  metrics_.InternalSwap(&other->metrics_);
  next_page_token_.Swap(&other->next_page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListLogMetricsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetLogMetricRequest::InitAsDefaultInstance() {
}
class GetLogMetricRequest::_Internal {
 public:
};

GetLogMetricRequest::GetLogMetricRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.GetLogMetricRequest)
}
GetLogMetricRequest::GetLogMetricRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.GetLogMetricRequest)
}
GetLogMetricRequest::GetLogMetricRequest(const GetLogMetricRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metric_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_metric_name().empty()) {
    metric_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_metric_name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.GetLogMetricRequest)
}

void GetLogMetricRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetLogMetricRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base);
  metric_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetLogMetricRequest::~GetLogMetricRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.GetLogMetricRequest)
  SharedDtor();
}

void GetLogMetricRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  metric_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetLogMetricRequest::ArenaDtor(void* object) {
  GetLogMetricRequest* _this = reinterpret_cast< GetLogMetricRequest* >(object);
  (void)_this;
}
void GetLogMetricRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetLogMetricRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetLogMetricRequest& GetLogMetricRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetLogMetricRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base);
  return *internal_default_instance();
}


void GetLogMetricRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.GetLogMetricRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metric_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

const char* GetLogMetricRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string metric_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_metric_name(), ptr, ctx, "google.logging.v2.GetLogMetricRequest.metric_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetLogMetricRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.GetLogMetricRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string metric_name = 1;
  if (this->metric_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_metric_name().data(), static_cast<int>(this->_internal_metric_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.GetLogMetricRequest.metric_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_metric_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.GetLogMetricRequest)
  return target;
}

size_t GetLogMetricRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.GetLogMetricRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string metric_name = 1;
  if (this->metric_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_metric_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetLogMetricRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.GetLogMetricRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLogMetricRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetLogMetricRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.GetLogMetricRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.GetLogMetricRequest)
    MergeFrom(*source);
  }
}

void GetLogMetricRequest::MergeFrom(const GetLogMetricRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.GetLogMetricRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.metric_name().size() > 0) {
    _internal_set_metric_name(from._internal_metric_name());
  }
}

void GetLogMetricRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.GetLogMetricRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLogMetricRequest::CopyFrom(const GetLogMetricRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.GetLogMetricRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLogMetricRequest::IsInitialized() const {
  return true;
}

void GetLogMetricRequest::InternalSwap(GetLogMetricRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  metric_name_.Swap(&other->metric_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetLogMetricRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateLogMetricRequest::InitAsDefaultInstance() {
  ::google::logging::v2::_CreateLogMetricRequest_default_instance_._instance.get_mutable()->metric_ = const_cast< ::google::logging::v2::LogMetric*>(
      ::google::logging::v2::LogMetric::internal_default_instance());
}
class CreateLogMetricRequest::_Internal {
 public:
  static const ::google::logging::v2::LogMetric& metric(const CreateLogMetricRequest* msg);
};

const ::google::logging::v2::LogMetric&
CreateLogMetricRequest::_Internal::metric(const CreateLogMetricRequest* msg) {
  return *msg->metric_;
}
void CreateLogMetricRequest::unsafe_arena_set_allocated_metric(
    ::google::logging::v2::LogMetric* metric) {
  if (GetArenaNoVirtual() == nullptr) {
    delete metric_;
  }
  metric_ = metric;
  if (metric) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.CreateLogMetricRequest.metric)
}
CreateLogMetricRequest::CreateLogMetricRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.CreateLogMetricRequest)
}
CreateLogMetricRequest::CreateLogMetricRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.CreateLogMetricRequest)
}
CreateLogMetricRequest::CreateLogMetricRequest(const CreateLogMetricRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_parent().empty()) {
    parent_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_parent(),
      GetArenaNoVirtual());
  }
  if (from._internal_has_metric()) {
    metric_ = new ::google::logging::v2::LogMetric(*from.metric_);
  } else {
    metric_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.CreateLogMetricRequest)
}

void CreateLogMetricRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateLogMetricRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base);
  parent_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  metric_ = nullptr;
}

CreateLogMetricRequest::~CreateLogMetricRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.CreateLogMetricRequest)
  SharedDtor();
}

void CreateLogMetricRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  parent_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metric_;
}

void CreateLogMetricRequest::ArenaDtor(void* object) {
  CreateLogMetricRequest* _this = reinterpret_cast< CreateLogMetricRequest* >(object);
  (void)_this;
}
void CreateLogMetricRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateLogMetricRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateLogMetricRequest& CreateLogMetricRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateLogMetricRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base);
  return *internal_default_instance();
}


void CreateLogMetricRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.CreateLogMetricRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parent_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && metric_ != nullptr) {
    delete metric_;
  }
  metric_ = nullptr;
  _internal_metadata_.Clear();
}

const char* CreateLogMetricRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string parent = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_parent(), ptr, ctx, "google.logging.v2.CreateLogMetricRequest.parent");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.logging.v2.LogMetric metric = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_metric(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateLogMetricRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.CreateLogMetricRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parent().data(), static_cast<int>(this->_internal_parent().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.CreateLogMetricRequest.parent");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_parent(), target);
  }

  // .google.logging.v2.LogMetric metric = 2;
  if (this->has_metric()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::metric(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.CreateLogMetricRequest)
  return target;
}

size_t CreateLogMetricRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.CreateLogMetricRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string parent = 1;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parent());
  }

  // .google.logging.v2.LogMetric metric = 2;
  if (this->has_metric()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metric_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateLogMetricRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.CreateLogMetricRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateLogMetricRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateLogMetricRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.CreateLogMetricRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.CreateLogMetricRequest)
    MergeFrom(*source);
  }
}

void CreateLogMetricRequest::MergeFrom(const CreateLogMetricRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.CreateLogMetricRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent().size() > 0) {
    _internal_set_parent(from._internal_parent());
  }
  if (from.has_metric()) {
    _internal_mutable_metric()->::google::logging::v2::LogMetric::MergeFrom(from._internal_metric());
  }
}

void CreateLogMetricRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.CreateLogMetricRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateLogMetricRequest::CopyFrom(const CreateLogMetricRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.CreateLogMetricRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateLogMetricRequest::IsInitialized() const {
  return true;
}

void CreateLogMetricRequest::InternalSwap(CreateLogMetricRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  parent_.Swap(&other->parent_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(metric_, other->metric_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateLogMetricRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpdateLogMetricRequest::InitAsDefaultInstance() {
  ::google::logging::v2::_UpdateLogMetricRequest_default_instance_._instance.get_mutable()->metric_ = const_cast< ::google::logging::v2::LogMetric*>(
      ::google::logging::v2::LogMetric::internal_default_instance());
}
class UpdateLogMetricRequest::_Internal {
 public:
  static const ::google::logging::v2::LogMetric& metric(const UpdateLogMetricRequest* msg);
};

const ::google::logging::v2::LogMetric&
UpdateLogMetricRequest::_Internal::metric(const UpdateLogMetricRequest* msg) {
  return *msg->metric_;
}
void UpdateLogMetricRequest::unsafe_arena_set_allocated_metric(
    ::google::logging::v2::LogMetric* metric) {
  if (GetArenaNoVirtual() == nullptr) {
    delete metric_;
  }
  metric_ = metric;
  if (metric) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.logging.v2.UpdateLogMetricRequest.metric)
}
UpdateLogMetricRequest::UpdateLogMetricRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.UpdateLogMetricRequest)
}
UpdateLogMetricRequest::UpdateLogMetricRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.UpdateLogMetricRequest)
}
UpdateLogMetricRequest::UpdateLogMetricRequest(const UpdateLogMetricRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metric_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_metric_name().empty()) {
    metric_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_metric_name(),
      GetArenaNoVirtual());
  }
  if (from._internal_has_metric()) {
    metric_ = new ::google::logging::v2::LogMetric(*from.metric_);
  } else {
    metric_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.UpdateLogMetricRequest)
}

void UpdateLogMetricRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateLogMetricRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base);
  metric_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  metric_ = nullptr;
}

UpdateLogMetricRequest::~UpdateLogMetricRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.UpdateLogMetricRequest)
  SharedDtor();
}

void UpdateLogMetricRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  metric_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete metric_;
}

void UpdateLogMetricRequest::ArenaDtor(void* object) {
  UpdateLogMetricRequest* _this = reinterpret_cast< UpdateLogMetricRequest* >(object);
  (void)_this;
}
void UpdateLogMetricRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateLogMetricRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateLogMetricRequest& UpdateLogMetricRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateLogMetricRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base);
  return *internal_default_instance();
}


void UpdateLogMetricRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.UpdateLogMetricRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metric_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && metric_ != nullptr) {
    delete metric_;
  }
  metric_ = nullptr;
  _internal_metadata_.Clear();
}

const char* UpdateLogMetricRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string metric_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_metric_name(), ptr, ctx, "google.logging.v2.UpdateLogMetricRequest.metric_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.logging.v2.LogMetric metric = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_metric(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateLogMetricRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.UpdateLogMetricRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string metric_name = 1;
  if (this->metric_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_metric_name().data(), static_cast<int>(this->_internal_metric_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.UpdateLogMetricRequest.metric_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_metric_name(), target);
  }

  // .google.logging.v2.LogMetric metric = 2;
  if (this->has_metric()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::metric(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.UpdateLogMetricRequest)
  return target;
}

size_t UpdateLogMetricRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.UpdateLogMetricRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string metric_name = 1;
  if (this->metric_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_metric_name());
  }

  // .google.logging.v2.LogMetric metric = 2;
  if (this->has_metric()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *metric_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateLogMetricRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.UpdateLogMetricRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateLogMetricRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateLogMetricRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.UpdateLogMetricRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.UpdateLogMetricRequest)
    MergeFrom(*source);
  }
}

void UpdateLogMetricRequest::MergeFrom(const UpdateLogMetricRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.UpdateLogMetricRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.metric_name().size() > 0) {
    _internal_set_metric_name(from._internal_metric_name());
  }
  if (from.has_metric()) {
    _internal_mutable_metric()->::google::logging::v2::LogMetric::MergeFrom(from._internal_metric());
  }
}

void UpdateLogMetricRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.UpdateLogMetricRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateLogMetricRequest::CopyFrom(const UpdateLogMetricRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.UpdateLogMetricRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateLogMetricRequest::IsInitialized() const {
  return true;
}

void UpdateLogMetricRequest::InternalSwap(UpdateLogMetricRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  metric_name_.Swap(&other->metric_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(metric_, other->metric_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateLogMetricRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteLogMetricRequest::InitAsDefaultInstance() {
}
class DeleteLogMetricRequest::_Internal {
 public:
};

DeleteLogMetricRequest::DeleteLogMetricRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.logging.v2.DeleteLogMetricRequest)
}
DeleteLogMetricRequest::DeleteLogMetricRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.logging.v2.DeleteLogMetricRequest)
}
DeleteLogMetricRequest::DeleteLogMetricRequest(const DeleteLogMetricRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metric_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_metric_name().empty()) {
    metric_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_metric_name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.logging.v2.DeleteLogMetricRequest)
}

void DeleteLogMetricRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteLogMetricRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base);
  metric_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteLogMetricRequest::~DeleteLogMetricRequest() {
  // @@protoc_insertion_point(destructor:google.logging.v2.DeleteLogMetricRequest)
  SharedDtor();
}

void DeleteLogMetricRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  metric_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteLogMetricRequest::ArenaDtor(void* object) {
  DeleteLogMetricRequest* _this = reinterpret_cast< DeleteLogMetricRequest* >(object);
  (void)_this;
}
void DeleteLogMetricRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteLogMetricRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteLogMetricRequest& DeleteLogMetricRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteLogMetricRequest_google_2flogging_2fv2_2flogging_5fmetrics_2eproto.base);
  return *internal_default_instance();
}


void DeleteLogMetricRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.logging.v2.DeleteLogMetricRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metric_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

const char* DeleteLogMetricRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string metric_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_metric_name(), ptr, ctx, "google.logging.v2.DeleteLogMetricRequest.metric_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteLogMetricRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.logging.v2.DeleteLogMetricRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string metric_name = 1;
  if (this->metric_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_metric_name().data(), static_cast<int>(this->_internal_metric_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.logging.v2.DeleteLogMetricRequest.metric_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_metric_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.logging.v2.DeleteLogMetricRequest)
  return target;
}

size_t DeleteLogMetricRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.logging.v2.DeleteLogMetricRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string metric_name = 1;
  if (this->metric_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_metric_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteLogMetricRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.logging.v2.DeleteLogMetricRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteLogMetricRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteLogMetricRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.logging.v2.DeleteLogMetricRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.logging.v2.DeleteLogMetricRequest)
    MergeFrom(*source);
  }
}

void DeleteLogMetricRequest::MergeFrom(const DeleteLogMetricRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.logging.v2.DeleteLogMetricRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.metric_name().size() > 0) {
    _internal_set_metric_name(from._internal_metric_name());
  }
}

void DeleteLogMetricRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.logging.v2.DeleteLogMetricRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteLogMetricRequest::CopyFrom(const DeleteLogMetricRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.logging.v2.DeleteLogMetricRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteLogMetricRequest::IsInitialized() const {
  return true;
}

void DeleteLogMetricRequest::InternalSwap(DeleteLogMetricRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  metric_name_.Swap(&other->metric_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteLogMetricRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2
}  // namespace logging
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::logging::v2::LogMetric_LabelExtractorsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::logging::v2::LogMetric_LabelExtractorsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::LogMetric_LabelExtractorsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::LogMetric* Arena::CreateMaybeMessage< ::google::logging::v2::LogMetric >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::LogMetric >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::ListLogMetricsRequest* Arena::CreateMaybeMessage< ::google::logging::v2::ListLogMetricsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::ListLogMetricsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::ListLogMetricsResponse* Arena::CreateMaybeMessage< ::google::logging::v2::ListLogMetricsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::ListLogMetricsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::GetLogMetricRequest* Arena::CreateMaybeMessage< ::google::logging::v2::GetLogMetricRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::GetLogMetricRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::CreateLogMetricRequest* Arena::CreateMaybeMessage< ::google::logging::v2::CreateLogMetricRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::CreateLogMetricRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::UpdateLogMetricRequest* Arena::CreateMaybeMessage< ::google::logging::v2::UpdateLogMetricRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::UpdateLogMetricRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::logging::v2::DeleteLogMetricRequest* Arena::CreateMaybeMessage< ::google::logging::v2::DeleteLogMetricRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::logging::v2::DeleteLogMetricRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
