// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicecontrol/v1/metric_value.proto

#include "google/api/servicecontrol/v1/metric_value.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Distribution_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_MetricValue_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MetricValue_LabelsEntry_DoNotUse_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace google {
namespace api {
namespace servicecontrol {
namespace v1 {
class MetricValue_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MetricValue_LabelsEntry_DoNotUse> _instance;
} _MetricValue_LabelsEntry_DoNotUse_default_instance_;
class MetricValueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MetricValue> _instance;
  bool bool_value_;
  ::PROTOBUF_NAMESPACE_ID::int64 int64_value_;
  double double_value_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr string_value_;
  const ::google::api::servicecontrol::v1::Distribution* distribution_value_;
} _MetricValue_default_instance_;
class MetricValueSetDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MetricValueSet> _instance;
} _MetricValueSet_default_instance_;
}  // namespace v1
}  // namespace servicecontrol
}  // namespace api
}  // namespace google
static void InitDefaultsscc_info_MetricValue_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicecontrol::v1::_MetricValue_default_instance_;
    new (ptr) ::google::api::servicecontrol::v1::MetricValue();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicecontrol::v1::MetricValue::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_MetricValue_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_MetricValue_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto}, {
      &scc_info_MetricValue_LabelsEntry_DoNotUse_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_Distribution_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto.base,}};

static void InitDefaultsscc_info_MetricValue_LabelsEntry_DoNotUse_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicecontrol::v1::_MetricValue_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::api::servicecontrol::v1::MetricValue_LabelsEntry_DoNotUse();
  }
  ::google::api::servicecontrol::v1::MetricValue_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MetricValue_LabelsEntry_DoNotUse_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MetricValue_LabelsEntry_DoNotUse_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto}, {}};

static void InitDefaultsscc_info_MetricValueSet_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicecontrol::v1::_MetricValueSet_default_instance_;
    new (ptr) ::google::api::servicecontrol::v1::MetricValueSet();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicecontrol::v1::MetricValueSet::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MetricValueSet_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MetricValueSet_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto}, {
      &scc_info_MetricValue_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::MetricValue_LabelsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::MetricValue_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::MetricValue_LabelsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::MetricValue_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::MetricValue, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::MetricValue, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::MetricValue, labels_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::MetricValue, start_time_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::MetricValue, end_time_),
  offsetof(::google::api::servicecontrol::v1::MetricValueDefaultTypeInternal, bool_value_),
  offsetof(::google::api::servicecontrol::v1::MetricValueDefaultTypeInternal, int64_value_),
  offsetof(::google::api::servicecontrol::v1::MetricValueDefaultTypeInternal, double_value_),
  offsetof(::google::api::servicecontrol::v1::MetricValueDefaultTypeInternal, string_value_),
  offsetof(::google::api::servicecontrol::v1::MetricValueDefaultTypeInternal, distribution_value_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::MetricValue, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::MetricValueSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::MetricValueSet, metric_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicecontrol::v1::MetricValueSet, metric_values_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::google::api::servicecontrol::v1::MetricValue_LabelsEntry_DoNotUse)},
  { 9, -1, sizeof(::google::api::servicecontrol::v1::MetricValue)},
  { 23, -1, sizeof(::google::api::servicecontrol::v1::MetricValueSet)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicecontrol::v1::_MetricValue_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicecontrol::v1::_MetricValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicecontrol::v1::_MetricValueSet_default_instance_),
};

const char descriptor_table_protodef_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n/google/api/servicecontrol/v1/metric_va"
  "lue.proto\022\034google.api.servicecontrol.v1\032"
  "\034google/api/annotations.proto\032/google/ap"
  "i/servicecontrol/v1/distribution.proto\032\037"
  "google/protobuf/timestamp.proto\032\027google/"
  "type/money.proto\"\221\003\n\013MetricValue\022E\n\006labe"
  "ls\030\001 \003(\01325.google.api.servicecontrol.v1."
  "MetricValue.LabelsEntry\022.\n\nstart_time\030\002 "
  "\001(\0132\032.google.protobuf.Timestamp\022,\n\010end_t"
  "ime\030\003 \001(\0132\032.google.protobuf.Timestamp\022\024\n"
  "\nbool_value\030\004 \001(\010H\000\022\025\n\013int64_value\030\005 \001(\003"
  "H\000\022\026\n\014double_value\030\006 \001(\001H\000\022\026\n\014string_val"
  "ue\030\007 \001(\tH\000\022H\n\022distribution_value\030\010 \001(\0132*"
  ".google.api.servicecontrol.v1.Distributi"
  "onH\000\032-\n\013LabelsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005valu"
  "e\030\002 \001(\t:\0028\001B\007\n\005value\"g\n\016MetricValueSet\022\023"
  "\n\013metric_name\030\001 \001(\t\022@\n\rmetric_values\030\002 \003"
  "(\0132).google.api.servicecontrol.v1.Metric"
  "ValueB\210\001\n com.google.api.servicecontrol."
  "v1B\023MetricValueSetProtoP\001ZJgoogle.golang"
  ".org/genproto/googleapis/api/servicecont"
  "rol/v1;servicecontrol\370\001\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto_deps[4] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fdistribution_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_google_2ftype_2fmoney_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto_sccs[3] = {
  &scc_info_MetricValue_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto.base,
  &scc_info_MetricValue_LabelsEntry_DoNotUse_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto.base,
  &scc_info_MetricValueSet_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto_once;
static bool descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto = {
  &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto_initialized, descriptor_table_protodef_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto, "google/api/servicecontrol/v1/metric_value.proto", 872,
  &descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto_once, descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto_sccs, descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto_deps, 3, 4,
  schemas, file_default_instances, TableStruct_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto::offsets,
  file_level_metadata_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto, 3, file_level_enum_descriptors_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto, file_level_service_descriptors_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto), true);
namespace google {
namespace api {
namespace servicecontrol {
namespace v1 {

// ===================================================================

MetricValue_LabelsEntry_DoNotUse::MetricValue_LabelsEntry_DoNotUse() {}
MetricValue_LabelsEntry_DoNotUse::MetricValue_LabelsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void MetricValue_LabelsEntry_DoNotUse::MergeFrom(const MetricValue_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata MetricValue_LabelsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void MetricValue_LabelsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void MetricValue::InitAsDefaultInstance() {
  ::google::api::servicecontrol::v1::_MetricValue_default_instance_._instance.get_mutable()->start_time_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::google::api::servicecontrol::v1::_MetricValue_default_instance_._instance.get_mutable()->end_time_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::google::api::servicecontrol::v1::_MetricValue_default_instance_.bool_value_ = false;
  ::google::api::servicecontrol::v1::_MetricValue_default_instance_.int64_value_ = PROTOBUF_LONGLONG(0);
  ::google::api::servicecontrol::v1::_MetricValue_default_instance_.double_value_ = 0;
  ::google::api::servicecontrol::v1::_MetricValue_default_instance_.string_value_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::google::api::servicecontrol::v1::_MetricValue_default_instance_.distribution_value_ = const_cast< ::google::api::servicecontrol::v1::Distribution*>(
      ::google::api::servicecontrol::v1::Distribution::internal_default_instance());
}
class MetricValue::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& start_time(const MetricValue* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& end_time(const MetricValue* msg);
  static const ::google::api::servicecontrol::v1::Distribution& distribution_value(const MetricValue* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
MetricValue::_Internal::start_time(const MetricValue* msg) {
  return *msg->start_time_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
MetricValue::_Internal::end_time(const MetricValue* msg) {
  return *msg->end_time_;
}
const ::google::api::servicecontrol::v1::Distribution&
MetricValue::_Internal::distribution_value(const MetricValue* msg) {
  return *msg->value_.distribution_value_;
}
void MetricValue::unsafe_arena_set_allocated_start_time(
    PROTOBUF_NAMESPACE_ID::Timestamp* start_time) {
  if (GetArenaNoVirtual() == nullptr) {
    delete start_time_;
  }
  start_time_ = start_time;
  if (start_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.MetricValue.start_time)
}
void MetricValue::clear_start_time() {
  if (GetArenaNoVirtual() == nullptr && start_time_ != nullptr) {
    delete start_time_;
  }
  start_time_ = nullptr;
}
void MetricValue::unsafe_arena_set_allocated_end_time(
    PROTOBUF_NAMESPACE_ID::Timestamp* end_time) {
  if (GetArenaNoVirtual() == nullptr) {
    delete end_time_;
  }
  end_time_ = end_time;
  if (end_time) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.servicecontrol.v1.MetricValue.end_time)
}
void MetricValue::clear_end_time() {
  if (GetArenaNoVirtual() == nullptr && end_time_ != nullptr) {
    delete end_time_;
  }
  end_time_ = nullptr;
}
void MetricValue::set_allocated_distribution_value(::google::api::servicecontrol::v1::Distribution* distribution_value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (distribution_value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(distribution_value)->GetArena();
    if (message_arena != submessage_arena) {
      distribution_value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, distribution_value, submessage_arena);
    }
    set_has_distribution_value();
    value_.distribution_value_ = distribution_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicecontrol.v1.MetricValue.distribution_value)
}
void MetricValue::clear_distribution_value() {
  if (_internal_has_distribution_value()) {
    if (GetArenaNoVirtual() == nullptr) {
      delete value_.distribution_value_;
    }
    clear_has_value();
  }
}
MetricValue::MetricValue()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.MetricValue)
}
MetricValue::MetricValue(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  labels_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.MetricValue)
}
MetricValue::MetricValue(const MetricValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  if (from._internal_has_start_time()) {
    start_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.start_time_);
  } else {
    start_time_ = nullptr;
  }
  if (from._internal_has_end_time()) {
    end_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.end_time_);
  } else {
    end_time_ = nullptr;
  }
  clear_has_value();
  switch (from.value_case()) {
    case kBoolValue: {
      _internal_set_bool_value(from._internal_bool_value());
      break;
    }
    case kInt64Value: {
      _internal_set_int64_value(from._internal_int64_value());
      break;
    }
    case kDoubleValue: {
      _internal_set_double_value(from._internal_double_value());
      break;
    }
    case kStringValue: {
      _internal_set_string_value(from._internal_string_value());
      break;
    }
    case kDistributionValue: {
      _internal_mutable_distribution_value()->::google::api::servicecontrol::v1::Distribution::MergeFrom(from._internal_distribution_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.MetricValue)
}

void MetricValue::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MetricValue_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto.base);
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_time_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(end_time_));
  clear_has_value();
}

MetricValue::~MetricValue() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.MetricValue)
  SharedDtor();
}

void MetricValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  if (this != internal_default_instance()) delete start_time_;
  if (this != internal_default_instance()) delete end_time_;
  if (has_value()) {
    clear_value();
  }
}

void MetricValue::ArenaDtor(void* object) {
  MetricValue* _this = reinterpret_cast< MetricValue* >(object);
  (void)_this;
}
void MetricValue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MetricValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetricValue& MetricValue::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MetricValue_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto.base);
  return *internal_default_instance();
}


void MetricValue::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:google.api.servicecontrol.v1.MetricValue)
  switch (value_case()) {
    case kBoolValue: {
      // No need to clear
      break;
    }
    case kInt64Value: {
      // No need to clear
      break;
    }
    case kDoubleValue: {
      // No need to clear
      break;
    }
    case kStringValue: {
      value_.string_value_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kDistributionValue: {
      if (GetArenaNoVirtual() == nullptr) {
        delete value_.distribution_value_;
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void MetricValue::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.MetricValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  if (GetArenaNoVirtual() == nullptr && start_time_ != nullptr) {
    delete start_time_;
  }
  start_time_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && end_time_ != nullptr) {
    delete end_time_;
  }
  end_time_ = nullptr;
  clear_value();
  _internal_metadata_.Clear();
}

const char* MetricValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, string> labels = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&labels_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp start_time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_start_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp end_time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_end_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool bool_value = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _internal_set_bool_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 int64_value = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _internal_set_int64_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double double_value = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 49)) {
          _internal_set_double_value(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // string string_value = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_string_value(), ptr, ctx, "google.api.servicecontrol.v1.MetricValue.string_value");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.servicecontrol.v1.Distribution distribution_value = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_distribution_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MetricValue::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.MetricValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> labels = 1;
  if (!this->_internal_labels().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.api.servicecontrol.v1.MetricValue.LabelsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.api.servicecontrol.v1.MetricValue.LabelsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_labels().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_labels().begin();
          it != this->_internal_labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = MetricValue_LabelsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_labels().begin();
          it != this->_internal_labels().end(); ++it) {
        target = MetricValue_LabelsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::start_time(this), target, stream);
  }

  // .google.protobuf.Timestamp end_time = 3;
  if (this->has_end_time()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::end_time(this), target, stream);
  }

  // bool bool_value = 4;
  if (_internal_has_bool_value()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_bool_value(), target);
  }

  // int64 int64_value = 5;
  if (_internal_has_int64_value()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_int64_value(), target);
  }

  // double double_value = 6;
  if (_internal_has_double_value()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(6, this->_internal_double_value(), target);
  }

  // string string_value = 7;
  if (_internal_has_string_value()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_string_value().data(), static_cast<int>(this->_internal_string_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.MetricValue.string_value");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_string_value(), target);
  }

  // .google.api.servicecontrol.v1.Distribution distribution_value = 8;
  if (_internal_has_distribution_value()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, _Internal::distribution_value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.MetricValue)
  return target;
}

size_t MetricValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.MetricValue)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> labels = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_labels_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_labels().begin();
      it != this->_internal_labels().end(); ++it) {
    total_size += MetricValue_LabelsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .google.protobuf.Timestamp start_time = 2;
  if (this->has_start_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *start_time_);
  }

  // .google.protobuf.Timestamp end_time = 3;
  if (this->has_end_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *end_time_);
  }

  switch (value_case()) {
    // bool bool_value = 4;
    case kBoolValue: {
      total_size += 1 + 1;
      break;
    }
    // int64 int64_value = 5;
    case kInt64Value: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_int64_value());
      break;
    }
    // double double_value = 6;
    case kDoubleValue: {
      total_size += 1 + 8;
      break;
    }
    // string string_value = 7;
    case kStringValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_string_value());
      break;
    }
    // .google.api.servicecontrol.v1.Distribution distribution_value = 8;
    case kDistributionValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.distribution_value_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetricValue::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.MetricValue)
  GOOGLE_DCHECK_NE(&from, this);
  const MetricValue* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MetricValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.MetricValue)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.MetricValue)
    MergeFrom(*source);
  }
}

void MetricValue::MergeFrom(const MetricValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.MetricValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  if (from.has_start_time()) {
    _internal_mutable_start_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_start_time());
  }
  if (from.has_end_time()) {
    _internal_mutable_end_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_end_time());
  }
  switch (from.value_case()) {
    case kBoolValue: {
      _internal_set_bool_value(from._internal_bool_value());
      break;
    }
    case kInt64Value: {
      _internal_set_int64_value(from._internal_int64_value());
      break;
    }
    case kDoubleValue: {
      _internal_set_double_value(from._internal_double_value());
      break;
    }
    case kStringValue: {
      _internal_set_string_value(from._internal_string_value());
      break;
    }
    case kDistributionValue: {
      _internal_mutable_distribution_value()->::google::api::servicecontrol::v1::Distribution::MergeFrom(from._internal_distribution_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void MetricValue::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.MetricValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetricValue::CopyFrom(const MetricValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.MetricValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetricValue::IsInitialized() const {
  return true;
}

void MetricValue::InternalSwap(MetricValue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  labels_.Swap(&other->labels_);
  swap(start_time_, other->start_time_);
  swap(end_time_, other->end_time_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MetricValue::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MetricValueSet::InitAsDefaultInstance() {
}
class MetricValueSet::_Internal {
 public:
};

MetricValueSet::MetricValueSet()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicecontrol.v1.MetricValueSet)
}
MetricValueSet::MetricValueSet(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  metric_values_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.servicecontrol.v1.MetricValueSet)
}
MetricValueSet::MetricValueSet(const MetricValueSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      metric_values_(from.metric_values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metric_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_metric_name().empty()) {
    metric_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_metric_name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicecontrol.v1.MetricValueSet)
}

void MetricValueSet::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MetricValueSet_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto.base);
  metric_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

MetricValueSet::~MetricValueSet() {
  // @@protoc_insertion_point(destructor:google.api.servicecontrol.v1.MetricValueSet)
  SharedDtor();
}

void MetricValueSet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  metric_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MetricValueSet::ArenaDtor(void* object) {
  MetricValueSet* _this = reinterpret_cast< MetricValueSet* >(object);
  (void)_this;
}
void MetricValueSet::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MetricValueSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MetricValueSet& MetricValueSet::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MetricValueSet_google_2fapi_2fservicecontrol_2fv1_2fmetric_5fvalue_2eproto.base);
  return *internal_default_instance();
}


void MetricValueSet::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicecontrol.v1.MetricValueSet)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metric_values_.Clear();
  metric_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

const char* MetricValueSet::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string metric_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_metric_name(), ptr, ctx, "google.api.servicecontrol.v1.MetricValueSet.metric_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .google.api.servicecontrol.v1.MetricValue metric_values = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_metric_values(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MetricValueSet::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicecontrol.v1.MetricValueSet)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string metric_name = 1;
  if (this->metric_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_metric_name().data(), static_cast<int>(this->_internal_metric_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicecontrol.v1.MetricValueSet.metric_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_metric_name(), target);
  }

  // repeated .google.api.servicecontrol.v1.MetricValue metric_values = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_metric_values_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(2, this->_internal_metric_values(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicecontrol.v1.MetricValueSet)
  return target;
}

size_t MetricValueSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicecontrol.v1.MetricValueSet)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.servicecontrol.v1.MetricValue metric_values = 2;
  total_size += 1UL * this->_internal_metric_values_size();
  for (const auto& msg : this->metric_values_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string metric_name = 1;
  if (this->metric_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_metric_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetricValueSet::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicecontrol.v1.MetricValueSet)
  GOOGLE_DCHECK_NE(&from, this);
  const MetricValueSet* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MetricValueSet>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicecontrol.v1.MetricValueSet)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicecontrol.v1.MetricValueSet)
    MergeFrom(*source);
  }
}

void MetricValueSet::MergeFrom(const MetricValueSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicecontrol.v1.MetricValueSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metric_values_.MergeFrom(from.metric_values_);
  if (from.metric_name().size() > 0) {
    _internal_set_metric_name(from._internal_metric_name());
  }
}

void MetricValueSet::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicecontrol.v1.MetricValueSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetricValueSet::CopyFrom(const MetricValueSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicecontrol.v1.MetricValueSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetricValueSet::IsInitialized() const {
  return true;
}

void MetricValueSet::InternalSwap(MetricValueSet* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  metric_values_.InternalSwap(&other->metric_values_);
  metric_name_.Swap(&other->metric_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata MetricValueSet::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace servicecontrol
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::servicecontrol::v1::MetricValue_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::MetricValue_LabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::MetricValue_LabelsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicecontrol::v1::MetricValue* Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::MetricValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::MetricValue >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicecontrol::v1::MetricValueSet* Arena::CreateMaybeMessage< ::google::api::servicecontrol::v1::MetricValueSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::servicecontrol::v1::MetricValueSet >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
