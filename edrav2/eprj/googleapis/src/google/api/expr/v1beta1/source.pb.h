// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/expr/v1beta1/source.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3010000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3010000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto;
namespace google {
namespace api {
namespace expr {
namespace v1beta1 {
class SourceInfo;
class SourceInfoDefaultTypeInternal;
extern SourceInfoDefaultTypeInternal _SourceInfo_default_instance_;
class SourceInfo_PositionsEntry_DoNotUse;
class SourceInfo_PositionsEntry_DoNotUseDefaultTypeInternal;
extern SourceInfo_PositionsEntry_DoNotUseDefaultTypeInternal _SourceInfo_PositionsEntry_DoNotUse_default_instance_;
class SourcePosition;
class SourcePositionDefaultTypeInternal;
extern SourcePositionDefaultTypeInternal _SourcePosition_default_instance_;
}  // namespace v1beta1
}  // namespace expr
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> ::google::api::expr::v1beta1::SourceInfo* Arena::CreateMaybeMessage<::google::api::expr::v1beta1::SourceInfo>(Arena*);
template<> ::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse* Arena::CreateMaybeMessage<::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse>(Arena*);
template<> ::google::api::expr::v1beta1::SourcePosition* Arena::CreateMaybeMessage<::google::api::expr::v1beta1::SourcePosition>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace google {
namespace api {
namespace expr {
namespace v1beta1 {

// ===================================================================

class SourceInfo_PositionsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<SourceInfo_PositionsEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<SourceInfo_PositionsEntry_DoNotUse, 
    ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
    0 > SuperType;
  SourceInfo_PositionsEntry_DoNotUse();
  SourceInfo_PositionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const SourceInfo_PositionsEntry_DoNotUse& other);
  static const SourceInfo_PositionsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SourceInfo_PositionsEntry_DoNotUse*>(&_SourceInfo_PositionsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(void*) { return true; }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto);
    return ::descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto.file_level_metadata[0];
  }

  public:
};

// -------------------------------------------------------------------

class SourceInfo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.api.expr.v1beta1.SourceInfo) */ {
 public:
  SourceInfo();
  virtual ~SourceInfo();

  SourceInfo(const SourceInfo& from);
  SourceInfo(SourceInfo&& from) noexcept
    : SourceInfo() {
    *this = ::std::move(from);
  }

  inline SourceInfo& operator=(const SourceInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline SourceInfo& operator=(SourceInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SourceInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SourceInfo* internal_default_instance() {
    return reinterpret_cast<const SourceInfo*>(
               &_SourceInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(SourceInfo& a, SourceInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(SourceInfo* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SourceInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SourceInfo* New() const final {
    return CreateMaybeMessage<SourceInfo>(nullptr);
  }

  SourceInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SourceInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SourceInfo& from);
  void MergeFrom(const SourceInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SourceInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.api.expr.v1beta1.SourceInfo";
  }
  protected:
  explicit SourceInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto);
    return ::descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kLineOffsetsFieldNumber = 3,
    kPositionsFieldNumber = 4,
    kLocationFieldNumber = 2,
  };
  // repeated int32 line_offsets = 3;
  int line_offsets_size() const;
  private:
  int _internal_line_offsets_size() const;
  public:
  void clear_line_offsets();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_line_offsets(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_line_offsets() const;
  void _internal_add_line_offsets(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_line_offsets();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 line_offsets(int index) const;
  void set_line_offsets(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_line_offsets(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      line_offsets() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_line_offsets();

  // map<int32, int32> positions = 4;
  int positions_size() const;
  private:
  int _internal_positions_size() const;
  public:
  void clear_positions();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_positions() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_positions();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
      positions() const;
  ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_positions();

  // string location = 2;
  void clear_location();
  const std::string& location() const;
  void set_location(const std::string& value);
  void set_location(std::string&& value);
  void set_location(const char* value);
  void set_location(const char* value, size_t size);
  std::string* mutable_location();
  std::string* release_location();
  void set_allocated_location(std::string* location);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_location();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_location(
      std::string* location);
  private:
  const std::string& _internal_location() const;
  void _internal_set_location(const std::string& value);
  std::string* _internal_mutable_location();
  public:

  // @@protoc_insertion_point(class_scope:google.api.expr.v1beta1.SourceInfo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > line_offsets_;
  mutable std::atomic<int> _line_offsets_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      SourceInfo_PositionsEntry_DoNotUse,
      ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32,
      0 > positions_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr location_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto;
};
// -------------------------------------------------------------------

class SourcePosition :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:google.api.expr.v1beta1.SourcePosition) */ {
 public:
  SourcePosition();
  virtual ~SourcePosition();

  SourcePosition(const SourcePosition& from);
  SourcePosition(SourcePosition&& from) noexcept
    : SourcePosition() {
    *this = ::std::move(from);
  }

  inline SourcePosition& operator=(const SourcePosition& from) {
    CopyFrom(from);
    return *this;
  }
  inline SourcePosition& operator=(SourcePosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SourcePosition& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SourcePosition* internal_default_instance() {
    return reinterpret_cast<const SourcePosition*>(
               &_SourcePosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SourcePosition& a, SourcePosition& b) {
    a.Swap(&b);
  }
  inline void Swap(SourcePosition* other) {
    if (other == this) return;
    if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SourcePosition* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SourcePosition* New() const final {
    return CreateMaybeMessage<SourcePosition>(nullptr);
  }

  SourcePosition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SourcePosition>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SourcePosition& from);
  void MergeFrom(const SourcePosition& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SourcePosition* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "google.api.expr.v1beta1.SourcePosition";
  }
  protected:
  explicit SourcePosition(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto);
    return ::descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocationFieldNumber = 1,
    kOffsetFieldNumber = 2,
    kLineFieldNumber = 3,
    kColumnFieldNumber = 4,
  };
  // string location = 1;
  void clear_location();
  const std::string& location() const;
  void set_location(const std::string& value);
  void set_location(std::string&& value);
  void set_location(const char* value);
  void set_location(const char* value, size_t size);
  std::string* mutable_location();
  std::string* release_location();
  void set_allocated_location(std::string* location);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_location();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_location(
      std::string* location);
  private:
  const std::string& _internal_location() const;
  void _internal_set_location(const std::string& value);
  std::string* _internal_mutable_location();
  public:

  // int32 offset = 2;
  void clear_offset();
  ::PROTOBUF_NAMESPACE_ID::int32 offset() const;
  void set_offset(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_offset() const;
  void _internal_set_offset(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 line = 3;
  void clear_line();
  ::PROTOBUF_NAMESPACE_ID::int32 line() const;
  void set_line(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_line() const;
  void _internal_set_line(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 column = 4;
  void clear_column();
  ::PROTOBUF_NAMESPACE_ID::int32 column() const;
  void set_column(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_column() const;
  void _internal_set_column(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:google.api.expr.v1beta1.SourcePosition)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr location_;
  ::PROTOBUF_NAMESPACE_ID::int32 offset_;
  ::PROTOBUF_NAMESPACE_ID::int32 line_;
  ::PROTOBUF_NAMESPACE_ID::int32 column_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SourceInfo

// string location = 2;
inline void SourceInfo::clear_location() {
  location_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const std::string& SourceInfo::location() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.SourceInfo.location)
  return _internal_location();
}
inline void SourceInfo::set_location(const std::string& value) {
  _internal_set_location(value);
  // @@protoc_insertion_point(field_set:google.api.expr.v1beta1.SourceInfo.location)
}
inline std::string* SourceInfo::mutable_location() {
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1beta1.SourceInfo.location)
  return _internal_mutable_location();
}
inline const std::string& SourceInfo::_internal_location() const {
  return location_.Get();
}
inline void SourceInfo::_internal_set_location(const std::string& value) {
  
  location_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
}
inline void SourceInfo::set_location(std::string&& value) {
  
  location_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.api.expr.v1beta1.SourceInfo.location)
}
inline void SourceInfo::set_location(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  location_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.expr.v1beta1.SourceInfo.location)
}
inline void SourceInfo::set_location(const char* value,
    size_t size) {
  
  location_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.expr.v1beta1.SourceInfo.location)
}
inline std::string* SourceInfo::_internal_mutable_location() {
  
  return location_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline std::string* SourceInfo::release_location() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1beta1.SourceInfo.location)
  
  return location_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SourceInfo::set_allocated_location(std::string* location) {
  if (location != nullptr) {
    
  } else {
    
  }
  location_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), location,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.SourceInfo.location)
}
inline std::string* SourceInfo::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1beta1.SourceInfo.location)
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  
  return location_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SourceInfo::unsafe_arena_set_allocated_location(
    std::string* location) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  if (location != nullptr) {
    
  } else {
    
  }
  location_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      location, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1beta1.SourceInfo.location)
}

// repeated int32 line_offsets = 3;
inline int SourceInfo::_internal_line_offsets_size() const {
  return line_offsets_.size();
}
inline int SourceInfo::line_offsets_size() const {
  return _internal_line_offsets_size();
}
inline void SourceInfo::clear_line_offsets() {
  line_offsets_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SourceInfo::_internal_line_offsets(int index) const {
  return line_offsets_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SourceInfo::line_offsets(int index) const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.SourceInfo.line_offsets)
  return _internal_line_offsets(index);
}
inline void SourceInfo::set_line_offsets(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  line_offsets_.Set(index, value);
  // @@protoc_insertion_point(field_set:google.api.expr.v1beta1.SourceInfo.line_offsets)
}
inline void SourceInfo::_internal_add_line_offsets(::PROTOBUF_NAMESPACE_ID::int32 value) {
  line_offsets_.Add(value);
}
inline void SourceInfo::add_line_offsets(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_line_offsets(value);
  // @@protoc_insertion_point(field_add:google.api.expr.v1beta1.SourceInfo.line_offsets)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
SourceInfo::_internal_line_offsets() const {
  return line_offsets_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
SourceInfo::line_offsets() const {
  // @@protoc_insertion_point(field_list:google.api.expr.v1beta1.SourceInfo.line_offsets)
  return _internal_line_offsets();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
SourceInfo::_internal_mutable_line_offsets() {
  return &line_offsets_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
SourceInfo::mutable_line_offsets() {
  // @@protoc_insertion_point(field_mutable_list:google.api.expr.v1beta1.SourceInfo.line_offsets)
  return _internal_mutable_line_offsets();
}

// map<int32, int32> positions = 4;
inline int SourceInfo::_internal_positions_size() const {
  return positions_.size();
}
inline int SourceInfo::positions_size() const {
  return _internal_positions_size();
}
inline void SourceInfo::clear_positions() {
  positions_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
SourceInfo::_internal_positions() const {
  return positions_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >&
SourceInfo::positions() const {
  // @@protoc_insertion_point(field_map:google.api.expr.v1beta1.SourceInfo.positions)
  return _internal_positions();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
SourceInfo::_internal_mutable_positions() {
  return positions_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >*
SourceInfo::mutable_positions() {
  // @@protoc_insertion_point(field_mutable_map:google.api.expr.v1beta1.SourceInfo.positions)
  return _internal_mutable_positions();
}

// -------------------------------------------------------------------

// SourcePosition

// string location = 1;
inline void SourcePosition::clear_location() {
  location_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const std::string& SourcePosition::location() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.SourcePosition.location)
  return _internal_location();
}
inline void SourcePosition::set_location(const std::string& value) {
  _internal_set_location(value);
  // @@protoc_insertion_point(field_set:google.api.expr.v1beta1.SourcePosition.location)
}
inline std::string* SourcePosition::mutable_location() {
  // @@protoc_insertion_point(field_mutable:google.api.expr.v1beta1.SourcePosition.location)
  return _internal_mutable_location();
}
inline const std::string& SourcePosition::_internal_location() const {
  return location_.Get();
}
inline void SourcePosition::_internal_set_location(const std::string& value) {
  
  location_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
}
inline void SourcePosition::set_location(std::string&& value) {
  
  location_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:google.api.expr.v1beta1.SourcePosition.location)
}
inline void SourcePosition::set_location(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  location_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:google.api.expr.v1beta1.SourcePosition.location)
}
inline void SourcePosition::set_location(const char* value,
    size_t size) {
  
  location_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:google.api.expr.v1beta1.SourcePosition.location)
}
inline std::string* SourcePosition::_internal_mutable_location() {
  
  return location_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline std::string* SourcePosition::release_location() {
  // @@protoc_insertion_point(field_release:google.api.expr.v1beta1.SourcePosition.location)
  
  return location_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void SourcePosition::set_allocated_location(std::string* location) {
  if (location != nullptr) {
    
  } else {
    
  }
  location_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), location,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1beta1.SourcePosition.location)
}
inline std::string* SourcePosition::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_unsafe_arena_release:google.api.expr.v1beta1.SourcePosition.location)
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  
  return location_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void SourcePosition::unsafe_arena_set_allocated_location(
    std::string* location) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != nullptr);
  if (location != nullptr) {
    
  } else {
    
  }
  location_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      location, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1beta1.SourcePosition.location)
}

// int32 offset = 2;
inline void SourcePosition::clear_offset() {
  offset_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SourcePosition::_internal_offset() const {
  return offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SourcePosition::offset() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.SourcePosition.offset)
  return _internal_offset();
}
inline void SourcePosition::_internal_set_offset(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  offset_ = value;
}
inline void SourcePosition::set_offset(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:google.api.expr.v1beta1.SourcePosition.offset)
}

// int32 line = 3;
inline void SourcePosition::clear_line() {
  line_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SourcePosition::_internal_line() const {
  return line_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SourcePosition::line() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.SourcePosition.line)
  return _internal_line();
}
inline void SourcePosition::_internal_set_line(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  line_ = value;
}
inline void SourcePosition::set_line(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_line(value);
  // @@protoc_insertion_point(field_set:google.api.expr.v1beta1.SourcePosition.line)
}

// int32 column = 4;
inline void SourcePosition::clear_column() {
  column_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SourcePosition::_internal_column() const {
  return column_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 SourcePosition::column() const {
  // @@protoc_insertion_point(field_get:google.api.expr.v1beta1.SourcePosition.column)
  return _internal_column();
}
inline void SourcePosition::_internal_set_column(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  column_ = value;
}
inline void SourcePosition::set_column(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_column(value);
  // @@protoc_insertion_point(field_set:google.api.expr.v1beta1.SourcePosition.column)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta1
}  // namespace expr
}  // namespace api
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto
