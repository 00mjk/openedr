// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/expr/v1beta1/source.proto

#include "google/api/expr/v1beta1/source.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SourceInfo_PositionsEntry_DoNotUse_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto;
namespace google {
namespace api {
namespace expr {
namespace v1beta1 {
class SourceInfo_PositionsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SourceInfo_PositionsEntry_DoNotUse> _instance;
} _SourceInfo_PositionsEntry_DoNotUse_default_instance_;
class SourceInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SourceInfo> _instance;
} _SourceInfo_default_instance_;
class SourcePositionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SourcePosition> _instance;
} _SourcePosition_default_instance_;
}  // namespace v1beta1
}  // namespace expr
}  // namespace api
}  // namespace google
static void InitDefaultsscc_info_SourceInfo_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1beta1::_SourceInfo_default_instance_;
    new (ptr) ::google::api::expr::v1beta1::SourceInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1beta1::SourceInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SourceInfo_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SourceInfo_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto}, {
      &scc_info_SourceInfo_PositionsEntry_DoNotUse_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto.base,}};

static void InitDefaultsscc_info_SourceInfo_PositionsEntry_DoNotUse_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1beta1::_SourceInfo_PositionsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse();
  }
  ::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SourceInfo_PositionsEntry_DoNotUse_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SourceInfo_PositionsEntry_DoNotUse_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto}, {}};

static void InitDefaultsscc_info_SourcePosition_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1beta1::_SourcePosition_default_instance_;
    new (ptr) ::google::api::expr::v1beta1::SourcePosition();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1beta1::SourcePosition::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SourcePosition_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SourcePosition_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourceInfo, location_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourceInfo, line_offsets_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourceInfo, positions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourcePosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourcePosition, location_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourcePosition, offset_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourcePosition, line_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1beta1::SourcePosition, column_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse)},
  { 9, -1, sizeof(::google::api::expr::v1beta1::SourceInfo)},
  { 17, -1, sizeof(::google::api::expr::v1beta1::SourcePosition)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1beta1::_SourceInfo_PositionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1beta1::_SourceInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1beta1::_SourcePosition_default_instance_),
};

const char descriptor_table_protodef_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n$google/api/expr/v1beta1/source.proto\022\027"
  "google.api.expr.v1beta1\"\255\001\n\nSourceInfo\022\020"
  "\n\010location\030\002 \001(\t\022\024\n\014line_offsets\030\003 \003(\005\022E"
  "\n\tpositions\030\004 \003(\01322.google.api.expr.v1be"
  "ta1.SourceInfo.PositionsEntry\0320\n\016Positio"
  "nsEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\""
  "P\n\016SourcePosition\022\020\n\010location\030\001 \001(\t\022\016\n\006o"
  "ffset\030\002 \001(\005\022\014\n\004line\030\003 \001(\005\022\016\n\006column\030\004 \001("
  "\005Bl\n\033com.google.api.expr.v1beta1B\013Source"
  "ProtoP\001Z;google.golang.org/genproto/goog"
  "leapis/api/expr/v1beta1;expr\370\001\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto_sccs[3] = {
  &scc_info_SourceInfo_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto.base,
  &scc_info_SourceInfo_PositionsEntry_DoNotUse_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto.base,
  &scc_info_SourcePosition_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto_once;
static bool descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto = {
  &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto_initialized, descriptor_table_protodef_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto, "google/api/expr/v1beta1/source.proto", 439,
  &descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto_once, descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto_sccs, descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto_deps, 3, 0,
  schemas, file_default_instances, TableStruct_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto::offsets,
  file_level_metadata_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto, 3, file_level_enum_descriptors_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto, file_level_service_descriptors_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto), true);
namespace google {
namespace api {
namespace expr {
namespace v1beta1 {

// ===================================================================

SourceInfo_PositionsEntry_DoNotUse::SourceInfo_PositionsEntry_DoNotUse() {}
SourceInfo_PositionsEntry_DoNotUse::SourceInfo_PositionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SourceInfo_PositionsEntry_DoNotUse::MergeFrom(const SourceInfo_PositionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SourceInfo_PositionsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void SourceInfo_PositionsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void SourceInfo::InitAsDefaultInstance() {
}
class SourceInfo::_Internal {
 public:
};

SourceInfo::SourceInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1beta1.SourceInfo)
}
SourceInfo::SourceInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  line_offsets_(arena),
  positions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.SourceInfo)
}
SourceInfo::SourceInfo(const SourceInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      line_offsets_(from.line_offsets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  positions_.MergeFrom(from.positions_);
  location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_location().empty()) {
    location_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_location(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.SourceInfo)
}

void SourceInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SourceInfo_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto.base);
  location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SourceInfo::~SourceInfo() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.SourceInfo)
  SharedDtor();
}

void SourceInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  location_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SourceInfo::ArenaDtor(void* object) {
  SourceInfo* _this = reinterpret_cast< SourceInfo* >(object);
  (void)_this;
}
void SourceInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SourceInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SourceInfo& SourceInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SourceInfo_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto.base);
  return *internal_default_instance();
}


void SourceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.SourceInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  line_offsets_.Clear();
  positions_.Clear();
  location_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

const char* SourceInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string location = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_location(), ptr, ctx, "google.api.expr.v1beta1.SourceInfo.location");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 line_offsets = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_line_offsets(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24) {
          _internal_add_line_offsets(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<int32, int32> positions = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&positions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SourceInfo::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.SourceInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string location = 2;
  if (this->location().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1beta1.SourceInfo.location");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_location(), target);
  }

  // repeated int32 line_offsets = 3;
  {
    int byte_size = _line_offsets_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          3, _internal_line_offsets(), byte_size, target);
    }
  }

  // map<int32, int32> positions = 4;
  if (!this->_internal_positions().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_positions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_positions().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >::const_iterator
          it = this->_internal_positions().begin();
          it != this->_internal_positions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = SourceInfo_PositionsEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >::const_iterator
          it = this->_internal_positions().begin();
          it != this->_internal_positions().end(); ++it) {
        target = SourceInfo_PositionsEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.SourceInfo)
  return target;
}

size_t SourceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.SourceInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 line_offsets = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->line_offsets_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _line_offsets_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // map<int32, int32> positions = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_positions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::int32 >::const_iterator
      it = this->_internal_positions().begin();
      it != this->_internal_positions().end(); ++it) {
    total_size += SourceInfo_PositionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string location = 2;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SourceInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1beta1.SourceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SourceInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SourceInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1beta1.SourceInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1beta1.SourceInfo)
    MergeFrom(*source);
  }
}

void SourceInfo::MergeFrom(const SourceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.SourceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  line_offsets_.MergeFrom(from.line_offsets_);
  positions_.MergeFrom(from.positions_);
  if (from.location().size() > 0) {
    _internal_set_location(from._internal_location());
  }
}

void SourceInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1beta1.SourceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceInfo::CopyFrom(const SourceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.SourceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourceInfo::IsInitialized() const {
  return true;
}

void SourceInfo::InternalSwap(SourceInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  line_offsets_.InternalSwap(&other->line_offsets_);
  positions_.Swap(&other->positions_);
  location_.Swap(&other->location_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata SourceInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SourcePosition::InitAsDefaultInstance() {
}
class SourcePosition::_Internal {
 public:
};

SourcePosition::SourcePosition()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1beta1.SourcePosition)
}
SourcePosition::SourcePosition(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1beta1.SourcePosition)
}
SourcePosition::SourcePosition(const SourcePosition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_location().empty()) {
    location_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_location(),
      GetArenaNoVirtual());
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&column_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(column_));
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1beta1.SourcePosition)
}

void SourcePosition::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SourcePosition_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto.base);
  location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&column_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(column_));
}

SourcePosition::~SourcePosition() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1beta1.SourcePosition)
  SharedDtor();
}

void SourcePosition::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  location_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SourcePosition::ArenaDtor(void* object) {
  SourcePosition* _this = reinterpret_cast< SourcePosition* >(object);
  (void)_this;
}
void SourcePosition::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SourcePosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SourcePosition& SourcePosition::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SourcePosition_google_2fapi_2fexpr_2fv1beta1_2fsource_2eproto.base);
  return *internal_default_instance();
}


void SourcePosition::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1beta1.SourcePosition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&column_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(column_));
  _internal_metadata_.Clear();
}

const char* SourcePosition::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string location = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_location(), ptr, ctx, "google.api.expr.v1beta1.SourcePosition.location");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 offset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 line = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          line_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 column = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          column_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SourcePosition::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1beta1.SourcePosition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string location = 1;
  if (this->location().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1beta1.SourcePosition.location");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location(), target);
  }

  // int32 offset = 2;
  if (this->offset() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_offset(), target);
  }

  // int32 line = 3;
  if (this->line() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_line(), target);
  }

  // int32 column = 4;
  if (this->column() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_column(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1beta1.SourcePosition)
  return target;
}

size_t SourcePosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1beta1.SourcePosition)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location = 1;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location());
  }

  // int32 offset = 2;
  if (this->offset() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_offset());
  }

  // int32 line = 3;
  if (this->line() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_line());
  }

  // int32 column = 4;
  if (this->column() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_column());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SourcePosition::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1beta1.SourcePosition)
  GOOGLE_DCHECK_NE(&from, this);
  const SourcePosition* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SourcePosition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1beta1.SourcePosition)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1beta1.SourcePosition)
    MergeFrom(*source);
  }
}

void SourcePosition::MergeFrom(const SourcePosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1beta1.SourcePosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.location().size() > 0) {
    _internal_set_location(from._internal_location());
  }
  if (from.offset() != 0) {
    _internal_set_offset(from._internal_offset());
  }
  if (from.line() != 0) {
    _internal_set_line(from._internal_line());
  }
  if (from.column() != 0) {
    _internal_set_column(from._internal_column());
  }
}

void SourcePosition::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1beta1.SourcePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourcePosition::CopyFrom(const SourcePosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1beta1.SourcePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourcePosition::IsInitialized() const {
  return true;
}

void SourcePosition::InternalSwap(SourcePosition* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  location_.Swap(&other->location_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(offset_, other->offset_);
  swap(line_, other->line_);
  swap(column_, other->column_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SourcePosition::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace expr
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::SourceInfo_PositionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1beta1::SourceInfo* Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::SourceInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::SourceInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1beta1::SourcePosition* Arena::CreateMaybeMessage< ::google::api::expr::v1beta1::SourcePosition >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1beta1::SourcePosition >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
