// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/expr/v1alpha1/conformance_service.proto

#include "google/api/expr/v1alpha1/conformance_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_CheckedExpr_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Decl_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EvalRequest_BindingsEntry_DoNotUse_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ExprValue_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ParsedExpr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SourcePosition_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2frpc_2fstatus_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Status_google_2frpc_2fstatus_2eproto;
namespace google {
namespace api {
namespace expr {
namespace v1alpha1 {
class ParseRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ParseRequest> _instance;
} _ParseRequest_default_instance_;
class ParseResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ParseResponse> _instance;
} _ParseResponse_default_instance_;
class CheckRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CheckRequest> _instance;
} _CheckRequest_default_instance_;
class CheckResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CheckResponse> _instance;
} _CheckResponse_default_instance_;
class EvalRequest_BindingsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EvalRequest_BindingsEntry_DoNotUse> _instance;
} _EvalRequest_BindingsEntry_DoNotUse_default_instance_;
class EvalRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EvalRequest> _instance;
  const ::google::api::expr::v1alpha1::ParsedExpr* parsed_expr_;
  const ::google::api::expr::v1alpha1::CheckedExpr* checked_expr_;
} _EvalRequest_default_instance_;
class EvalResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EvalResponse> _instance;
} _EvalResponse_default_instance_;
class IssueDetailsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IssueDetails> _instance;
} _IssueDetails_default_instance_;
}  // namespace v1alpha1
}  // namespace expr
}  // namespace api
}  // namespace google
static void InitDefaultsscc_info_CheckRequest_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_CheckRequest_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::CheckRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::CheckRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CheckRequest_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_CheckRequest_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto}, {
      &scc_info_ParsedExpr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base,
      &scc_info_Decl_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto.base,}};

static void InitDefaultsscc_info_CheckResponse_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_CheckResponse_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::CheckResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::CheckResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CheckResponse_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_CheckResponse_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto}, {
      &scc_info_CheckedExpr_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto.base,
      &scc_info_Status_google_2frpc_2fstatus_2eproto.base,}};

static void InitDefaultsscc_info_EvalRequest_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_EvalRequest_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::EvalRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::EvalRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_EvalRequest_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_EvalRequest_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto}, {
      &scc_info_ParsedExpr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base,
      &scc_info_CheckedExpr_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto.base,
      &scc_info_EvalRequest_BindingsEntry_DoNotUse_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto.base,}};

static void InitDefaultsscc_info_EvalRequest_BindingsEntry_DoNotUse_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_EvalRequest_BindingsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::EvalRequest_BindingsEntry_DoNotUse();
  }
  ::google::api::expr::v1alpha1::EvalRequest_BindingsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_EvalRequest_BindingsEntry_DoNotUse_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_EvalRequest_BindingsEntry_DoNotUse_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto}, {
      &scc_info_ExprValue_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto.base,}};

static void InitDefaultsscc_info_EvalResponse_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_EvalResponse_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::EvalResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::EvalResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_EvalResponse_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_EvalResponse_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto}, {
      &scc_info_ExprValue_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto.base,
      &scc_info_Status_google_2frpc_2fstatus_2eproto.base,}};

static void InitDefaultsscc_info_IssueDetails_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_IssueDetails_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::IssueDetails();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::IssueDetails::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IssueDetails_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_IssueDetails_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto}, {
      &scc_info_SourcePosition_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base,}};

static void InitDefaultsscc_info_ParseRequest_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_ParseRequest_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::ParseRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::ParseRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ParseRequest_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ParseRequest_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_ParseResponse_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_ParseResponse_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::ParseResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::ParseResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ParseResponse_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ParseResponse_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto}, {
      &scc_info_ParsedExpr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base,
      &scc_info_Status_google_2frpc_2fstatus_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto[8];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::ParseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::ParseRequest, cel_source_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::ParseRequest, syntax_version_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::ParseRequest, source_location_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::ParseRequest, disable_macros_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::ParseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::ParseResponse, parsed_expr_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::ParseResponse, issues_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckRequest, parsed_expr_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckRequest, type_env_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckRequest, container_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckRequest, no_std_env_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckResponse, checked_expr_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::CheckResponse, issues_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalRequest_BindingsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalRequest_BindingsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalRequest_BindingsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalRequest_BindingsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::api::expr::v1alpha1::EvalRequestDefaultTypeInternal, parsed_expr_),
  offsetof(::google::api::expr::v1alpha1::EvalRequestDefaultTypeInternal, checked_expr_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalRequest, bindings_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalRequest, container_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalRequest, expr_kind_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalResponse, result_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalResponse, issues_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::IssueDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::IssueDetails, severity_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::IssueDetails, position_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::IssueDetails, id_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::api::expr::v1alpha1::ParseRequest)},
  { 9, -1, sizeof(::google::api::expr::v1alpha1::ParseResponse)},
  { 16, -1, sizeof(::google::api::expr::v1alpha1::CheckRequest)},
  { 25, -1, sizeof(::google::api::expr::v1alpha1::CheckResponse)},
  { 32, 39, sizeof(::google::api::expr::v1alpha1::EvalRequest_BindingsEntry_DoNotUse)},
  { 41, -1, sizeof(::google::api::expr::v1alpha1::EvalRequest)},
  { 51, -1, sizeof(::google::api::expr::v1alpha1::EvalResponse)},
  { 58, -1, sizeof(::google::api::expr::v1alpha1::IssueDetails)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_ParseRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_ParseResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_CheckRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_CheckResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_EvalRequest_BindingsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_EvalRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_EvalResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_IssueDetails_default_instance_),
};

const char descriptor_table_protodef_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n2google/api/expr/v1alpha1/conformance_s"
  "ervice.proto\022\030google.api.expr.v1alpha1\032\027"
  "google/api/client.proto\032&google/api/expr"
  "/v1alpha1/checked.proto\032#google/api/expr"
  "/v1alpha1/eval.proto\032%google/api/expr/v1"
  "alpha1/syntax.proto\032\037google/api/field_be"
  "havior.proto\032\027google/rpc/status.proto\"p\n"
  "\014ParseRequest\022\027\n\ncel_source\030\001 \001(\tB\003\340A\002\022\026"
  "\n\016syntax_version\030\002 \001(\t\022\027\n\017source_locatio"
  "n\030\003 \001(\t\022\026\n\016disable_macros\030\004 \001(\010\"n\n\rParse"
  "Response\0229\n\013parsed_expr\030\001 \001(\0132$.google.a"
  "pi.expr.v1alpha1.ParsedExpr\022\"\n\006issues\030\002 "
  "\003(\0132\022.google.rpc.Status\"\247\001\n\014CheckRequest"
  "\022>\n\013parsed_expr\030\001 \001(\0132$.google.api.expr."
  "v1alpha1.ParsedExprB\003\340A\002\0220\n\010type_env\030\002 \003"
  "(\0132\036.google.api.expr.v1alpha1.Decl\022\021\n\tco"
  "ntainer\030\003 \001(\t\022\022\n\nno_std_env\030\004 \001(\010\"p\n\rChe"
  "ckResponse\022;\n\014checked_expr\030\001 \001(\0132%.googl"
  "e.api.expr.v1alpha1.CheckedExpr\022\"\n\006issue"
  "s\030\002 \003(\0132\022.google.rpc.Status\"\306\002\n\013EvalRequ"
  "est\022;\n\013parsed_expr\030\001 \001(\0132$.google.api.ex"
  "pr.v1alpha1.ParsedExprH\000\022=\n\014checked_expr"
  "\030\002 \001(\0132%.google.api.expr.v1alpha1.Checke"
  "dExprH\000\022E\n\010bindings\030\003 \003(\01323.google.api.e"
  "xpr.v1alpha1.EvalRequest.BindingsEntry\022\021"
  "\n\tcontainer\030\004 \001(\t\032T\n\rBindingsEntry\022\013\n\003ke"
  "y\030\001 \001(\t\0222\n\005value\030\002 \001(\0132#.google.api.expr"
  ".v1alpha1.ExprValue:\0028\001B\013\n\texpr_kind\"g\n\014"
  "EvalResponse\0223\n\006result\030\001 \001(\0132#.google.ap"
  "i.expr.v1alpha1.ExprValue\022\"\n\006issues\030\002 \003("
  "\0132\022.google.rpc.Status\"\350\001\n\014IssueDetails\022A"
  "\n\010severity\030\001 \001(\0162/.google.api.expr.v1alp"
  "ha1.IssueDetails.Severity\022:\n\010position\030\002 "
  "\001(\0132(.google.api.expr.v1alpha1.SourcePos"
  "ition\022\n\n\002id\030\003 \001(\003\"M\n\010Severity\022\030\n\024SEVERIT"
  "Y_UNSPECIFIED\020\000\022\017\n\013DEPRECATION\020\001\022\013\n\007WARN"
  "ING\020\002\022\t\n\005ERROR\020\0032\327\002\n\022ConformanceService\022"
  "g\n\005Parse\022&.google.api.expr.v1alpha1.Pars"
  "eRequest\032\'.google.api.expr.v1alpha1.Pars"
  "eResponse\"\r\332A\ncel_source\022h\n\005Check\022&.goog"
  "le.api.expr.v1alpha1.CheckRequest\032\'.goog"
  "le.api.expr.v1alpha1.CheckResponse\"\016\332A\013p"
  "arsed_expr\022W\n\004Eval\022%.google.api.expr.v1a"
  "lpha1.EvalRequest\032&.google.api.expr.v1al"
  "pha1.EvalResponse\"\000\032\025\312A\022cel.googleapis.c"
  "omBz\n\034com.google.api.expr.v1alpha1B\027Conf"
  "ormanceServiceProtoP\001Z<google.golang.org"
  "/genproto/googleapis/api/expr/v1alpha1;e"
  "xpr\370\001\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto_deps[6] = {
  &::descriptor_table_google_2fapi_2fclient_2eproto,
  &::descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fchecked_2eproto,
  &::descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto,
  &::descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto,
  &::descriptor_table_google_2fapi_2ffield_5fbehavior_2eproto,
  &::descriptor_table_google_2frpc_2fstatus_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto_sccs[8] = {
  &scc_info_CheckRequest_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto.base,
  &scc_info_CheckResponse_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto.base,
  &scc_info_EvalRequest_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto.base,
  &scc_info_EvalRequest_BindingsEntry_DoNotUse_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto.base,
  &scc_info_EvalResponse_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto.base,
  &scc_info_IssueDetails_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto.base,
  &scc_info_ParseRequest_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto.base,
  &scc_info_ParseResponse_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto_once;
static bool descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto = {
  &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto_initialized, descriptor_table_protodef_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto, "google/api/expr/v1alpha1/conformance_service.proto", 1934,
  &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto_once, descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto_sccs, descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto_deps, 8, 6,
  schemas, file_default_instances, TableStruct_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto::offsets,
  file_level_metadata_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto, 8, file_level_enum_descriptors_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto, file_level_service_descriptors_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto), true);
namespace google {
namespace api {
namespace expr {
namespace v1alpha1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* IssueDetails_Severity_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto);
  return file_level_enum_descriptors_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto[0];
}
bool IssueDetails_Severity_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr IssueDetails_Severity IssueDetails::SEVERITY_UNSPECIFIED;
constexpr IssueDetails_Severity IssueDetails::DEPRECATION;
constexpr IssueDetails_Severity IssueDetails::WARNING;
constexpr IssueDetails_Severity IssueDetails::ERROR;
constexpr IssueDetails_Severity IssueDetails::Severity_MIN;
constexpr IssueDetails_Severity IssueDetails::Severity_MAX;
constexpr int IssueDetails::Severity_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void ParseRequest::InitAsDefaultInstance() {
}
class ParseRequest::_Internal {
 public:
};

ParseRequest::ParseRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.ParseRequest)
}
ParseRequest::ParseRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.ParseRequest)
}
ParseRequest::ParseRequest(const ParseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cel_source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cel_source().empty()) {
    cel_source_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_cel_source(),
      GetArenaNoVirtual());
  }
  syntax_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_syntax_version().empty()) {
    syntax_version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_syntax_version(),
      GetArenaNoVirtual());
  }
  source_location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_source_location().empty()) {
    source_location_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_source_location(),
      GetArenaNoVirtual());
  }
  disable_macros_ = from.disable_macros_;
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.ParseRequest)
}

void ParseRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ParseRequest_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto.base);
  cel_source_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  syntax_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  disable_macros_ = false;
}

ParseRequest::~ParseRequest() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.ParseRequest)
  SharedDtor();
}

void ParseRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  cel_source_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  syntax_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  source_location_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ParseRequest::ArenaDtor(void* object) {
  ParseRequest* _this = reinterpret_cast< ParseRequest* >(object);
  (void)_this;
}
void ParseRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ParseRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParseRequest& ParseRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ParseRequest_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ParseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.ParseRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cel_source_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  syntax_version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  source_location_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  disable_macros_ = false;
  _internal_metadata_.Clear();
}

const char* ParseRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string cel_source = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_cel_source(), ptr, ctx, "google.api.expr.v1alpha1.ParseRequest.cel_source");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string syntax_version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_syntax_version(), ptr, ctx, "google.api.expr.v1alpha1.ParseRequest.syntax_version");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string source_location = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_source_location(), ptr, ctx, "google.api.expr.v1alpha1.ParseRequest.source_location");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool disable_macros = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          disable_macros_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ParseRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.ParseRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cel_source = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->cel_source().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cel_source().data(), static_cast<int>(this->_internal_cel_source().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.ParseRequest.cel_source");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_cel_source(), target);
  }

  // string syntax_version = 2;
  if (this->syntax_version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_syntax_version().data(), static_cast<int>(this->_internal_syntax_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.ParseRequest.syntax_version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_syntax_version(), target);
  }

  // string source_location = 3;
  if (this->source_location().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_source_location().data(), static_cast<int>(this->_internal_source_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.ParseRequest.source_location");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_source_location(), target);
  }

  // bool disable_macros = 4;
  if (this->disable_macros() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_disable_macros(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.ParseRequest)
  return target;
}

size_t ParseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.ParseRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string cel_source = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->cel_source().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cel_source());
  }

  // string syntax_version = 2;
  if (this->syntax_version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_syntax_version());
  }

  // string source_location = 3;
  if (this->source_location().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_source_location());
  }

  // bool disable_macros = 4;
  if (this->disable_macros() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParseRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.ParseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ParseRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ParseRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.ParseRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.ParseRequest)
    MergeFrom(*source);
  }
}

void ParseRequest::MergeFrom(const ParseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.ParseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cel_source().size() > 0) {
    _internal_set_cel_source(from._internal_cel_source());
  }
  if (from.syntax_version().size() > 0) {
    _internal_set_syntax_version(from._internal_syntax_version());
  }
  if (from.source_location().size() > 0) {
    _internal_set_source_location(from._internal_source_location());
  }
  if (from.disable_macros() != 0) {
    _internal_set_disable_macros(from._internal_disable_macros());
  }
}

void ParseRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.ParseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParseRequest::CopyFrom(const ParseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.ParseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParseRequest::IsInitialized() const {
  return true;
}

void ParseRequest::InternalSwap(ParseRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  cel_source_.Swap(&other->cel_source_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  syntax_version_.Swap(&other->syntax_version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  source_location_.Swap(&other->source_location_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(disable_macros_, other->disable_macros_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ParseRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ParseResponse::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_ParseResponse_default_instance_._instance.get_mutable()->parsed_expr_ = const_cast< ::google::api::expr::v1alpha1::ParsedExpr*>(
      ::google::api::expr::v1alpha1::ParsedExpr::internal_default_instance());
}
class ParseResponse::_Internal {
 public:
  static const ::google::api::expr::v1alpha1::ParsedExpr& parsed_expr(const ParseResponse* msg);
};

const ::google::api::expr::v1alpha1::ParsedExpr&
ParseResponse::_Internal::parsed_expr(const ParseResponse* msg) {
  return *msg->parsed_expr_;
}
void ParseResponse::unsafe_arena_set_allocated_parsed_expr(
    ::google::api::expr::v1alpha1::ParsedExpr* parsed_expr) {
  if (GetArenaNoVirtual() == nullptr) {
    delete parsed_expr_;
  }
  parsed_expr_ = parsed_expr;
  if (parsed_expr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.ParseResponse.parsed_expr)
}
void ParseResponse::clear_parsed_expr() {
  if (GetArenaNoVirtual() == nullptr && parsed_expr_ != nullptr) {
    delete parsed_expr_;
  }
  parsed_expr_ = nullptr;
}
void ParseResponse::clear_issues() {
  issues_.Clear();
}
ParseResponse::ParseResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.ParseResponse)
}
ParseResponse::ParseResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  issues_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.ParseResponse)
}
ParseResponse::ParseResponse(const ParseResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      issues_(from.issues_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_parsed_expr()) {
    parsed_expr_ = new ::google::api::expr::v1alpha1::ParsedExpr(*from.parsed_expr_);
  } else {
    parsed_expr_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.ParseResponse)
}

void ParseResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ParseResponse_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto.base);
  parsed_expr_ = nullptr;
}

ParseResponse::~ParseResponse() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.ParseResponse)
  SharedDtor();
}

void ParseResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  if (this != internal_default_instance()) delete parsed_expr_;
}

void ParseResponse::ArenaDtor(void* object) {
  ParseResponse* _this = reinterpret_cast< ParseResponse* >(object);
  (void)_this;
}
void ParseResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ParseResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParseResponse& ParseResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ParseResponse_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto.base);
  return *internal_default_instance();
}


void ParseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.ParseResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  issues_.Clear();
  if (GetArenaNoVirtual() == nullptr && parsed_expr_ != nullptr) {
    delete parsed_expr_;
  }
  parsed_expr_ = nullptr;
  _internal_metadata_.Clear();
}

const char* ParseResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_parsed_expr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .google.rpc.Status issues = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_issues(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ParseResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.ParseResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
  if (this->has_parsed_expr()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::parsed_expr(this), target, stream);
  }

  // repeated .google.rpc.Status issues = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_issues_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(2, this->_internal_issues(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.ParseResponse)
  return target;
}

size_t ParseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.ParseResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.rpc.Status issues = 2;
  total_size += 1UL * this->_internal_issues_size();
  for (const auto& msg : this->issues_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
  if (this->has_parsed_expr()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *parsed_expr_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParseResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.ParseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ParseResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ParseResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.ParseResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.ParseResponse)
    MergeFrom(*source);
  }
}

void ParseResponse::MergeFrom(const ParseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.ParseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  issues_.MergeFrom(from.issues_);
  if (from.has_parsed_expr()) {
    _internal_mutable_parsed_expr()->::google::api::expr::v1alpha1::ParsedExpr::MergeFrom(from._internal_parsed_expr());
  }
}

void ParseResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.ParseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParseResponse::CopyFrom(const ParseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.ParseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParseResponse::IsInitialized() const {
  return true;
}

void ParseResponse::InternalSwap(ParseResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  issues_.InternalSwap(&other->issues_);
  swap(parsed_expr_, other->parsed_expr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ParseResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CheckRequest::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_CheckRequest_default_instance_._instance.get_mutable()->parsed_expr_ = const_cast< ::google::api::expr::v1alpha1::ParsedExpr*>(
      ::google::api::expr::v1alpha1::ParsedExpr::internal_default_instance());
}
class CheckRequest::_Internal {
 public:
  static const ::google::api::expr::v1alpha1::ParsedExpr& parsed_expr(const CheckRequest* msg);
};

const ::google::api::expr::v1alpha1::ParsedExpr&
CheckRequest::_Internal::parsed_expr(const CheckRequest* msg) {
  return *msg->parsed_expr_;
}
void CheckRequest::unsafe_arena_set_allocated_parsed_expr(
    ::google::api::expr::v1alpha1::ParsedExpr* parsed_expr) {
  if (GetArenaNoVirtual() == nullptr) {
    delete parsed_expr_;
  }
  parsed_expr_ = parsed_expr;
  if (parsed_expr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.CheckRequest.parsed_expr)
}
void CheckRequest::clear_parsed_expr() {
  if (GetArenaNoVirtual() == nullptr && parsed_expr_ != nullptr) {
    delete parsed_expr_;
  }
  parsed_expr_ = nullptr;
}
void CheckRequest::clear_type_env() {
  type_env_.Clear();
}
CheckRequest::CheckRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.CheckRequest)
}
CheckRequest::CheckRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  type_env_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.CheckRequest)
}
CheckRequest::CheckRequest(const CheckRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      type_env_(from.type_env_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  container_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_container().empty()) {
    container_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_container(),
      GetArenaNoVirtual());
  }
  if (from._internal_has_parsed_expr()) {
    parsed_expr_ = new ::google::api::expr::v1alpha1::ParsedExpr(*from.parsed_expr_);
  } else {
    parsed_expr_ = nullptr;
  }
  no_std_env_ = from.no_std_env_;
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.CheckRequest)
}

void CheckRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CheckRequest_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto.base);
  container_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&parsed_expr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&no_std_env_) -
      reinterpret_cast<char*>(&parsed_expr_)) + sizeof(no_std_env_));
}

CheckRequest::~CheckRequest() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.CheckRequest)
  SharedDtor();
}

void CheckRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  container_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete parsed_expr_;
}

void CheckRequest::ArenaDtor(void* object) {
  CheckRequest* _this = reinterpret_cast< CheckRequest* >(object);
  (void)_this;
}
void CheckRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CheckRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CheckRequest& CheckRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CheckRequest_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CheckRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.CheckRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_env_.Clear();
  container_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && parsed_expr_ != nullptr) {
    delete parsed_expr_;
  }
  parsed_expr_ = nullptr;
  no_std_env_ = false;
  _internal_metadata_.Clear();
}

const char* CheckRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1 [(.google.api.field_behavior) = REQUIRED];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_parsed_expr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .google.api.expr.v1alpha1.Decl type_env = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_type_env(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // string container = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_container(), ptr, ctx, "google.api.expr.v1alpha1.CheckRequest.container");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool no_std_env = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          no_std_env_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CheckRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.CheckRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_parsed_expr()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::parsed_expr(this), target, stream);
  }

  // repeated .google.api.expr.v1alpha1.Decl type_env = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_type_env_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(2, this->_internal_type_env(i), target, stream);
  }

  // string container = 3;
  if (this->container().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_container().data(), static_cast<int>(this->_internal_container().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.CheckRequest.container");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_container(), target);
  }

  // bool no_std_env = 4;
  if (this->no_std_env() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_no_std_env(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.CheckRequest)
  return target;
}

size_t CheckRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.CheckRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.expr.v1alpha1.Decl type_env = 2;
  total_size += 1UL * this->_internal_type_env_size();
  for (const auto& msg : this->type_env_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string container = 3;
  if (this->container().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_container());
  }

  // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1 [(.google.api.field_behavior) = REQUIRED];
  if (this->has_parsed_expr()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *parsed_expr_);
  }

  // bool no_std_env = 4;
  if (this->no_std_env() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.CheckRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CheckRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.CheckRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.CheckRequest)
    MergeFrom(*source);
  }
}

void CheckRequest::MergeFrom(const CheckRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.CheckRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  type_env_.MergeFrom(from.type_env_);
  if (from.container().size() > 0) {
    _internal_set_container(from._internal_container());
  }
  if (from.has_parsed_expr()) {
    _internal_mutable_parsed_expr()->::google::api::expr::v1alpha1::ParsedExpr::MergeFrom(from._internal_parsed_expr());
  }
  if (from.no_std_env() != 0) {
    _internal_set_no_std_env(from._internal_no_std_env());
  }
}

void CheckRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.CheckRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckRequest::CopyFrom(const CheckRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.CheckRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckRequest::IsInitialized() const {
  return true;
}

void CheckRequest::InternalSwap(CheckRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  type_env_.InternalSwap(&other->type_env_);
  container_.Swap(&other->container_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(parsed_expr_, other->parsed_expr_);
  swap(no_std_env_, other->no_std_env_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CheckResponse::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_CheckResponse_default_instance_._instance.get_mutable()->checked_expr_ = const_cast< ::google::api::expr::v1alpha1::CheckedExpr*>(
      ::google::api::expr::v1alpha1::CheckedExpr::internal_default_instance());
}
class CheckResponse::_Internal {
 public:
  static const ::google::api::expr::v1alpha1::CheckedExpr& checked_expr(const CheckResponse* msg);
};

const ::google::api::expr::v1alpha1::CheckedExpr&
CheckResponse::_Internal::checked_expr(const CheckResponse* msg) {
  return *msg->checked_expr_;
}
void CheckResponse::unsafe_arena_set_allocated_checked_expr(
    ::google::api::expr::v1alpha1::CheckedExpr* checked_expr) {
  if (GetArenaNoVirtual() == nullptr) {
    delete checked_expr_;
  }
  checked_expr_ = checked_expr;
  if (checked_expr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.CheckResponse.checked_expr)
}
void CheckResponse::clear_checked_expr() {
  if (GetArenaNoVirtual() == nullptr && checked_expr_ != nullptr) {
    delete checked_expr_;
  }
  checked_expr_ = nullptr;
}
void CheckResponse::clear_issues() {
  issues_.Clear();
}
CheckResponse::CheckResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.CheckResponse)
}
CheckResponse::CheckResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  issues_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.CheckResponse)
}
CheckResponse::CheckResponse(const CheckResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      issues_(from.issues_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_checked_expr()) {
    checked_expr_ = new ::google::api::expr::v1alpha1::CheckedExpr(*from.checked_expr_);
  } else {
    checked_expr_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.CheckResponse)
}

void CheckResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CheckResponse_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto.base);
  checked_expr_ = nullptr;
}

CheckResponse::~CheckResponse() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.CheckResponse)
  SharedDtor();
}

void CheckResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  if (this != internal_default_instance()) delete checked_expr_;
}

void CheckResponse::ArenaDtor(void* object) {
  CheckResponse* _this = reinterpret_cast< CheckResponse* >(object);
  (void)_this;
}
void CheckResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CheckResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CheckResponse& CheckResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CheckResponse_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto.base);
  return *internal_default_instance();
}


void CheckResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.CheckResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  issues_.Clear();
  if (GetArenaNoVirtual() == nullptr && checked_expr_ != nullptr) {
    delete checked_expr_;
  }
  checked_expr_ = nullptr;
  _internal_metadata_.Clear();
}

const char* CheckResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.api.expr.v1alpha1.CheckedExpr checked_expr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_checked_expr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .google.rpc.Status issues = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_issues(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CheckResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.CheckResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.CheckedExpr checked_expr = 1;
  if (this->has_checked_expr()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::checked_expr(this), target, stream);
  }

  // repeated .google.rpc.Status issues = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_issues_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(2, this->_internal_issues(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.CheckResponse)
  return target;
}

size_t CheckResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.CheckResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.rpc.Status issues = 2;
  total_size += 1UL * this->_internal_issues_size();
  for (const auto& msg : this->issues_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .google.api.expr.v1alpha1.CheckedExpr checked_expr = 1;
  if (this->has_checked_expr()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *checked_expr_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.CheckResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CheckResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.CheckResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.CheckResponse)
    MergeFrom(*source);
  }
}

void CheckResponse::MergeFrom(const CheckResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.CheckResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  issues_.MergeFrom(from.issues_);
  if (from.has_checked_expr()) {
    _internal_mutable_checked_expr()->::google::api::expr::v1alpha1::CheckedExpr::MergeFrom(from._internal_checked_expr());
  }
}

void CheckResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.CheckResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckResponse::CopyFrom(const CheckResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.CheckResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckResponse::IsInitialized() const {
  return true;
}

void CheckResponse::InternalSwap(CheckResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  issues_.InternalSwap(&other->issues_);
  swap(checked_expr_, other->checked_expr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

EvalRequest_BindingsEntry_DoNotUse::EvalRequest_BindingsEntry_DoNotUse() {}
EvalRequest_BindingsEntry_DoNotUse::EvalRequest_BindingsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void EvalRequest_BindingsEntry_DoNotUse::MergeFrom(const EvalRequest_BindingsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata EvalRequest_BindingsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void EvalRequest_BindingsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void EvalRequest::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_EvalRequest_default_instance_.parsed_expr_ = const_cast< ::google::api::expr::v1alpha1::ParsedExpr*>(
      ::google::api::expr::v1alpha1::ParsedExpr::internal_default_instance());
  ::google::api::expr::v1alpha1::_EvalRequest_default_instance_.checked_expr_ = const_cast< ::google::api::expr::v1alpha1::CheckedExpr*>(
      ::google::api::expr::v1alpha1::CheckedExpr::internal_default_instance());
}
class EvalRequest::_Internal {
 public:
  static const ::google::api::expr::v1alpha1::ParsedExpr& parsed_expr(const EvalRequest* msg);
  static const ::google::api::expr::v1alpha1::CheckedExpr& checked_expr(const EvalRequest* msg);
};

const ::google::api::expr::v1alpha1::ParsedExpr&
EvalRequest::_Internal::parsed_expr(const EvalRequest* msg) {
  return *msg->expr_kind_.parsed_expr_;
}
const ::google::api::expr::v1alpha1::CheckedExpr&
EvalRequest::_Internal::checked_expr(const EvalRequest* msg) {
  return *msg->expr_kind_.checked_expr_;
}
void EvalRequest::set_allocated_parsed_expr(::google::api::expr::v1alpha1::ParsedExpr* parsed_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_expr_kind();
  if (parsed_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(parsed_expr)->GetArena();
    if (message_arena != submessage_arena) {
      parsed_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, parsed_expr, submessage_arena);
    }
    set_has_parsed_expr();
    expr_kind_.parsed_expr_ = parsed_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.EvalRequest.parsed_expr)
}
void EvalRequest::clear_parsed_expr() {
  if (_internal_has_parsed_expr()) {
    if (GetArenaNoVirtual() == nullptr) {
      delete expr_kind_.parsed_expr_;
    }
    clear_has_expr_kind();
  }
}
void EvalRequest::set_allocated_checked_expr(::google::api::expr::v1alpha1::CheckedExpr* checked_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_expr_kind();
  if (checked_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(checked_expr)->GetArena();
    if (message_arena != submessage_arena) {
      checked_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, checked_expr, submessage_arena);
    }
    set_has_checked_expr();
    expr_kind_.checked_expr_ = checked_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.EvalRequest.checked_expr)
}
void EvalRequest::clear_checked_expr() {
  if (_internal_has_checked_expr()) {
    if (GetArenaNoVirtual() == nullptr) {
      delete expr_kind_.checked_expr_;
    }
    clear_has_expr_kind();
  }
}
void EvalRequest::clear_bindings() {
  bindings_.Clear();
}
EvalRequest::EvalRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.EvalRequest)
}
EvalRequest::EvalRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  bindings_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.EvalRequest)
}
EvalRequest::EvalRequest(const EvalRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bindings_.MergeFrom(from.bindings_);
  container_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_container().empty()) {
    container_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_container(),
      GetArenaNoVirtual());
  }
  clear_has_expr_kind();
  switch (from.expr_kind_case()) {
    case kParsedExpr: {
      _internal_mutable_parsed_expr()->::google::api::expr::v1alpha1::ParsedExpr::MergeFrom(from._internal_parsed_expr());
      break;
    }
    case kCheckedExpr: {
      _internal_mutable_checked_expr()->::google::api::expr::v1alpha1::CheckedExpr::MergeFrom(from._internal_checked_expr());
      break;
    }
    case EXPR_KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.EvalRequest)
}

void EvalRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EvalRequest_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto.base);
  container_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_has_expr_kind();
}

EvalRequest::~EvalRequest() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.EvalRequest)
  SharedDtor();
}

void EvalRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  container_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_expr_kind()) {
    clear_expr_kind();
  }
}

void EvalRequest::ArenaDtor(void* object) {
  EvalRequest* _this = reinterpret_cast< EvalRequest* >(object);
  (void)_this;
}
void EvalRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EvalRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EvalRequest& EvalRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EvalRequest_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto.base);
  return *internal_default_instance();
}


void EvalRequest::clear_expr_kind() {
// @@protoc_insertion_point(one_of_clear_start:google.api.expr.v1alpha1.EvalRequest)
  switch (expr_kind_case()) {
    case kParsedExpr: {
      if (GetArenaNoVirtual() == nullptr) {
        delete expr_kind_.parsed_expr_;
      }
      break;
    }
    case kCheckedExpr: {
      if (GetArenaNoVirtual() == nullptr) {
        delete expr_kind_.checked_expr_;
      }
      break;
    }
    case EXPR_KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EXPR_KIND_NOT_SET;
}


void EvalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.EvalRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bindings_.Clear();
  container_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  clear_expr_kind();
  _internal_metadata_.Clear();
}

const char* EvalRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_parsed_expr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.CheckedExpr checked_expr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_checked_expr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, .google.api.expr.v1alpha1.ExprValue> bindings = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&bindings_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // string container = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_container(), ptr, ctx, "google.api.expr.v1alpha1.EvalRequest.container");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EvalRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.EvalRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
  if (_internal_has_parsed_expr()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::parsed_expr(this), target, stream);
  }

  // .google.api.expr.v1alpha1.CheckedExpr checked_expr = 2;
  if (_internal_has_checked_expr()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::checked_expr(this), target, stream);
  }

  // map<string, .google.api.expr.v1alpha1.ExprValue> bindings = 3;
  if (!this->_internal_bindings().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::google::api::expr::v1alpha1::ExprValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.api.expr.v1alpha1.EvalRequest.BindingsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_bindings().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_bindings().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::google::api::expr::v1alpha1::ExprValue >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::google::api::expr::v1alpha1::ExprValue >::const_iterator
          it = this->_internal_bindings().begin();
          it != this->_internal_bindings().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = EvalRequest_BindingsEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::google::api::expr::v1alpha1::ExprValue >::const_iterator
          it = this->_internal_bindings().begin();
          it != this->_internal_bindings().end(); ++it) {
        target = EvalRequest_BindingsEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // string container = 4;
  if (this->container().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_container().data(), static_cast<int>(this->_internal_container().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.EvalRequest.container");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_container(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.EvalRequest)
  return target;
}

size_t EvalRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.EvalRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .google.api.expr.v1alpha1.ExprValue> bindings = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_bindings_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::google::api::expr::v1alpha1::ExprValue >::const_iterator
      it = this->_internal_bindings().begin();
      it != this->_internal_bindings().end(); ++it) {
    total_size += EvalRequest_BindingsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string container = 4;
  if (this->container().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_container());
  }

  switch (expr_kind_case()) {
    // .google.api.expr.v1alpha1.ParsedExpr parsed_expr = 1;
    case kParsedExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *expr_kind_.parsed_expr_);
      break;
    }
    // .google.api.expr.v1alpha1.CheckedExpr checked_expr = 2;
    case kCheckedExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *expr_kind_.checked_expr_);
      break;
    }
    case EXPR_KIND_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EvalRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.EvalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EvalRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EvalRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.EvalRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.EvalRequest)
    MergeFrom(*source);
  }
}

void EvalRequest::MergeFrom(const EvalRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.EvalRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bindings_.MergeFrom(from.bindings_);
  if (from.container().size() > 0) {
    _internal_set_container(from._internal_container());
  }
  switch (from.expr_kind_case()) {
    case kParsedExpr: {
      _internal_mutable_parsed_expr()->::google::api::expr::v1alpha1::ParsedExpr::MergeFrom(from._internal_parsed_expr());
      break;
    }
    case kCheckedExpr: {
      _internal_mutable_checked_expr()->::google::api::expr::v1alpha1::CheckedExpr::MergeFrom(from._internal_checked_expr());
      break;
    }
    case EXPR_KIND_NOT_SET: {
      break;
    }
  }
}

void EvalRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.EvalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvalRequest::CopyFrom(const EvalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.EvalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvalRequest::IsInitialized() const {
  return true;
}

void EvalRequest::InternalSwap(EvalRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  bindings_.Swap(&other->bindings_);
  container_.Swap(&other->container_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(expr_kind_, other->expr_kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata EvalRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EvalResponse::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_EvalResponse_default_instance_._instance.get_mutable()->result_ = const_cast< ::google::api::expr::v1alpha1::ExprValue*>(
      ::google::api::expr::v1alpha1::ExprValue::internal_default_instance());
}
class EvalResponse::_Internal {
 public:
  static const ::google::api::expr::v1alpha1::ExprValue& result(const EvalResponse* msg);
};

const ::google::api::expr::v1alpha1::ExprValue&
EvalResponse::_Internal::result(const EvalResponse* msg) {
  return *msg->result_;
}
void EvalResponse::unsafe_arena_set_allocated_result(
    ::google::api::expr::v1alpha1::ExprValue* result) {
  if (GetArenaNoVirtual() == nullptr) {
    delete result_;
  }
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.EvalResponse.result)
}
void EvalResponse::clear_result() {
  if (GetArenaNoVirtual() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
}
void EvalResponse::clear_issues() {
  issues_.Clear();
}
EvalResponse::EvalResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.EvalResponse)
}
EvalResponse::EvalResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  issues_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.EvalResponse)
}
EvalResponse::EvalResponse(const EvalResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      issues_(from.issues_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::google::api::expr::v1alpha1::ExprValue(*from.result_);
  } else {
    result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.EvalResponse)
}

void EvalResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EvalResponse_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto.base);
  result_ = nullptr;
}

EvalResponse::~EvalResponse() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.EvalResponse)
  SharedDtor();
}

void EvalResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  if (this != internal_default_instance()) delete result_;
}

void EvalResponse::ArenaDtor(void* object) {
  EvalResponse* _this = reinterpret_cast< EvalResponse* >(object);
  (void)_this;
}
void EvalResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EvalResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EvalResponse& EvalResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EvalResponse_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto.base);
  return *internal_default_instance();
}


void EvalResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.EvalResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  issues_.Clear();
  if (GetArenaNoVirtual() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  _internal_metadata_.Clear();
}

const char* EvalResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.api.expr.v1alpha1.ExprValue result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .google.rpc.Status issues = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_issues(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EvalResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.EvalResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.ExprValue result = 1;
  if (this->has_result()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::result(this), target, stream);
  }

  // repeated .google.rpc.Status issues = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_issues_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(2, this->_internal_issues(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.EvalResponse)
  return target;
}

size_t EvalResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.EvalResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.rpc.Status issues = 2;
  total_size += 1UL * this->_internal_issues_size();
  for (const auto& msg : this->issues_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .google.api.expr.v1alpha1.ExprValue result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EvalResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.EvalResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EvalResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EvalResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.EvalResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.EvalResponse)
    MergeFrom(*source);
  }
}

void EvalResponse::MergeFrom(const EvalResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.EvalResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  issues_.MergeFrom(from.issues_);
  if (from.has_result()) {
    _internal_mutable_result()->::google::api::expr::v1alpha1::ExprValue::MergeFrom(from._internal_result());
  }
}

void EvalResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.EvalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvalResponse::CopyFrom(const EvalResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.EvalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvalResponse::IsInitialized() const {
  return true;
}

void EvalResponse::InternalSwap(EvalResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  issues_.InternalSwap(&other->issues_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EvalResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IssueDetails::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_IssueDetails_default_instance_._instance.get_mutable()->position_ = const_cast< ::google::api::expr::v1alpha1::SourcePosition*>(
      ::google::api::expr::v1alpha1::SourcePosition::internal_default_instance());
}
class IssueDetails::_Internal {
 public:
  static const ::google::api::expr::v1alpha1::SourcePosition& position(const IssueDetails* msg);
};

const ::google::api::expr::v1alpha1::SourcePosition&
IssueDetails::_Internal::position(const IssueDetails* msg) {
  return *msg->position_;
}
void IssueDetails::unsafe_arena_set_allocated_position(
    ::google::api::expr::v1alpha1::SourcePosition* position) {
  if (GetArenaNoVirtual() == nullptr) {
    delete position_;
  }
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.IssueDetails.position)
}
void IssueDetails::clear_position() {
  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
IssueDetails::IssueDetails()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.IssueDetails)
}
IssueDetails::IssueDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.IssueDetails)
}
IssueDetails::IssueDetails(const IssueDetails& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_position()) {
    position_ = new ::google::api::expr::v1alpha1::SourcePosition(*from.position_);
  } else {
    position_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&severity_) -
    reinterpret_cast<char*>(&id_)) + sizeof(severity_));
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.IssueDetails)
}

void IssueDetails::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IssueDetails_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto.base);
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&severity_) -
      reinterpret_cast<char*>(&position_)) + sizeof(severity_));
}

IssueDetails::~IssueDetails() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.IssueDetails)
  SharedDtor();
}

void IssueDetails::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  if (this != internal_default_instance()) delete position_;
}

void IssueDetails::ArenaDtor(void* object) {
  IssueDetails* _this = reinterpret_cast< IssueDetails* >(object);
  (void)_this;
}
void IssueDetails::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IssueDetails::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IssueDetails& IssueDetails::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IssueDetails_google_2fapi_2fexpr_2fv1alpha1_2fconformance_5fservice_2eproto.base);
  return *internal_default_instance();
}


void IssueDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.IssueDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&severity_) -
      reinterpret_cast<char*>(&id_)) + sizeof(severity_));
  _internal_metadata_.Clear();
}

const char* IssueDetails::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.api.expr.v1alpha1.IssueDetails.Severity severity = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_severity(static_cast<::google::api::expr::v1alpha1::IssueDetails_Severity>(val));
        } else goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.SourcePosition position = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IssueDetails::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.IssueDetails)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.IssueDetails.Severity severity = 1;
  if (this->severity() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_severity(), target);
  }

  // .google.api.expr.v1alpha1.SourcePosition position = 2;
  if (this->has_position()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::position(this), target, stream);
  }

  // int64 id = 3;
  if (this->id() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.IssueDetails)
  return target;
}

size_t IssueDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.IssueDetails)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.SourcePosition position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // int64 id = 3;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  // .google.api.expr.v1alpha1.IssueDetails.Severity severity = 1;
  if (this->severity() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_severity());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IssueDetails::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.IssueDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const IssueDetails* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IssueDetails>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.IssueDetails)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.IssueDetails)
    MergeFrom(*source);
  }
}

void IssueDetails::MergeFrom(const IssueDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.IssueDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    _internal_mutable_position()->::google::api::expr::v1alpha1::SourcePosition::MergeFrom(from._internal_position());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.severity() != 0) {
    _internal_set_severity(from._internal_severity());
  }
}

void IssueDetails::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.IssueDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IssueDetails::CopyFrom(const IssueDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.IssueDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IssueDetails::IsInitialized() const {
  return true;
}

void IssueDetails::InternalSwap(IssueDetails* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(position_, other->position_);
  swap(id_, other->id_);
  swap(severity_, other->severity_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IssueDetails::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace expr
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::ParseRequest* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::ParseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::ParseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::ParseResponse* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::ParseResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::ParseResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::CheckRequest* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::CheckRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::CheckRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::CheckResponse* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::CheckResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::CheckResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::EvalRequest_BindingsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::EvalRequest_BindingsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::EvalRequest_BindingsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::EvalRequest* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::EvalRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::EvalRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::EvalResponse* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::EvalResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::EvalResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::IssueDetails* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::IssueDetails >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::IssueDetails >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
