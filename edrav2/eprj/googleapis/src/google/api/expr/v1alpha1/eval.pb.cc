// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/expr/v1alpha1/eval.proto

#include "google/api/expr/v1alpha1/eval.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ErrorSet_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EvalState_Result_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ExprValue_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fexpr_2fv1alpha1_2fvalue_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ListValue_google_2fapi_2fexpr_2fv1alpha1_2fvalue_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnknownSet_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2frpc_2fstatus_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Status_google_2frpc_2fstatus_2eproto;
namespace google {
namespace api {
namespace expr {
namespace v1alpha1 {
class EvalState_ResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EvalState_Result> _instance;
} _EvalState_Result_default_instance_;
class EvalStateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EvalState> _instance;
} _EvalState_default_instance_;
class ExprValueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExprValue> _instance;
  const ::google::api::expr::v1alpha1::Value* value_;
  const ::google::api::expr::v1alpha1::ErrorSet* error_;
  const ::google::api::expr::v1alpha1::UnknownSet* unknown_;
} _ExprValue_default_instance_;
class ErrorSetDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ErrorSet> _instance;
} _ErrorSet_default_instance_;
class UnknownSetDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UnknownSet> _instance;
} _UnknownSet_default_instance_;
}  // namespace v1alpha1
}  // namespace expr
}  // namespace api
}  // namespace google
static void InitDefaultsscc_info_ErrorSet_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_ErrorSet_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::ErrorSet();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::ErrorSet::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ErrorSet_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ErrorSet_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto}, {
      &scc_info_Status_google_2frpc_2fstatus_2eproto.base,}};

static void InitDefaultsscc_info_EvalState_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_EvalState_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::EvalState();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::EvalState::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_EvalState_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_EvalState_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto}, {
      &scc_info_ExprValue_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto.base,
      &scc_info_EvalState_Result_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto.base,}};

static void InitDefaultsscc_info_EvalState_Result_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_EvalState_Result_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::EvalState_Result();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::EvalState_Result::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EvalState_Result_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EvalState_Result_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto}, {}};

static void InitDefaultsscc_info_ExprValue_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_ExprValue_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::ExprValue();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::ExprValue::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ExprValue_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_ExprValue_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto}, {
      &scc_info_ListValue_google_2fapi_2fexpr_2fv1alpha1_2fvalue_2eproto.base,
      &scc_info_ErrorSet_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto.base,
      &scc_info_UnknownSet_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto.base,}};

static void InitDefaultsscc_info_UnknownSet_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_UnknownSet_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::UnknownSet();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::UnknownSet::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnknownSet_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UnknownSet_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalState_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalState_Result, expr_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalState_Result, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalState, values_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::EvalState, results_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::ExprValue, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::ExprValue, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::api::expr::v1alpha1::ExprValueDefaultTypeInternal, value_),
  offsetof(::google::api::expr::v1alpha1::ExprValueDefaultTypeInternal, error_),
  offsetof(::google::api::expr::v1alpha1::ExprValueDefaultTypeInternal, unknown_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::ExprValue, kind_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::ErrorSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::ErrorSet, errors_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::UnknownSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::UnknownSet, exprs_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::api::expr::v1alpha1::EvalState_Result)},
  { 7, -1, sizeof(::google::api::expr::v1alpha1::EvalState)},
  { 14, -1, sizeof(::google::api::expr::v1alpha1::ExprValue)},
  { 23, -1, sizeof(::google::api::expr::v1alpha1::ErrorSet)},
  { 29, -1, sizeof(::google::api::expr::v1alpha1::UnknownSet)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_EvalState_Result_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_EvalState_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_ExprValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_ErrorSet_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_UnknownSet_default_instance_),
};

const char descriptor_table_protodef_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n#google/api/expr/v1alpha1/eval.proto\022\030g"
  "oogle.api.expr.v1alpha1\032$google/api/expr"
  "/v1alpha1/value.proto\032\027google/rpc/status"
  ".proto\"\244\001\n\tEvalState\0223\n\006values\030\001 \003(\0132#.g"
  "oogle.api.expr.v1alpha1.ExprValue\022;\n\007res"
  "ults\030\003 \003(\0132*.google.api.expr.v1alpha1.Ev"
  "alState.Result\032%\n\006Result\022\014\n\004expr\030\001 \001(\003\022\r"
  "\n\005value\030\002 \001(\003\"\263\001\n\tExprValue\0220\n\005value\030\001 \001"
  "(\0132\037.google.api.expr.v1alpha1.ValueH\000\0223\n"
  "\005error\030\002 \001(\0132\".google.api.expr.v1alpha1."
  "ErrorSetH\000\0227\n\007unknown\030\003 \001(\0132$.google.api"
  ".expr.v1alpha1.UnknownSetH\000B\006\n\004kind\".\n\010E"
  "rrorSet\022\"\n\006errors\030\001 \003(\0132\022.google.rpc.Sta"
  "tus\"\033\n\nUnknownSet\022\r\n\005exprs\030\001 \003(\003Bl\n\034com."
  "google.api.expr.v1alpha1B\tEvalProtoP\001Z<g"
  "oogle.golang.org/genproto/googleapis/api"
  "/expr/v1alpha1;expr\370\001\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto_deps[2] = {
  &::descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fvalue_2eproto,
  &::descriptor_table_google_2frpc_2fstatus_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto_sccs[5] = {
  &scc_info_ErrorSet_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto.base,
  &scc_info_EvalState_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto.base,
  &scc_info_EvalState_Result_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto.base,
  &scc_info_ExprValue_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto.base,
  &scc_info_UnknownSet_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto_once;
static bool descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto = {
  &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto_initialized, descriptor_table_protodef_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto, "google/api/expr/v1alpha1/eval.proto", 670,
  &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto_once, descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto_sccs, descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto_deps, 5, 2,
  schemas, file_default_instances, TableStruct_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto::offsets,
  file_level_metadata_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto, 5, file_level_enum_descriptors_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto, file_level_service_descriptors_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto), true);
namespace google {
namespace api {
namespace expr {
namespace v1alpha1 {

// ===================================================================

void EvalState_Result::InitAsDefaultInstance() {
}
class EvalState_Result::_Internal {
 public:
};

EvalState_Result::EvalState_Result()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.EvalState.Result)
}
EvalState_Result::EvalState_Result(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.EvalState.Result)
}
EvalState_Result::EvalState_Result(const EvalState_Result& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&expr_, &from.expr_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&expr_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.EvalState.Result)
}

void EvalState_Result::SharedCtor() {
  ::memset(&expr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&expr_)) + sizeof(value_));
}

EvalState_Result::~EvalState_Result() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.EvalState.Result)
  SharedDtor();
}

void EvalState_Result::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
}

void EvalState_Result::ArenaDtor(void* object) {
  EvalState_Result* _this = reinterpret_cast< EvalState_Result* >(object);
  (void)_this;
}
void EvalState_Result::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EvalState_Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EvalState_Result& EvalState_Result::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EvalState_Result_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto.base);
  return *internal_default_instance();
}


void EvalState_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.EvalState.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&expr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&expr_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

const char* EvalState_Result::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 expr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          expr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EvalState_Result::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.EvalState.Result)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 expr = 1;
  if (this->expr() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_expr(), target);
  }

  // int64 value = 2;
  if (this->value() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.EvalState.Result)
  return target;
}

size_t EvalState_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.EvalState.Result)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 expr = 1;
  if (this->expr() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_expr());
  }

  // int64 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EvalState_Result::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.EvalState.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const EvalState_Result* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EvalState_Result>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.EvalState.Result)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.EvalState.Result)
    MergeFrom(*source);
  }
}

void EvalState_Result::MergeFrom(const EvalState_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.EvalState.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.expr() != 0) {
    _internal_set_expr(from._internal_expr());
  }
  if (from.value() != 0) {
    _internal_set_value(from._internal_value());
  }
}

void EvalState_Result::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.EvalState.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvalState_Result::CopyFrom(const EvalState_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.EvalState.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvalState_Result::IsInitialized() const {
  return true;
}

void EvalState_Result::InternalSwap(EvalState_Result* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(expr_, other->expr_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EvalState_Result::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EvalState::InitAsDefaultInstance() {
}
class EvalState::_Internal {
 public:
};

EvalState::EvalState()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.EvalState)
}
EvalState::EvalState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  values_(arena),
  results_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.EvalState)
}
EvalState::EvalState(const EvalState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      values_(from.values_),
      results_(from.results_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.EvalState)
}

void EvalState::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EvalState_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto.base);
}

EvalState::~EvalState() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.EvalState)
  SharedDtor();
}

void EvalState::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
}

void EvalState::ArenaDtor(void* object) {
  EvalState* _this = reinterpret_cast< EvalState* >(object);
  (void)_this;
}
void EvalState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EvalState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EvalState& EvalState::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EvalState_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto.base);
  return *internal_default_instance();
}


void EvalState::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.EvalState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  results_.Clear();
  _internal_metadata_.Clear();
}

const char* EvalState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .google.api.expr.v1alpha1.ExprValue values = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_values(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .google.api.expr.v1alpha1.EvalState.Result results = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EvalState::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.EvalState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.expr.v1alpha1.ExprValue values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_values_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(1, this->_internal_values(i), target, stream);
  }

  // repeated .google.api.expr.v1alpha1.EvalState.Result results = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_results_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(3, this->_internal_results(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.EvalState)
  return target;
}

size_t EvalState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.EvalState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.expr.v1alpha1.ExprValue values = 1;
  total_size += 1UL * this->_internal_values_size();
  for (const auto& msg : this->values_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .google.api.expr.v1alpha1.EvalState.Result results = 3;
  total_size += 1UL * this->_internal_results_size();
  for (const auto& msg : this->results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EvalState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.EvalState)
  GOOGLE_DCHECK_NE(&from, this);
  const EvalState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EvalState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.EvalState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.EvalState)
    MergeFrom(*source);
  }
}

void EvalState::MergeFrom(const EvalState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.EvalState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
  results_.MergeFrom(from.results_);
}

void EvalState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.EvalState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvalState::CopyFrom(const EvalState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.EvalState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvalState::IsInitialized() const {
  return true;
}

void EvalState::InternalSwap(EvalState* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  values_.InternalSwap(&other->values_);
  results_.InternalSwap(&other->results_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EvalState::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ExprValue::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_ExprValue_default_instance_.value_ = const_cast< ::google::api::expr::v1alpha1::Value*>(
      ::google::api::expr::v1alpha1::Value::internal_default_instance());
  ::google::api::expr::v1alpha1::_ExprValue_default_instance_.error_ = const_cast< ::google::api::expr::v1alpha1::ErrorSet*>(
      ::google::api::expr::v1alpha1::ErrorSet::internal_default_instance());
  ::google::api::expr::v1alpha1::_ExprValue_default_instance_.unknown_ = const_cast< ::google::api::expr::v1alpha1::UnknownSet*>(
      ::google::api::expr::v1alpha1::UnknownSet::internal_default_instance());
}
class ExprValue::_Internal {
 public:
  static const ::google::api::expr::v1alpha1::Value& value(const ExprValue* msg);
  static const ::google::api::expr::v1alpha1::ErrorSet& error(const ExprValue* msg);
  static const ::google::api::expr::v1alpha1::UnknownSet& unknown(const ExprValue* msg);
};

const ::google::api::expr::v1alpha1::Value&
ExprValue::_Internal::value(const ExprValue* msg) {
  return *msg->kind_.value_;
}
const ::google::api::expr::v1alpha1::ErrorSet&
ExprValue::_Internal::error(const ExprValue* msg) {
  return *msg->kind_.error_;
}
const ::google::api::expr::v1alpha1::UnknownSet&
ExprValue::_Internal::unknown(const ExprValue* msg) {
  return *msg->kind_.unknown_;
}
void ExprValue::set_allocated_value(::google::api::expr::v1alpha1::Value* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    set_has_value();
    kind_.value_ = value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.ExprValue.value)
}
void ExprValue::clear_value() {
  if (_internal_has_value()) {
    if (GetArenaNoVirtual() == nullptr) {
      delete kind_.value_;
    }
    clear_has_kind();
  }
}
void ExprValue::set_allocated_error(::google::api::expr::v1alpha1::ErrorSet* error) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (error) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(error);
    if (message_arena != submessage_arena) {
      error = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    set_has_error();
    kind_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.ExprValue.error)
}
void ExprValue::set_allocated_unknown(::google::api::expr::v1alpha1::UnknownSet* unknown) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_kind();
  if (unknown) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(unknown);
    if (message_arena != submessage_arena) {
      unknown = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, unknown, submessage_arena);
    }
    set_has_unknown();
    kind_.unknown_ = unknown;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.ExprValue.unknown)
}
ExprValue::ExprValue()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.ExprValue)
}
ExprValue::ExprValue(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.ExprValue)
}
ExprValue::ExprValue(const ExprValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_kind();
  switch (from.kind_case()) {
    case kValue: {
      _internal_mutable_value()->::google::api::expr::v1alpha1::Value::MergeFrom(from._internal_value());
      break;
    }
    case kError: {
      _internal_mutable_error()->::google::api::expr::v1alpha1::ErrorSet::MergeFrom(from._internal_error());
      break;
    }
    case kUnknown: {
      _internal_mutable_unknown()->::google::api::expr::v1alpha1::UnknownSet::MergeFrom(from._internal_unknown());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.ExprValue)
}

void ExprValue::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExprValue_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto.base);
  clear_has_kind();
}

ExprValue::~ExprValue() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.ExprValue)
  SharedDtor();
}

void ExprValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  if (has_kind()) {
    clear_kind();
  }
}

void ExprValue::ArenaDtor(void* object) {
  ExprValue* _this = reinterpret_cast< ExprValue* >(object);
  (void)_this;
}
void ExprValue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExprValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExprValue& ExprValue::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExprValue_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto.base);
  return *internal_default_instance();
}


void ExprValue::clear_kind() {
// @@protoc_insertion_point(one_of_clear_start:google.api.expr.v1alpha1.ExprValue)
  switch (kind_case()) {
    case kValue: {
      if (GetArenaNoVirtual() == nullptr) {
        delete kind_.value_;
      }
      break;
    }
    case kError: {
      if (GetArenaNoVirtual() == nullptr) {
        delete kind_.error_;
      }
      break;
    }
    case kUnknown: {
      if (GetArenaNoVirtual() == nullptr) {
        delete kind_.unknown_;
      }
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = KIND_NOT_SET;
}


void ExprValue::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.ExprValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_kind();
  _internal_metadata_.Clear();
}

const char* ExprValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.api.expr.v1alpha1.Value value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.ErrorSet error = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.UnknownSet unknown = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_unknown(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExprValue::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.ExprValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.Value value = 1;
  if (_internal_has_value()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::value(this), target, stream);
  }

  // .google.api.expr.v1alpha1.ErrorSet error = 2;
  if (_internal_has_error()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::error(this), target, stream);
  }

  // .google.api.expr.v1alpha1.UnknownSet unknown = 3;
  if (_internal_has_unknown()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::unknown(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.ExprValue)
  return target;
}

size_t ExprValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.ExprValue)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (kind_case()) {
    // .google.api.expr.v1alpha1.Value value = 1;
    case kValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *kind_.value_);
      break;
    }
    // .google.api.expr.v1alpha1.ErrorSet error = 2;
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *kind_.error_);
      break;
    }
    // .google.api.expr.v1alpha1.UnknownSet unknown = 3;
    case kUnknown: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *kind_.unknown_);
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExprValue::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.ExprValue)
  GOOGLE_DCHECK_NE(&from, this);
  const ExprValue* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExprValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.ExprValue)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.ExprValue)
    MergeFrom(*source);
  }
}

void ExprValue::MergeFrom(const ExprValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.ExprValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.kind_case()) {
    case kValue: {
      _internal_mutable_value()->::google::api::expr::v1alpha1::Value::MergeFrom(from._internal_value());
      break;
    }
    case kError: {
      _internal_mutable_error()->::google::api::expr::v1alpha1::ErrorSet::MergeFrom(from._internal_error());
      break;
    }
    case kUnknown: {
      _internal_mutable_unknown()->::google::api::expr::v1alpha1::UnknownSet::MergeFrom(from._internal_unknown());
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
}

void ExprValue::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.ExprValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExprValue::CopyFrom(const ExprValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.ExprValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExprValue::IsInitialized() const {
  return true;
}

void ExprValue::InternalSwap(ExprValue* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(kind_, other->kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExprValue::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ErrorSet::InitAsDefaultInstance() {
}
class ErrorSet::_Internal {
 public:
};

void ErrorSet::clear_errors() {
  errors_.Clear();
}
ErrorSet::ErrorSet()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.ErrorSet)
}
ErrorSet::ErrorSet(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  errors_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.ErrorSet)
}
ErrorSet::ErrorSet(const ErrorSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      errors_(from.errors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.ErrorSet)
}

void ErrorSet::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ErrorSet_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto.base);
}

ErrorSet::~ErrorSet() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.ErrorSet)
  SharedDtor();
}

void ErrorSet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
}

void ErrorSet::ArenaDtor(void* object) {
  ErrorSet* _this = reinterpret_cast< ErrorSet* >(object);
  (void)_this;
}
void ErrorSet::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ErrorSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ErrorSet& ErrorSet::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ErrorSet_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto.base);
  return *internal_default_instance();
}


void ErrorSet::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.ErrorSet)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  errors_.Clear();
  _internal_metadata_.Clear();
}

const char* ErrorSet::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .google.rpc.Status errors = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_errors(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ErrorSet::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.ErrorSet)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.rpc.Status errors = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_errors_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(1, this->_internal_errors(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.ErrorSet)
  return target;
}

size_t ErrorSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.ErrorSet)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.rpc.Status errors = 1;
  total_size += 1UL * this->_internal_errors_size();
  for (const auto& msg : this->errors_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ErrorSet::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.ErrorSet)
  GOOGLE_DCHECK_NE(&from, this);
  const ErrorSet* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ErrorSet>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.ErrorSet)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.ErrorSet)
    MergeFrom(*source);
  }
}

void ErrorSet::MergeFrom(const ErrorSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.ErrorSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  errors_.MergeFrom(from.errors_);
}

void ErrorSet::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.ErrorSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorSet::CopyFrom(const ErrorSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.ErrorSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ErrorSet::IsInitialized() const {
  return true;
}

void ErrorSet::InternalSwap(ErrorSet* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  errors_.InternalSwap(&other->errors_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ErrorSet::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UnknownSet::InitAsDefaultInstance() {
}
class UnknownSet::_Internal {
 public:
};

UnknownSet::UnknownSet()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.UnknownSet)
}
UnknownSet::UnknownSet(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  exprs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.UnknownSet)
}
UnknownSet::UnknownSet(const UnknownSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      exprs_(from.exprs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.UnknownSet)
}

void UnknownSet::SharedCtor() {
}

UnknownSet::~UnknownSet() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.UnknownSet)
  SharedDtor();
}

void UnknownSet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
}

void UnknownSet::ArenaDtor(void* object) {
  UnknownSet* _this = reinterpret_cast< UnknownSet* >(object);
  (void)_this;
}
void UnknownSet::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnknownSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnknownSet& UnknownSet::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UnknownSet_google_2fapi_2fexpr_2fv1alpha1_2feval_2eproto.base);
  return *internal_default_instance();
}


void UnknownSet::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.UnknownSet)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exprs_.Clear();
  _internal_metadata_.Clear();
}

const char* UnknownSet::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated int64 exprs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_exprs(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_exprs(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnknownSet::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.UnknownSet)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 exprs = 1;
  {
    int byte_size = _exprs_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          1, _internal_exprs(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.UnknownSet)
  return target;
}

size_t UnknownSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.UnknownSet)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 exprs = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->exprs_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _exprs_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnknownSet::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.UnknownSet)
  GOOGLE_DCHECK_NE(&from, this);
  const UnknownSet* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnknownSet>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.UnknownSet)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.UnknownSet)
    MergeFrom(*source);
  }
}

void UnknownSet::MergeFrom(const UnknownSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.UnknownSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  exprs_.MergeFrom(from.exprs_);
}

void UnknownSet::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.UnknownSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnknownSet::CopyFrom(const UnknownSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.UnknownSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnknownSet::IsInitialized() const {
  return true;
}

void UnknownSet::InternalSwap(UnknownSet* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  exprs_.InternalSwap(&other->exprs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnknownSet::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace expr
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::EvalState_Result* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::EvalState_Result >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::EvalState_Result >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::EvalState* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::EvalState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::EvalState >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::ExprValue* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::ExprValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::ExprValue >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::ErrorSet* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::ErrorSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::ErrorSet >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::UnknownSet* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::UnknownSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::UnknownSet >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
