// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/expr/v1alpha1/syntax.proto

#include "google/api/expr/v1alpha1/syntax.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Constant_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Expr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Expr_Ident_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SourceInfo_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SourceInfo_MacroCallsEntry_DoNotUse_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SourceInfo_PositionsEntry_DoNotUse_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fduration_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Duration_google_2fprotobuf_2fduration_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace google {
namespace api {
namespace expr {
namespace v1alpha1 {
class ParsedExprDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ParsedExpr> _instance;
} _ParsedExpr_default_instance_;
class Expr_IdentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Expr_Ident> _instance;
} _Expr_Ident_default_instance_;
class Expr_SelectDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Expr_Select> _instance;
} _Expr_Select_default_instance_;
class Expr_CallDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Expr_Call> _instance;
} _Expr_Call_default_instance_;
class Expr_CreateListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Expr_CreateList> _instance;
} _Expr_CreateList_default_instance_;
class Expr_CreateStruct_EntryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Expr_CreateStruct_Entry> _instance;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr field_key_;
  const ::google::api::expr::v1alpha1::Expr* map_key_;
} _Expr_CreateStruct_Entry_default_instance_;
class Expr_CreateStructDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Expr_CreateStruct> _instance;
} _Expr_CreateStruct_default_instance_;
class Expr_ComprehensionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Expr_Comprehension> _instance;
} _Expr_Comprehension_default_instance_;
class ExprDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Expr> _instance;
  const ::google::api::expr::v1alpha1::Constant* const_expr_;
  const ::google::api::expr::v1alpha1::Expr_Ident* ident_expr_;
  const ::google::api::expr::v1alpha1::Expr_Select* select_expr_;
  const ::google::api::expr::v1alpha1::Expr_Call* call_expr_;
  const ::google::api::expr::v1alpha1::Expr_CreateList* list_expr_;
  const ::google::api::expr::v1alpha1::Expr_CreateStruct* struct_expr_;
  const ::google::api::expr::v1alpha1::Expr_Comprehension* comprehension_expr_;
} _Expr_default_instance_;
class ConstantDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Constant> _instance;
  int null_value_;
  bool bool_value_;
  ::PROTOBUF_NAMESPACE_ID::int64 int64_value_;
  ::PROTOBUF_NAMESPACE_ID::uint64 uint64_value_;
  double double_value_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr string_value_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr bytes_value_;
  const PROTOBUF_NAMESPACE_ID::Duration* duration_value_;
  const PROTOBUF_NAMESPACE_ID::Timestamp* timestamp_value_;
} _Constant_default_instance_;
class SourceInfo_PositionsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SourceInfo_PositionsEntry_DoNotUse> _instance;
} _SourceInfo_PositionsEntry_DoNotUse_default_instance_;
class SourceInfo_MacroCallsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SourceInfo_MacroCallsEntry_DoNotUse> _instance;
} _SourceInfo_MacroCallsEntry_DoNotUse_default_instance_;
class SourceInfoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SourceInfo> _instance;
} _SourceInfo_default_instance_;
class SourcePositionDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SourcePosition> _instance;
} _SourcePosition_default_instance_;
}  // namespace v1alpha1
}  // namespace expr
}  // namespace api
}  // namespace google
static void InitDefaultsscc_info_Constant_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_Constant_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::Constant();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::Constant::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Constant_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Constant_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto}, {
      &scc_info_Duration_google_2fprotobuf_2fduration_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_Expr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_Expr_Select_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::Expr_Select();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::api::expr::v1alpha1::_Expr_Call_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::Expr_Call();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::api::expr::v1alpha1::_Expr_CreateList_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::Expr_CreateList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::api::expr::v1alpha1::_Expr_CreateStruct_Entry_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::Expr_CreateStruct_Entry();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::api::expr::v1alpha1::_Expr_CreateStruct_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::Expr_CreateStruct();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::api::expr::v1alpha1::_Expr_Comprehension_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::Expr_Comprehension();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::google::api::expr::v1alpha1::_Expr_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::Expr();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::Expr_Select::InitAsDefaultInstance();
  ::google::api::expr::v1alpha1::Expr_Call::InitAsDefaultInstance();
  ::google::api::expr::v1alpha1::Expr_CreateList::InitAsDefaultInstance();
  ::google::api::expr::v1alpha1::Expr_CreateStruct_Entry::InitAsDefaultInstance();
  ::google::api::expr::v1alpha1::Expr_CreateStruct::InitAsDefaultInstance();
  ::google::api::expr::v1alpha1::Expr_Comprehension::InitAsDefaultInstance();
  ::google::api::expr::v1alpha1::Expr::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Expr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Expr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto}, {
      &scc_info_Constant_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base,
      &scc_info_Expr_Ident_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base,}};

static void InitDefaultsscc_info_Expr_Ident_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_Expr_Ident_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::Expr_Ident();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::Expr_Ident::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Expr_Ident_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Expr_Ident_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto}, {}};

static void InitDefaultsscc_info_ParsedExpr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_ParsedExpr_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::ParsedExpr();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::ParsedExpr::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ParsedExpr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ParsedExpr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto}, {
      &scc_info_Expr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base,
      &scc_info_SourceInfo_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base,}};

static void InitDefaultsscc_info_SourceInfo_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_SourceInfo_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::SourceInfo();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::SourceInfo::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SourceInfo_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SourceInfo_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto}, {
      &scc_info_SourceInfo_PositionsEntry_DoNotUse_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base,
      &scc_info_SourceInfo_MacroCallsEntry_DoNotUse_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base,}};

static void InitDefaultsscc_info_SourceInfo_MacroCallsEntry_DoNotUse_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_SourceInfo_MacroCallsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::SourceInfo_MacroCallsEntry_DoNotUse();
  }
  ::google::api::expr::v1alpha1::SourceInfo_MacroCallsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SourceInfo_MacroCallsEntry_DoNotUse_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SourceInfo_MacroCallsEntry_DoNotUse_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto}, {
      &scc_info_Expr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base,}};

static void InitDefaultsscc_info_SourceInfo_PositionsEntry_DoNotUse_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_SourceInfo_PositionsEntry_DoNotUse_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::SourceInfo_PositionsEntry_DoNotUse();
  }
  ::google::api::expr::v1alpha1::SourceInfo_PositionsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SourceInfo_PositionsEntry_DoNotUse_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SourceInfo_PositionsEntry_DoNotUse_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto}, {}};

static void InitDefaultsscc_info_SourcePosition_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::expr::v1alpha1::_SourcePosition_default_instance_;
    new (ptr) ::google::api::expr::v1alpha1::SourcePosition();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::expr::v1alpha1::SourcePosition::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SourcePosition_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SourcePosition_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto[14];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::ParsedExpr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::ParsedExpr, expr_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::ParsedExpr, source_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Ident, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Ident, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Select, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Select, operand_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Select, field_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Select, test_only_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Call, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Call, target_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Call, function_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Call, args_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_CreateList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_CreateList, elements_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_CreateStruct_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_CreateStruct_Entry, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_CreateStruct_Entry, id_),
  offsetof(::google::api::expr::v1alpha1::Expr_CreateStruct_EntryDefaultTypeInternal, field_key_),
  offsetof(::google::api::expr::v1alpha1::Expr_CreateStruct_EntryDefaultTypeInternal, map_key_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_CreateStruct_Entry, value_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_CreateStruct_Entry, key_kind_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_CreateStruct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_CreateStruct, message_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_CreateStruct, entries_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Comprehension, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Comprehension, iter_var_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Comprehension, iter_range_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Comprehension, accu_var_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Comprehension, accu_init_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Comprehension, loop_condition_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Comprehension, loop_step_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr_Comprehension, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr, id_),
  offsetof(::google::api::expr::v1alpha1::ExprDefaultTypeInternal, const_expr_),
  offsetof(::google::api::expr::v1alpha1::ExprDefaultTypeInternal, ident_expr_),
  offsetof(::google::api::expr::v1alpha1::ExprDefaultTypeInternal, select_expr_),
  offsetof(::google::api::expr::v1alpha1::ExprDefaultTypeInternal, call_expr_),
  offsetof(::google::api::expr::v1alpha1::ExprDefaultTypeInternal, list_expr_),
  offsetof(::google::api::expr::v1alpha1::ExprDefaultTypeInternal, struct_expr_),
  offsetof(::google::api::expr::v1alpha1::ExprDefaultTypeInternal, comprehension_expr_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Expr, expr_kind_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Constant, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Constant, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::google::api::expr::v1alpha1::ConstantDefaultTypeInternal, null_value_),
  offsetof(::google::api::expr::v1alpha1::ConstantDefaultTypeInternal, bool_value_),
  offsetof(::google::api::expr::v1alpha1::ConstantDefaultTypeInternal, int64_value_),
  offsetof(::google::api::expr::v1alpha1::ConstantDefaultTypeInternal, uint64_value_),
  offsetof(::google::api::expr::v1alpha1::ConstantDefaultTypeInternal, double_value_),
  offsetof(::google::api::expr::v1alpha1::ConstantDefaultTypeInternal, string_value_),
  offsetof(::google::api::expr::v1alpha1::ConstantDefaultTypeInternal, bytes_value_),
  offsetof(::google::api::expr::v1alpha1::ConstantDefaultTypeInternal, duration_value_),
  offsetof(::google::api::expr::v1alpha1::ConstantDefaultTypeInternal, timestamp_value_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::Constant, constant_kind_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo_PositionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo_PositionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo_PositionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo_PositionsEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo_MacroCallsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo_MacroCallsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo_MacroCallsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo_MacroCallsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo, syntax_version_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo, location_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo, line_offsets_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo, positions_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourceInfo, macro_calls_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourcePosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourcePosition, location_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourcePosition, offset_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourcePosition, line_),
  PROTOBUF_FIELD_OFFSET(::google::api::expr::v1alpha1::SourcePosition, column_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::api::expr::v1alpha1::ParsedExpr)},
  { 7, -1, sizeof(::google::api::expr::v1alpha1::Expr_Ident)},
  { 13, -1, sizeof(::google::api::expr::v1alpha1::Expr_Select)},
  { 21, -1, sizeof(::google::api::expr::v1alpha1::Expr_Call)},
  { 29, -1, sizeof(::google::api::expr::v1alpha1::Expr_CreateList)},
  { 35, -1, sizeof(::google::api::expr::v1alpha1::Expr_CreateStruct_Entry)},
  { 45, -1, sizeof(::google::api::expr::v1alpha1::Expr_CreateStruct)},
  { 52, -1, sizeof(::google::api::expr::v1alpha1::Expr_Comprehension)},
  { 64, -1, sizeof(::google::api::expr::v1alpha1::Expr)},
  { 78, -1, sizeof(::google::api::expr::v1alpha1::Constant)},
  { 93, 100, sizeof(::google::api::expr::v1alpha1::SourceInfo_PositionsEntry_DoNotUse)},
  { 102, 109, sizeof(::google::api::expr::v1alpha1::SourceInfo_MacroCallsEntry_DoNotUse)},
  { 111, -1, sizeof(::google::api::expr::v1alpha1::SourceInfo)},
  { 121, -1, sizeof(::google::api::expr::v1alpha1::SourcePosition)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_ParsedExpr_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_Expr_Ident_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_Expr_Select_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_Expr_Call_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_Expr_CreateList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_Expr_CreateStruct_Entry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_Expr_CreateStruct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_Expr_Comprehension_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_Expr_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_Constant_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_SourceInfo_PositionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_SourceInfo_MacroCallsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_SourceInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::expr::v1alpha1::_SourcePosition_default_instance_),
};

const char descriptor_table_protodef_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n%google/api/expr/v1alpha1/syntax.proto\022"
  "\030google.api.expr.v1alpha1\032\036google/protob"
  "uf/duration.proto\032\034google/protobuf/struc"
  "t.proto\032\037google/protobuf/timestamp.proto"
  "\"u\n\nParsedExpr\022,\n\004expr\030\002 \001(\0132\036.google.ap"
  "i.expr.v1alpha1.Expr\0229\n\013source_info\030\003 \001("
  "\0132$.google.api.expr.v1alpha1.SourceInfo\""
  "\305\n\n\004Expr\022\n\n\002id\030\002 \001(\003\0228\n\nconst_expr\030\003 \001(\013"
  "2\".google.api.expr.v1alpha1.ConstantH\000\022:"
  "\n\nident_expr\030\004 \001(\0132$.google.api.expr.v1a"
  "lpha1.Expr.IdentH\000\022<\n\013select_expr\030\005 \001(\0132"
  "%.google.api.expr.v1alpha1.Expr.SelectH\000"
  "\0228\n\tcall_expr\030\006 \001(\0132#.google.api.expr.v1"
  "alpha1.Expr.CallH\000\022>\n\tlist_expr\030\007 \001(\0132)."
  "google.api.expr.v1alpha1.Expr.CreateList"
  "H\000\022B\n\013struct_expr\030\010 \001(\0132+.google.api.exp"
  "r.v1alpha1.Expr.CreateStructH\000\022J\n\022compre"
  "hension_expr\030\t \001(\0132,.google.api.expr.v1a"
  "lpha1.Expr.ComprehensionH\000\032\025\n\005Ident\022\014\n\004n"
  "ame\030\001 \001(\t\032[\n\006Select\022/\n\007operand\030\001 \001(\0132\036.g"
  "oogle.api.expr.v1alpha1.Expr\022\r\n\005field\030\002 "
  "\001(\t\022\021\n\ttest_only\030\003 \001(\010\032v\n\004Call\022.\n\006target"
  "\030\001 \001(\0132\036.google.api.expr.v1alpha1.Expr\022\020"
  "\n\010function\030\002 \001(\t\022,\n\004args\030\003 \003(\0132\036.google."
  "api.expr.v1alpha1.Expr\032>\n\nCreateList\0220\n\010"
  "elements\030\001 \003(\0132\036.google.api.expr.v1alpha"
  "1.Expr\032\201\002\n\014CreateStruct\022\024\n\014message_name\030"
  "\001 \001(\t\022B\n\007entries\030\002 \003(\01321.google.api.expr"
  ".v1alpha1.Expr.CreateStruct.Entry\032\226\001\n\005En"
  "try\022\n\n\002id\030\001 \001(\003\022\023\n\tfield_key\030\002 \001(\tH\000\0221\n\007"
  "map_key\030\003 \001(\0132\036.google.api.expr.v1alpha1"
  ".ExprH\000\022-\n\005value\030\004 \001(\0132\036.google.api.expr"
  ".v1alpha1.ExprB\n\n\010key_kind\032\265\002\n\rComprehen"
  "sion\022\020\n\010iter_var\030\001 \001(\t\0222\n\niter_range\030\002 \001"
  "(\0132\036.google.api.expr.v1alpha1.Expr\022\020\n\010ac"
  "cu_var\030\003 \001(\t\0221\n\taccu_init\030\004 \001(\0132\036.google"
  ".api.expr.v1alpha1.Expr\0226\n\016loop_conditio"
  "n\030\005 \001(\0132\036.google.api.expr.v1alpha1.Expr\022"
  "1\n\tloop_step\030\006 \001(\0132\036.google.api.expr.v1a"
  "lpha1.Expr\022.\n\006result\030\007 \001(\0132\036.google.api."
  "expr.v1alpha1.ExprB\013\n\texpr_kind\"\315\002\n\010Cons"
  "tant\0220\n\nnull_value\030\001 \001(\0162\032.google.protob"
  "uf.NullValueH\000\022\024\n\nbool_value\030\002 \001(\010H\000\022\025\n\013"
  "int64_value\030\003 \001(\003H\000\022\026\n\014uint64_value\030\004 \001("
  "\004H\000\022\026\n\014double_value\030\005 \001(\001H\000\022\026\n\014string_va"
  "lue\030\006 \001(\tH\000\022\025\n\013bytes_value\030\007 \001(\014H\000\0227\n\016du"
  "ration_value\030\010 \001(\0132\031.google.protobuf.Dur"
  "ationB\002\030\001H\000\0229\n\017timestamp_value\030\t \001(\0132\032.g"
  "oogle.protobuf.TimestampB\002\030\001H\000B\017\n\rconsta"
  "nt_kind\"\344\002\n\nSourceInfo\022\026\n\016syntax_version"
  "\030\001 \001(\t\022\020\n\010location\030\002 \001(\t\022\024\n\014line_offsets"
  "\030\003 \003(\005\022F\n\tpositions\030\004 \003(\01323.google.api.e"
  "xpr.v1alpha1.SourceInfo.PositionsEntry\022I"
  "\n\013macro_calls\030\005 \003(\01324.google.api.expr.v1"
  "alpha1.SourceInfo.MacroCallsEntry\0320\n\016Pos"
  "itionsEntry\022\013\n\003key\030\001 \001(\003\022\r\n\005value\030\002 \001(\005:"
  "\0028\001\032Q\n\017MacroCallsEntry\022\013\n\003key\030\001 \001(\003\022-\n\005v"
  "alue\030\002 \001(\0132\036.google.api.expr.v1alpha1.Ex"
  "pr:\0028\001\"P\n\016SourcePosition\022\020\n\010location\030\001 \001"
  "(\t\022\016\n\006offset\030\002 \001(\005\022\014\n\004line\030\003 \001(\005\022\016\n\006colu"
  "mn\030\004 \001(\005Bn\n\034com.google.api.expr.v1alpha1"
  "B\013SyntaxProtoP\001Z<google.golang.org/genpr"
  "oto/googleapis/api/expr/v1alpha1;expr\370\001\001"
  "b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_deps[3] = {
  &::descriptor_table_google_2fprotobuf_2fduration_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_sccs[8] = {
  &scc_info_Constant_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base,
  &scc_info_Expr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base,
  &scc_info_Expr_Ident_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base,
  &scc_info_ParsedExpr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base,
  &scc_info_SourceInfo_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base,
  &scc_info_SourceInfo_MacroCallsEntry_DoNotUse_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base,
  &scc_info_SourceInfo_PositionsEntry_DoNotUse_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base,
  &scc_info_SourcePosition_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_once;
static bool descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto = {
  &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_initialized, descriptor_table_protodef_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto, "google/api/expr/v1alpha1/syntax.proto", 2528,
  &descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_once, descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_sccs, descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto_deps, 8, 3,
  schemas, file_default_instances, TableStruct_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto::offsets,
  file_level_metadata_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto, 14, file_level_enum_descriptors_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto, file_level_service_descriptors_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto), true);
namespace google {
namespace api {
namespace expr {
namespace v1alpha1 {

// ===================================================================

void ParsedExpr::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_ParsedExpr_default_instance_._instance.get_mutable()->expr_ = const_cast< ::google::api::expr::v1alpha1::Expr*>(
      ::google::api::expr::v1alpha1::Expr::internal_default_instance());
  ::google::api::expr::v1alpha1::_ParsedExpr_default_instance_._instance.get_mutable()->source_info_ = const_cast< ::google::api::expr::v1alpha1::SourceInfo*>(
      ::google::api::expr::v1alpha1::SourceInfo::internal_default_instance());
}
class ParsedExpr::_Internal {
 public:
  static const ::google::api::expr::v1alpha1::Expr& expr(const ParsedExpr* msg);
  static const ::google::api::expr::v1alpha1::SourceInfo& source_info(const ParsedExpr* msg);
};

const ::google::api::expr::v1alpha1::Expr&
ParsedExpr::_Internal::expr(const ParsedExpr* msg) {
  return *msg->expr_;
}
const ::google::api::expr::v1alpha1::SourceInfo&
ParsedExpr::_Internal::source_info(const ParsedExpr* msg) {
  return *msg->source_info_;
}
void ParsedExpr::unsafe_arena_set_allocated_expr(
    ::google::api::expr::v1alpha1::Expr* expr) {
  if (GetArenaNoVirtual() == nullptr) {
    delete expr_;
  }
  expr_ = expr;
  if (expr) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.ParsedExpr.expr)
}
void ParsedExpr::unsafe_arena_set_allocated_source_info(
    ::google::api::expr::v1alpha1::SourceInfo* source_info) {
  if (GetArenaNoVirtual() == nullptr) {
    delete source_info_;
  }
  source_info_ = source_info;
  if (source_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.ParsedExpr.source_info)
}
ParsedExpr::ParsedExpr()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.ParsedExpr)
}
ParsedExpr::ParsedExpr(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.ParsedExpr)
}
ParsedExpr::ParsedExpr(const ParsedExpr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_expr()) {
    expr_ = new ::google::api::expr::v1alpha1::Expr(*from.expr_);
  } else {
    expr_ = nullptr;
  }
  if (from._internal_has_source_info()) {
    source_info_ = new ::google::api::expr::v1alpha1::SourceInfo(*from.source_info_);
  } else {
    source_info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.ParsedExpr)
}

void ParsedExpr::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ParsedExpr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base);
  ::memset(&expr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&source_info_) -
      reinterpret_cast<char*>(&expr_)) + sizeof(source_info_));
}

ParsedExpr::~ParsedExpr() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.ParsedExpr)
  SharedDtor();
}

void ParsedExpr::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  if (this != internal_default_instance()) delete expr_;
  if (this != internal_default_instance()) delete source_info_;
}

void ParsedExpr::ArenaDtor(void* object) {
  ParsedExpr* _this = reinterpret_cast< ParsedExpr* >(object);
  (void)_this;
}
void ParsedExpr::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ParsedExpr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParsedExpr& ParsedExpr::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ParsedExpr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base);
  return *internal_default_instance();
}


void ParsedExpr::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.ParsedExpr)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && expr_ != nullptr) {
    delete expr_;
  }
  expr_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && source_info_ != nullptr) {
    delete source_info_;
  }
  source_info_ = nullptr;
  _internal_metadata_.Clear();
}

const char* ParsedExpr::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.api.expr.v1alpha1.Expr expr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_expr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.SourceInfo source_info = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_source_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ParsedExpr::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.ParsedExpr)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.Expr expr = 2;
  if (this->has_expr()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::expr(this), target, stream);
  }

  // .google.api.expr.v1alpha1.SourceInfo source_info = 3;
  if (this->has_source_info()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::source_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.ParsedExpr)
  return target;
}

size_t ParsedExpr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.ParsedExpr)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.Expr expr = 2;
  if (this->has_expr()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *expr_);
  }

  // .google.api.expr.v1alpha1.SourceInfo source_info = 3;
  if (this->has_source_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *source_info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParsedExpr::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.ParsedExpr)
  GOOGLE_DCHECK_NE(&from, this);
  const ParsedExpr* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ParsedExpr>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.ParsedExpr)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.ParsedExpr)
    MergeFrom(*source);
  }
}

void ParsedExpr::MergeFrom(const ParsedExpr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.ParsedExpr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_expr()) {
    _internal_mutable_expr()->::google::api::expr::v1alpha1::Expr::MergeFrom(from._internal_expr());
  }
  if (from.has_source_info()) {
    _internal_mutable_source_info()->::google::api::expr::v1alpha1::SourceInfo::MergeFrom(from._internal_source_info());
  }
}

void ParsedExpr::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.ParsedExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParsedExpr::CopyFrom(const ParsedExpr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.ParsedExpr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParsedExpr::IsInitialized() const {
  return true;
}

void ParsedExpr::InternalSwap(ParsedExpr* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(expr_, other->expr_);
  swap(source_info_, other->source_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ParsedExpr::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Expr_Ident::InitAsDefaultInstance() {
}
class Expr_Ident::_Internal {
 public:
};

Expr_Ident::Expr_Ident()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.Expr.Ident)
}
Expr_Ident::Expr_Ident(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Expr.Ident)
}
Expr_Ident::Expr_Ident(const Expr_Ident& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Expr.Ident)
}

void Expr_Ident::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Expr_Ident_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Expr_Ident::~Expr_Ident() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Expr.Ident)
  SharedDtor();
}

void Expr_Ident::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Expr_Ident::ArenaDtor(void* object) {
  Expr_Ident* _this = reinterpret_cast< Expr_Ident* >(object);
  (void)_this;
}
void Expr_Ident::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Expr_Ident::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Expr_Ident& Expr_Ident::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Expr_Ident_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base);
  return *internal_default_instance();
}


void Expr_Ident::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Expr.Ident)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

const char* Expr_Ident::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_name(), ptr, ctx, "google.api.expr.v1alpha1.Expr.Ident.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Expr_Ident::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Expr.Ident)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Expr.Ident.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Expr.Ident)
  return target;
}

size_t Expr_Ident::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Expr.Ident)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expr_Ident::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.Expr.Ident)
  GOOGLE_DCHECK_NE(&from, this);
  const Expr_Ident* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Expr_Ident>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.Expr.Ident)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.Expr.Ident)
    MergeFrom(*source);
  }
}

void Expr_Ident::MergeFrom(const Expr_Ident& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Expr.Ident)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void Expr_Ident::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.Expr.Ident)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expr_Ident::CopyFrom(const Expr_Ident& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Expr.Ident)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expr_Ident::IsInitialized() const {
  return true;
}

void Expr_Ident::InternalSwap(Expr_Ident* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata Expr_Ident::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Expr_Select::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_Expr_Select_default_instance_._instance.get_mutable()->operand_ = const_cast< ::google::api::expr::v1alpha1::Expr*>(
      ::google::api::expr::v1alpha1::Expr::internal_default_instance());
}
class Expr_Select::_Internal {
 public:
  static const ::google::api::expr::v1alpha1::Expr& operand(const Expr_Select* msg);
};

const ::google::api::expr::v1alpha1::Expr&
Expr_Select::_Internal::operand(const Expr_Select* msg) {
  return *msg->operand_;
}
void Expr_Select::unsafe_arena_set_allocated_operand(
    ::google::api::expr::v1alpha1::Expr* operand) {
  if (GetArenaNoVirtual() == nullptr) {
    delete operand_;
  }
  operand_ = operand;
  if (operand) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.Expr.Select.operand)
}
Expr_Select::Expr_Select()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.Expr.Select)
}
Expr_Select::Expr_Select(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Expr.Select)
}
Expr_Select::Expr_Select(const Expr_Select& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  field_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_field().empty()) {
    field_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_field(),
      GetArenaNoVirtual());
  }
  if (from._internal_has_operand()) {
    operand_ = new ::google::api::expr::v1alpha1::Expr(*from.operand_);
  } else {
    operand_ = nullptr;
  }
  test_only_ = from.test_only_;
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Expr.Select)
}

void Expr_Select::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Expr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base);
  field_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&operand_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&test_only_) -
      reinterpret_cast<char*>(&operand_)) + sizeof(test_only_));
}

Expr_Select::~Expr_Select() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Expr.Select)
  SharedDtor();
}

void Expr_Select::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  field_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete operand_;
}

void Expr_Select::ArenaDtor(void* object) {
  Expr_Select* _this = reinterpret_cast< Expr_Select* >(object);
  (void)_this;
}
void Expr_Select::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Expr_Select::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Expr_Select& Expr_Select::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Expr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base);
  return *internal_default_instance();
}


void Expr_Select::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Expr.Select)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && operand_ != nullptr) {
    delete operand_;
  }
  operand_ = nullptr;
  test_only_ = false;
  _internal_metadata_.Clear();
}

const char* Expr_Select::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.api.expr.v1alpha1.Expr operand = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_operand(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string field = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_field(), ptr, ctx, "google.api.expr.v1alpha1.Expr.Select.field");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool test_only = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          test_only_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Expr_Select::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Expr.Select)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.Expr operand = 1;
  if (this->has_operand()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::operand(this), target, stream);
  }

  // string field = 2;
  if (this->field().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_field().data(), static_cast<int>(this->_internal_field().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Expr.Select.field");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_field(), target);
  }

  // bool test_only = 3;
  if (this->test_only() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_test_only(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Expr.Select)
  return target;
}

size_t Expr_Select::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Expr.Select)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string field = 2;
  if (this->field().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_field());
  }

  // .google.api.expr.v1alpha1.Expr operand = 1;
  if (this->has_operand()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *operand_);
  }

  // bool test_only = 3;
  if (this->test_only() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expr_Select::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.Expr.Select)
  GOOGLE_DCHECK_NE(&from, this);
  const Expr_Select* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Expr_Select>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.Expr.Select)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.Expr.Select)
    MergeFrom(*source);
  }
}

void Expr_Select::MergeFrom(const Expr_Select& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Expr.Select)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.field().size() > 0) {
    _internal_set_field(from._internal_field());
  }
  if (from.has_operand()) {
    _internal_mutable_operand()->::google::api::expr::v1alpha1::Expr::MergeFrom(from._internal_operand());
  }
  if (from.test_only() != 0) {
    _internal_set_test_only(from._internal_test_only());
  }
}

void Expr_Select::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.Expr.Select)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expr_Select::CopyFrom(const Expr_Select& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Expr.Select)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expr_Select::IsInitialized() const {
  return true;
}

void Expr_Select::InternalSwap(Expr_Select* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  field_.Swap(&other->field_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(operand_, other->operand_);
  swap(test_only_, other->test_only_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Expr_Select::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Expr_Call::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_Expr_Call_default_instance_._instance.get_mutable()->target_ = const_cast< ::google::api::expr::v1alpha1::Expr*>(
      ::google::api::expr::v1alpha1::Expr::internal_default_instance());
}
class Expr_Call::_Internal {
 public:
  static const ::google::api::expr::v1alpha1::Expr& target(const Expr_Call* msg);
};

const ::google::api::expr::v1alpha1::Expr&
Expr_Call::_Internal::target(const Expr_Call* msg) {
  return *msg->target_;
}
void Expr_Call::unsafe_arena_set_allocated_target(
    ::google::api::expr::v1alpha1::Expr* target) {
  if (GetArenaNoVirtual() == nullptr) {
    delete target_;
  }
  target_ = target;
  if (target) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.Expr.Call.target)
}
Expr_Call::Expr_Call()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.Expr.Call)
}
Expr_Call::Expr_Call(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  args_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Expr.Call)
}
Expr_Call::Expr_Call(const Expr_Call& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      args_(from.args_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  function_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_function().empty()) {
    function_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_function(),
      GetArenaNoVirtual());
  }
  if (from._internal_has_target()) {
    target_ = new ::google::api::expr::v1alpha1::Expr(*from.target_);
  } else {
    target_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Expr.Call)
}

void Expr_Call::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Expr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base);
  function_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  target_ = nullptr;
}

Expr_Call::~Expr_Call() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Expr.Call)
  SharedDtor();
}

void Expr_Call::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  function_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete target_;
}

void Expr_Call::ArenaDtor(void* object) {
  Expr_Call* _this = reinterpret_cast< Expr_Call* >(object);
  (void)_this;
}
void Expr_Call::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Expr_Call::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Expr_Call& Expr_Call::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Expr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base);
  return *internal_default_instance();
}


void Expr_Call::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Expr.Call)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  args_.Clear();
  function_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && target_ != nullptr) {
    delete target_;
  }
  target_ = nullptr;
  _internal_metadata_.Clear();
}

const char* Expr_Call::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.api.expr.v1alpha1.Expr target = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_target(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string function = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_function(), ptr, ctx, "google.api.expr.v1alpha1.Expr.Call.function");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .google.api.expr.v1alpha1.Expr args = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_args(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Expr_Call::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Expr.Call)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.Expr target = 1;
  if (this->has_target()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::target(this), target, stream);
  }

  // string function = 2;
  if (this->function().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_function().data(), static_cast<int>(this->_internal_function().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Expr.Call.function");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_function(), target);
  }

  // repeated .google.api.expr.v1alpha1.Expr args = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_args_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(3, this->_internal_args(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Expr.Call)
  return target;
}

size_t Expr_Call::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Expr.Call)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.expr.v1alpha1.Expr args = 3;
  total_size += 1UL * this->_internal_args_size();
  for (const auto& msg : this->args_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string function = 2;
  if (this->function().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_function());
  }

  // .google.api.expr.v1alpha1.Expr target = 1;
  if (this->has_target()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *target_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expr_Call::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.Expr.Call)
  GOOGLE_DCHECK_NE(&from, this);
  const Expr_Call* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Expr_Call>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.Expr.Call)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.Expr.Call)
    MergeFrom(*source);
  }
}

void Expr_Call::MergeFrom(const Expr_Call& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Expr.Call)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  args_.MergeFrom(from.args_);
  if (from.function().size() > 0) {
    _internal_set_function(from._internal_function());
  }
  if (from.has_target()) {
    _internal_mutable_target()->::google::api::expr::v1alpha1::Expr::MergeFrom(from._internal_target());
  }
}

void Expr_Call::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.Expr.Call)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expr_Call::CopyFrom(const Expr_Call& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Expr.Call)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expr_Call::IsInitialized() const {
  return true;
}

void Expr_Call::InternalSwap(Expr_Call* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  args_.InternalSwap(&other->args_);
  function_.Swap(&other->function_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(target_, other->target_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Expr_Call::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Expr_CreateList::InitAsDefaultInstance() {
}
class Expr_CreateList::_Internal {
 public:
};

Expr_CreateList::Expr_CreateList()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.Expr.CreateList)
}
Expr_CreateList::Expr_CreateList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  elements_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Expr.CreateList)
}
Expr_CreateList::Expr_CreateList(const Expr_CreateList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      elements_(from.elements_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Expr.CreateList)
}

void Expr_CreateList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Expr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base);
}

Expr_CreateList::~Expr_CreateList() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Expr.CreateList)
  SharedDtor();
}

void Expr_CreateList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
}

void Expr_CreateList::ArenaDtor(void* object) {
  Expr_CreateList* _this = reinterpret_cast< Expr_CreateList* >(object);
  (void)_this;
}
void Expr_CreateList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Expr_CreateList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Expr_CreateList& Expr_CreateList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Expr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base);
  return *internal_default_instance();
}


void Expr_CreateList::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Expr.CreateList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  elements_.Clear();
  _internal_metadata_.Clear();
}

const char* Expr_CreateList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .google.api.expr.v1alpha1.Expr elements = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_elements(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Expr_CreateList::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Expr.CreateList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.expr.v1alpha1.Expr elements = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_elements_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(1, this->_internal_elements(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Expr.CreateList)
  return target;
}

size_t Expr_CreateList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Expr.CreateList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.expr.v1alpha1.Expr elements = 1;
  total_size += 1UL * this->_internal_elements_size();
  for (const auto& msg : this->elements_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expr_CreateList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.Expr.CreateList)
  GOOGLE_DCHECK_NE(&from, this);
  const Expr_CreateList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Expr_CreateList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.Expr.CreateList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.Expr.CreateList)
    MergeFrom(*source);
  }
}

void Expr_CreateList::MergeFrom(const Expr_CreateList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Expr.CreateList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  elements_.MergeFrom(from.elements_);
}

void Expr_CreateList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.Expr.CreateList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expr_CreateList::CopyFrom(const Expr_CreateList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Expr.CreateList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expr_CreateList::IsInitialized() const {
  return true;
}

void Expr_CreateList::InternalSwap(Expr_CreateList* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  elements_.InternalSwap(&other->elements_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Expr_CreateList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Expr_CreateStruct_Entry::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_Expr_CreateStruct_Entry_default_instance_.field_key_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::google::api::expr::v1alpha1::_Expr_CreateStruct_Entry_default_instance_.map_key_ = const_cast< ::google::api::expr::v1alpha1::Expr*>(
      ::google::api::expr::v1alpha1::Expr::internal_default_instance());
  ::google::api::expr::v1alpha1::_Expr_CreateStruct_Entry_default_instance_._instance.get_mutable()->value_ = const_cast< ::google::api::expr::v1alpha1::Expr*>(
      ::google::api::expr::v1alpha1::Expr::internal_default_instance());
}
class Expr_CreateStruct_Entry::_Internal {
 public:
  static const ::google::api::expr::v1alpha1::Expr& map_key(const Expr_CreateStruct_Entry* msg);
  static const ::google::api::expr::v1alpha1::Expr& value(const Expr_CreateStruct_Entry* msg);
};

const ::google::api::expr::v1alpha1::Expr&
Expr_CreateStruct_Entry::_Internal::map_key(const Expr_CreateStruct_Entry* msg) {
  return *msg->key_kind_.map_key_;
}
const ::google::api::expr::v1alpha1::Expr&
Expr_CreateStruct_Entry::_Internal::value(const Expr_CreateStruct_Entry* msg) {
  return *msg->value_;
}
void Expr_CreateStruct_Entry::set_allocated_map_key(::google::api::expr::v1alpha1::Expr* map_key) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_key_kind();
  if (map_key) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(map_key);
    if (message_arena != submessage_arena) {
      map_key = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, map_key, submessage_arena);
    }
    set_has_map_key();
    key_kind_.map_key_ = map_key;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Expr.CreateStruct.Entry.map_key)
}
void Expr_CreateStruct_Entry::unsafe_arena_set_allocated_value(
    ::google::api::expr::v1alpha1::Expr* value) {
  if (GetArenaNoVirtual() == nullptr) {
    delete value_;
  }
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.Expr.CreateStruct.Entry.value)
}
Expr_CreateStruct_Entry::Expr_CreateStruct_Entry()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.Expr.CreateStruct.Entry)
}
Expr_CreateStruct_Entry::Expr_CreateStruct_Entry(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Expr.CreateStruct.Entry)
}
Expr_CreateStruct_Entry::Expr_CreateStruct_Entry(const Expr_CreateStruct_Entry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_value()) {
    value_ = new ::google::api::expr::v1alpha1::Expr(*from.value_);
  } else {
    value_ = nullptr;
  }
  id_ = from.id_;
  clear_has_key_kind();
  switch (from.key_kind_case()) {
    case kFieldKey: {
      _internal_set_field_key(from._internal_field_key());
      break;
    }
    case kMapKey: {
      _internal_mutable_map_key()->::google::api::expr::v1alpha1::Expr::MergeFrom(from._internal_map_key());
      break;
    }
    case KEY_KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Expr.CreateStruct.Entry)
}

void Expr_CreateStruct_Entry::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Expr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base);
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&value_)) + sizeof(id_));
  clear_has_key_kind();
}

Expr_CreateStruct_Entry::~Expr_CreateStruct_Entry() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Expr.CreateStruct.Entry)
  SharedDtor();
}

void Expr_CreateStruct_Entry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  if (this != internal_default_instance()) delete value_;
  if (has_key_kind()) {
    clear_key_kind();
  }
}

void Expr_CreateStruct_Entry::ArenaDtor(void* object) {
  Expr_CreateStruct_Entry* _this = reinterpret_cast< Expr_CreateStruct_Entry* >(object);
  (void)_this;
}
void Expr_CreateStruct_Entry::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Expr_CreateStruct_Entry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Expr_CreateStruct_Entry& Expr_CreateStruct_Entry::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Expr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base);
  return *internal_default_instance();
}


void Expr_CreateStruct_Entry::clear_key_kind() {
// @@protoc_insertion_point(one_of_clear_start:google.api.expr.v1alpha1.Expr.CreateStruct.Entry)
  switch (key_kind_case()) {
    case kFieldKey: {
      key_kind_.field_key_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kMapKey: {
      if (GetArenaNoVirtual() == nullptr) {
        delete key_kind_.map_key_;
      }
      break;
    }
    case KEY_KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = KEY_KIND_NOT_SET;
}


void Expr_CreateStruct_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Expr.CreateStruct.Entry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  id_ = PROTOBUF_LONGLONG(0);
  clear_key_kind();
  _internal_metadata_.Clear();
}

const char* Expr_CreateStruct_Entry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string field_key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_field_key(), ptr, ctx, "google.api.expr.v1alpha1.Expr.CreateStruct.Entry.field_key");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr map_key = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_map_key(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr value = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Expr_CreateStruct_Entry::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Expr.CreateStruct.Entry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  // string field_key = 2;
  if (_internal_has_field_key()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_field_key().data(), static_cast<int>(this->_internal_field_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Expr.CreateStruct.Entry.field_key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_field_key(), target);
  }

  // .google.api.expr.v1alpha1.Expr map_key = 3;
  if (_internal_has_map_key()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::map_key(this), target, stream);
  }

  // .google.api.expr.v1alpha1.Expr value = 4;
  if (this->has_value()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Expr.CreateStruct.Entry)
  return target;
}

size_t Expr_CreateStruct_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Expr.CreateStruct.Entry)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.api.expr.v1alpha1.Expr value = 4;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  switch (key_kind_case()) {
    // string field_key = 2;
    case kFieldKey: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_field_key());
      break;
    }
    // .google.api.expr.v1alpha1.Expr map_key = 3;
    case kMapKey: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *key_kind_.map_key_);
      break;
    }
    case KEY_KIND_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expr_CreateStruct_Entry::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.Expr.CreateStruct.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const Expr_CreateStruct_Entry* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Expr_CreateStruct_Entry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.Expr.CreateStruct.Entry)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.Expr.CreateStruct.Entry)
    MergeFrom(*source);
  }
}

void Expr_CreateStruct_Entry::MergeFrom(const Expr_CreateStruct_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Expr.CreateStruct.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    _internal_mutable_value()->::google::api::expr::v1alpha1::Expr::MergeFrom(from._internal_value());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  switch (from.key_kind_case()) {
    case kFieldKey: {
      _internal_set_field_key(from._internal_field_key());
      break;
    }
    case kMapKey: {
      _internal_mutable_map_key()->::google::api::expr::v1alpha1::Expr::MergeFrom(from._internal_map_key());
      break;
    }
    case KEY_KIND_NOT_SET: {
      break;
    }
  }
}

void Expr_CreateStruct_Entry::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.Expr.CreateStruct.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expr_CreateStruct_Entry::CopyFrom(const Expr_CreateStruct_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Expr.CreateStruct.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expr_CreateStruct_Entry::IsInitialized() const {
  return true;
}

void Expr_CreateStruct_Entry::InternalSwap(Expr_CreateStruct_Entry* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(value_, other->value_);
  swap(id_, other->id_);
  swap(key_kind_, other->key_kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Expr_CreateStruct_Entry::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Expr_CreateStruct::InitAsDefaultInstance() {
}
class Expr_CreateStruct::_Internal {
 public:
};

Expr_CreateStruct::Expr_CreateStruct()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.Expr.CreateStruct)
}
Expr_CreateStruct::Expr_CreateStruct(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  entries_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Expr.CreateStruct)
}
Expr_CreateStruct::Expr_CreateStruct(const Expr_CreateStruct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message_name().empty()) {
    message_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_message_name(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Expr.CreateStruct)
}

void Expr_CreateStruct::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Expr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base);
  message_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Expr_CreateStruct::~Expr_CreateStruct() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Expr.CreateStruct)
  SharedDtor();
}

void Expr_CreateStruct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  message_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Expr_CreateStruct::ArenaDtor(void* object) {
  Expr_CreateStruct* _this = reinterpret_cast< Expr_CreateStruct* >(object);
  (void)_this;
}
void Expr_CreateStruct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Expr_CreateStruct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Expr_CreateStruct& Expr_CreateStruct::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Expr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base);
  return *internal_default_instance();
}


void Expr_CreateStruct::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Expr.CreateStruct)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  message_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

const char* Expr_CreateStruct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string message_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_message_name(), ptr, ctx, "google.api.expr.v1alpha1.Expr.CreateStruct.message_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .google.api.expr.v1alpha1.Expr.CreateStruct.Entry entries = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Expr_CreateStruct::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Expr.CreateStruct)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message_name = 1;
  if (this->message_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message_name().data(), static_cast<int>(this->_internal_message_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Expr.CreateStruct.message_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message_name(), target);
  }

  // repeated .google.api.expr.v1alpha1.Expr.CreateStruct.Entry entries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_entries_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(2, this->_internal_entries(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Expr.CreateStruct)
  return target;
}

size_t Expr_CreateStruct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Expr.CreateStruct)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.expr.v1alpha1.Expr.CreateStruct.Entry entries = 2;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string message_name = 1;
  if (this->message_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expr_CreateStruct::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.Expr.CreateStruct)
  GOOGLE_DCHECK_NE(&from, this);
  const Expr_CreateStruct* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Expr_CreateStruct>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.Expr.CreateStruct)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.Expr.CreateStruct)
    MergeFrom(*source);
  }
}

void Expr_CreateStruct::MergeFrom(const Expr_CreateStruct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Expr.CreateStruct)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from.message_name().size() > 0) {
    _internal_set_message_name(from._internal_message_name());
  }
}

void Expr_CreateStruct::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.Expr.CreateStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expr_CreateStruct::CopyFrom(const Expr_CreateStruct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Expr.CreateStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expr_CreateStruct::IsInitialized() const {
  return true;
}

void Expr_CreateStruct::InternalSwap(Expr_CreateStruct* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  entries_.InternalSwap(&other->entries_);
  message_name_.Swap(&other->message_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata Expr_CreateStruct::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Expr_Comprehension::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_Expr_Comprehension_default_instance_._instance.get_mutable()->iter_range_ = const_cast< ::google::api::expr::v1alpha1::Expr*>(
      ::google::api::expr::v1alpha1::Expr::internal_default_instance());
  ::google::api::expr::v1alpha1::_Expr_Comprehension_default_instance_._instance.get_mutable()->accu_init_ = const_cast< ::google::api::expr::v1alpha1::Expr*>(
      ::google::api::expr::v1alpha1::Expr::internal_default_instance());
  ::google::api::expr::v1alpha1::_Expr_Comprehension_default_instance_._instance.get_mutable()->loop_condition_ = const_cast< ::google::api::expr::v1alpha1::Expr*>(
      ::google::api::expr::v1alpha1::Expr::internal_default_instance());
  ::google::api::expr::v1alpha1::_Expr_Comprehension_default_instance_._instance.get_mutable()->loop_step_ = const_cast< ::google::api::expr::v1alpha1::Expr*>(
      ::google::api::expr::v1alpha1::Expr::internal_default_instance());
  ::google::api::expr::v1alpha1::_Expr_Comprehension_default_instance_._instance.get_mutable()->result_ = const_cast< ::google::api::expr::v1alpha1::Expr*>(
      ::google::api::expr::v1alpha1::Expr::internal_default_instance());
}
class Expr_Comprehension::_Internal {
 public:
  static const ::google::api::expr::v1alpha1::Expr& iter_range(const Expr_Comprehension* msg);
  static const ::google::api::expr::v1alpha1::Expr& accu_init(const Expr_Comprehension* msg);
  static const ::google::api::expr::v1alpha1::Expr& loop_condition(const Expr_Comprehension* msg);
  static const ::google::api::expr::v1alpha1::Expr& loop_step(const Expr_Comprehension* msg);
  static const ::google::api::expr::v1alpha1::Expr& result(const Expr_Comprehension* msg);
};

const ::google::api::expr::v1alpha1::Expr&
Expr_Comprehension::_Internal::iter_range(const Expr_Comprehension* msg) {
  return *msg->iter_range_;
}
const ::google::api::expr::v1alpha1::Expr&
Expr_Comprehension::_Internal::accu_init(const Expr_Comprehension* msg) {
  return *msg->accu_init_;
}
const ::google::api::expr::v1alpha1::Expr&
Expr_Comprehension::_Internal::loop_condition(const Expr_Comprehension* msg) {
  return *msg->loop_condition_;
}
const ::google::api::expr::v1alpha1::Expr&
Expr_Comprehension::_Internal::loop_step(const Expr_Comprehension* msg) {
  return *msg->loop_step_;
}
const ::google::api::expr::v1alpha1::Expr&
Expr_Comprehension::_Internal::result(const Expr_Comprehension* msg) {
  return *msg->result_;
}
void Expr_Comprehension::unsafe_arena_set_allocated_iter_range(
    ::google::api::expr::v1alpha1::Expr* iter_range) {
  if (GetArenaNoVirtual() == nullptr) {
    delete iter_range_;
  }
  iter_range_ = iter_range;
  if (iter_range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.Expr.Comprehension.iter_range)
}
void Expr_Comprehension::unsafe_arena_set_allocated_accu_init(
    ::google::api::expr::v1alpha1::Expr* accu_init) {
  if (GetArenaNoVirtual() == nullptr) {
    delete accu_init_;
  }
  accu_init_ = accu_init;
  if (accu_init) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.Expr.Comprehension.accu_init)
}
void Expr_Comprehension::unsafe_arena_set_allocated_loop_condition(
    ::google::api::expr::v1alpha1::Expr* loop_condition) {
  if (GetArenaNoVirtual() == nullptr) {
    delete loop_condition_;
  }
  loop_condition_ = loop_condition;
  if (loop_condition) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.Expr.Comprehension.loop_condition)
}
void Expr_Comprehension::unsafe_arena_set_allocated_loop_step(
    ::google::api::expr::v1alpha1::Expr* loop_step) {
  if (GetArenaNoVirtual() == nullptr) {
    delete loop_step_;
  }
  loop_step_ = loop_step;
  if (loop_step) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.Expr.Comprehension.loop_step)
}
void Expr_Comprehension::unsafe_arena_set_allocated_result(
    ::google::api::expr::v1alpha1::Expr* result) {
  if (GetArenaNoVirtual() == nullptr) {
    delete result_;
  }
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:google.api.expr.v1alpha1.Expr.Comprehension.result)
}
Expr_Comprehension::Expr_Comprehension()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.Expr.Comprehension)
}
Expr_Comprehension::Expr_Comprehension(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Expr.Comprehension)
}
Expr_Comprehension::Expr_Comprehension(const Expr_Comprehension& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  iter_var_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_iter_var().empty()) {
    iter_var_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_iter_var(),
      GetArenaNoVirtual());
  }
  accu_var_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_accu_var().empty()) {
    accu_var_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_accu_var(),
      GetArenaNoVirtual());
  }
  if (from._internal_has_iter_range()) {
    iter_range_ = new ::google::api::expr::v1alpha1::Expr(*from.iter_range_);
  } else {
    iter_range_ = nullptr;
  }
  if (from._internal_has_accu_init()) {
    accu_init_ = new ::google::api::expr::v1alpha1::Expr(*from.accu_init_);
  } else {
    accu_init_ = nullptr;
  }
  if (from._internal_has_loop_condition()) {
    loop_condition_ = new ::google::api::expr::v1alpha1::Expr(*from.loop_condition_);
  } else {
    loop_condition_ = nullptr;
  }
  if (from._internal_has_loop_step()) {
    loop_step_ = new ::google::api::expr::v1alpha1::Expr(*from.loop_step_);
  } else {
    loop_step_ = nullptr;
  }
  if (from._internal_has_result()) {
    result_ = new ::google::api::expr::v1alpha1::Expr(*from.result_);
  } else {
    result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Expr.Comprehension)
}

void Expr_Comprehension::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Expr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base);
  iter_var_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accu_var_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&iter_range_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&iter_range_)) + sizeof(result_));
}

Expr_Comprehension::~Expr_Comprehension() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Expr.Comprehension)
  SharedDtor();
}

void Expr_Comprehension::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  iter_var_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  accu_var_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete iter_range_;
  if (this != internal_default_instance()) delete accu_init_;
  if (this != internal_default_instance()) delete loop_condition_;
  if (this != internal_default_instance()) delete loop_step_;
  if (this != internal_default_instance()) delete result_;
}

void Expr_Comprehension::ArenaDtor(void* object) {
  Expr_Comprehension* _this = reinterpret_cast< Expr_Comprehension* >(object);
  (void)_this;
}
void Expr_Comprehension::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Expr_Comprehension::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Expr_Comprehension& Expr_Comprehension::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Expr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base);
  return *internal_default_instance();
}


void Expr_Comprehension::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Expr.Comprehension)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  iter_var_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  accu_var_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == nullptr && iter_range_ != nullptr) {
    delete iter_range_;
  }
  iter_range_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && accu_init_ != nullptr) {
    delete accu_init_;
  }
  accu_init_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && loop_condition_ != nullptr) {
    delete loop_condition_;
  }
  loop_condition_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && loop_step_ != nullptr) {
    delete loop_step_;
  }
  loop_step_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  _internal_metadata_.Clear();
}

const char* Expr_Comprehension::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string iter_var = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_iter_var(), ptr, ctx, "google.api.expr.v1alpha1.Expr.Comprehension.iter_var");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr iter_range = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_iter_range(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string accu_var = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_accu_var(), ptr, ctx, "google.api.expr.v1alpha1.Expr.Comprehension.accu_var");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr accu_init = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_accu_init(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr loop_condition = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_loop_condition(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr loop_step = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_loop_step(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr result = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Expr_Comprehension::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Expr.Comprehension)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string iter_var = 1;
  if (this->iter_var().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_iter_var().data(), static_cast<int>(this->_internal_iter_var().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Expr.Comprehension.iter_var");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_iter_var(), target);
  }

  // .google.api.expr.v1alpha1.Expr iter_range = 2;
  if (this->has_iter_range()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::iter_range(this), target, stream);
  }

  // string accu_var = 3;
  if (this->accu_var().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_accu_var().data(), static_cast<int>(this->_internal_accu_var().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Expr.Comprehension.accu_var");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_accu_var(), target);
  }

  // .google.api.expr.v1alpha1.Expr accu_init = 4;
  if (this->has_accu_init()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::accu_init(this), target, stream);
  }

  // .google.api.expr.v1alpha1.Expr loop_condition = 5;
  if (this->has_loop_condition()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::loop_condition(this), target, stream);
  }

  // .google.api.expr.v1alpha1.Expr loop_step = 6;
  if (this->has_loop_step()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, _Internal::loop_step(this), target, stream);
  }

  // .google.api.expr.v1alpha1.Expr result = 7;
  if (this->has_result()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, _Internal::result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Expr.Comprehension)
  return target;
}

size_t Expr_Comprehension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Expr.Comprehension)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string iter_var = 1;
  if (this->iter_var().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_iter_var());
  }

  // string accu_var = 3;
  if (this->accu_var().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accu_var());
  }

  // .google.api.expr.v1alpha1.Expr iter_range = 2;
  if (this->has_iter_range()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *iter_range_);
  }

  // .google.api.expr.v1alpha1.Expr accu_init = 4;
  if (this->has_accu_init()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *accu_init_);
  }

  // .google.api.expr.v1alpha1.Expr loop_condition = 5;
  if (this->has_loop_condition()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *loop_condition_);
  }

  // .google.api.expr.v1alpha1.Expr loop_step = 6;
  if (this->has_loop_step()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *loop_step_);
  }

  // .google.api.expr.v1alpha1.Expr result = 7;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expr_Comprehension::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.Expr.Comprehension)
  GOOGLE_DCHECK_NE(&from, this);
  const Expr_Comprehension* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Expr_Comprehension>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.Expr.Comprehension)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.Expr.Comprehension)
    MergeFrom(*source);
  }
}

void Expr_Comprehension::MergeFrom(const Expr_Comprehension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Expr.Comprehension)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.iter_var().size() > 0) {
    _internal_set_iter_var(from._internal_iter_var());
  }
  if (from.accu_var().size() > 0) {
    _internal_set_accu_var(from._internal_accu_var());
  }
  if (from.has_iter_range()) {
    _internal_mutable_iter_range()->::google::api::expr::v1alpha1::Expr::MergeFrom(from._internal_iter_range());
  }
  if (from.has_accu_init()) {
    _internal_mutable_accu_init()->::google::api::expr::v1alpha1::Expr::MergeFrom(from._internal_accu_init());
  }
  if (from.has_loop_condition()) {
    _internal_mutable_loop_condition()->::google::api::expr::v1alpha1::Expr::MergeFrom(from._internal_loop_condition());
  }
  if (from.has_loop_step()) {
    _internal_mutable_loop_step()->::google::api::expr::v1alpha1::Expr::MergeFrom(from._internal_loop_step());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::google::api::expr::v1alpha1::Expr::MergeFrom(from._internal_result());
  }
}

void Expr_Comprehension::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.Expr.Comprehension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expr_Comprehension::CopyFrom(const Expr_Comprehension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Expr.Comprehension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expr_Comprehension::IsInitialized() const {
  return true;
}

void Expr_Comprehension::InternalSwap(Expr_Comprehension* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  iter_var_.Swap(&other->iter_var_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  accu_var_.Swap(&other->accu_var_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(iter_range_, other->iter_range_);
  swap(accu_init_, other->accu_init_);
  swap(loop_condition_, other->loop_condition_);
  swap(loop_step_, other->loop_step_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Expr_Comprehension::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Expr::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_Expr_default_instance_.const_expr_ = const_cast< ::google::api::expr::v1alpha1::Constant*>(
      ::google::api::expr::v1alpha1::Constant::internal_default_instance());
  ::google::api::expr::v1alpha1::_Expr_default_instance_.ident_expr_ = const_cast< ::google::api::expr::v1alpha1::Expr_Ident*>(
      ::google::api::expr::v1alpha1::Expr_Ident::internal_default_instance());
  ::google::api::expr::v1alpha1::_Expr_default_instance_.select_expr_ = const_cast< ::google::api::expr::v1alpha1::Expr_Select*>(
      ::google::api::expr::v1alpha1::Expr_Select::internal_default_instance());
  ::google::api::expr::v1alpha1::_Expr_default_instance_.call_expr_ = const_cast< ::google::api::expr::v1alpha1::Expr_Call*>(
      ::google::api::expr::v1alpha1::Expr_Call::internal_default_instance());
  ::google::api::expr::v1alpha1::_Expr_default_instance_.list_expr_ = const_cast< ::google::api::expr::v1alpha1::Expr_CreateList*>(
      ::google::api::expr::v1alpha1::Expr_CreateList::internal_default_instance());
  ::google::api::expr::v1alpha1::_Expr_default_instance_.struct_expr_ = const_cast< ::google::api::expr::v1alpha1::Expr_CreateStruct*>(
      ::google::api::expr::v1alpha1::Expr_CreateStruct::internal_default_instance());
  ::google::api::expr::v1alpha1::_Expr_default_instance_.comprehension_expr_ = const_cast< ::google::api::expr::v1alpha1::Expr_Comprehension*>(
      ::google::api::expr::v1alpha1::Expr_Comprehension::internal_default_instance());
}
class Expr::_Internal {
 public:
  static const ::google::api::expr::v1alpha1::Constant& const_expr(const Expr* msg);
  static const ::google::api::expr::v1alpha1::Expr_Ident& ident_expr(const Expr* msg);
  static const ::google::api::expr::v1alpha1::Expr_Select& select_expr(const Expr* msg);
  static const ::google::api::expr::v1alpha1::Expr_Call& call_expr(const Expr* msg);
  static const ::google::api::expr::v1alpha1::Expr_CreateList& list_expr(const Expr* msg);
  static const ::google::api::expr::v1alpha1::Expr_CreateStruct& struct_expr(const Expr* msg);
  static const ::google::api::expr::v1alpha1::Expr_Comprehension& comprehension_expr(const Expr* msg);
};

const ::google::api::expr::v1alpha1::Constant&
Expr::_Internal::const_expr(const Expr* msg) {
  return *msg->expr_kind_.const_expr_;
}
const ::google::api::expr::v1alpha1::Expr_Ident&
Expr::_Internal::ident_expr(const Expr* msg) {
  return *msg->expr_kind_.ident_expr_;
}
const ::google::api::expr::v1alpha1::Expr_Select&
Expr::_Internal::select_expr(const Expr* msg) {
  return *msg->expr_kind_.select_expr_;
}
const ::google::api::expr::v1alpha1::Expr_Call&
Expr::_Internal::call_expr(const Expr* msg) {
  return *msg->expr_kind_.call_expr_;
}
const ::google::api::expr::v1alpha1::Expr_CreateList&
Expr::_Internal::list_expr(const Expr* msg) {
  return *msg->expr_kind_.list_expr_;
}
const ::google::api::expr::v1alpha1::Expr_CreateStruct&
Expr::_Internal::struct_expr(const Expr* msg) {
  return *msg->expr_kind_.struct_expr_;
}
const ::google::api::expr::v1alpha1::Expr_Comprehension&
Expr::_Internal::comprehension_expr(const Expr* msg) {
  return *msg->expr_kind_.comprehension_expr_;
}
void Expr::set_allocated_const_expr(::google::api::expr::v1alpha1::Constant* const_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_expr_kind();
  if (const_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(const_expr);
    if (message_arena != submessage_arena) {
      const_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, const_expr, submessage_arena);
    }
    set_has_const_expr();
    expr_kind_.const_expr_ = const_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Expr.const_expr)
}
void Expr::set_allocated_ident_expr(::google::api::expr::v1alpha1::Expr_Ident* ident_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_expr_kind();
  if (ident_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(ident_expr);
    if (message_arena != submessage_arena) {
      ident_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ident_expr, submessage_arena);
    }
    set_has_ident_expr();
    expr_kind_.ident_expr_ = ident_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Expr.ident_expr)
}
void Expr::set_allocated_select_expr(::google::api::expr::v1alpha1::Expr_Select* select_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_expr_kind();
  if (select_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(select_expr);
    if (message_arena != submessage_arena) {
      select_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, select_expr, submessage_arena);
    }
    set_has_select_expr();
    expr_kind_.select_expr_ = select_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Expr.select_expr)
}
void Expr::set_allocated_call_expr(::google::api::expr::v1alpha1::Expr_Call* call_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_expr_kind();
  if (call_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(call_expr);
    if (message_arena != submessage_arena) {
      call_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, call_expr, submessage_arena);
    }
    set_has_call_expr();
    expr_kind_.call_expr_ = call_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Expr.call_expr)
}
void Expr::set_allocated_list_expr(::google::api::expr::v1alpha1::Expr_CreateList* list_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_expr_kind();
  if (list_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(list_expr);
    if (message_arena != submessage_arena) {
      list_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, list_expr, submessage_arena);
    }
    set_has_list_expr();
    expr_kind_.list_expr_ = list_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Expr.list_expr)
}
void Expr::set_allocated_struct_expr(::google::api::expr::v1alpha1::Expr_CreateStruct* struct_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_expr_kind();
  if (struct_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(struct_expr);
    if (message_arena != submessage_arena) {
      struct_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, struct_expr, submessage_arena);
    }
    set_has_struct_expr();
    expr_kind_.struct_expr_ = struct_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Expr.struct_expr)
}
void Expr::set_allocated_comprehension_expr(::google::api::expr::v1alpha1::Expr_Comprehension* comprehension_expr) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_expr_kind();
  if (comprehension_expr) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(comprehension_expr);
    if (message_arena != submessage_arena) {
      comprehension_expr = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, comprehension_expr, submessage_arena);
    }
    set_has_comprehension_expr();
    expr_kind_.comprehension_expr_ = comprehension_expr;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Expr.comprehension_expr)
}
Expr::Expr()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.Expr)
}
Expr::Expr(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Expr)
}
Expr::Expr(const Expr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  clear_has_expr_kind();
  switch (from.expr_kind_case()) {
    case kConstExpr: {
      _internal_mutable_const_expr()->::google::api::expr::v1alpha1::Constant::MergeFrom(from._internal_const_expr());
      break;
    }
    case kIdentExpr: {
      _internal_mutable_ident_expr()->::google::api::expr::v1alpha1::Expr_Ident::MergeFrom(from._internal_ident_expr());
      break;
    }
    case kSelectExpr: {
      _internal_mutable_select_expr()->::google::api::expr::v1alpha1::Expr_Select::MergeFrom(from._internal_select_expr());
      break;
    }
    case kCallExpr: {
      _internal_mutable_call_expr()->::google::api::expr::v1alpha1::Expr_Call::MergeFrom(from._internal_call_expr());
      break;
    }
    case kListExpr: {
      _internal_mutable_list_expr()->::google::api::expr::v1alpha1::Expr_CreateList::MergeFrom(from._internal_list_expr());
      break;
    }
    case kStructExpr: {
      _internal_mutable_struct_expr()->::google::api::expr::v1alpha1::Expr_CreateStruct::MergeFrom(from._internal_struct_expr());
      break;
    }
    case kComprehensionExpr: {
      _internal_mutable_comprehension_expr()->::google::api::expr::v1alpha1::Expr_Comprehension::MergeFrom(from._internal_comprehension_expr());
      break;
    }
    case EXPR_KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Expr)
}

void Expr::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Expr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base);
  id_ = PROTOBUF_LONGLONG(0);
  clear_has_expr_kind();
}

Expr::~Expr() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Expr)
  SharedDtor();
}

void Expr::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  if (has_expr_kind()) {
    clear_expr_kind();
  }
}

void Expr::ArenaDtor(void* object) {
  Expr* _this = reinterpret_cast< Expr* >(object);
  (void)_this;
}
void Expr::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Expr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Expr& Expr::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Expr_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base);
  return *internal_default_instance();
}


void Expr::clear_expr_kind() {
// @@protoc_insertion_point(one_of_clear_start:google.api.expr.v1alpha1.Expr)
  switch (expr_kind_case()) {
    case kConstExpr: {
      if (GetArenaNoVirtual() == nullptr) {
        delete expr_kind_.const_expr_;
      }
      break;
    }
    case kIdentExpr: {
      if (GetArenaNoVirtual() == nullptr) {
        delete expr_kind_.ident_expr_;
      }
      break;
    }
    case kSelectExpr: {
      if (GetArenaNoVirtual() == nullptr) {
        delete expr_kind_.select_expr_;
      }
      break;
    }
    case kCallExpr: {
      if (GetArenaNoVirtual() == nullptr) {
        delete expr_kind_.call_expr_;
      }
      break;
    }
    case kListExpr: {
      if (GetArenaNoVirtual() == nullptr) {
        delete expr_kind_.list_expr_;
      }
      break;
    }
    case kStructExpr: {
      if (GetArenaNoVirtual() == nullptr) {
        delete expr_kind_.struct_expr_;
      }
      break;
    }
    case kComprehensionExpr: {
      if (GetArenaNoVirtual() == nullptr) {
        delete expr_kind_.comprehension_expr_;
      }
      break;
    }
    case EXPR_KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EXPR_KIND_NOT_SET;
}


void Expr::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Expr)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = PROTOBUF_LONGLONG(0);
  clear_expr_kind();
  _internal_metadata_.Clear();
}

const char* Expr::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Constant const_expr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_const_expr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr.Ident ident_expr = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_ident_expr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr.Select select_expr = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_select_expr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr.Call call_expr = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_call_expr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr.CreateList list_expr = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_expr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr.CreateStruct struct_expr = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_struct_expr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.expr.v1alpha1.Expr.Comprehension comprehension_expr = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_comprehension_expr(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Expr::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Expr)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 2;
  if (this->id() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_id(), target);
  }

  // .google.api.expr.v1alpha1.Constant const_expr = 3;
  if (_internal_has_const_expr()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::const_expr(this), target, stream);
  }

  // .google.api.expr.v1alpha1.Expr.Ident ident_expr = 4;
  if (_internal_has_ident_expr()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::ident_expr(this), target, stream);
  }

  // .google.api.expr.v1alpha1.Expr.Select select_expr = 5;
  if (_internal_has_select_expr()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::select_expr(this), target, stream);
  }

  // .google.api.expr.v1alpha1.Expr.Call call_expr = 6;
  if (_internal_has_call_expr()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, _Internal::call_expr(this), target, stream);
  }

  // .google.api.expr.v1alpha1.Expr.CreateList list_expr = 7;
  if (_internal_has_list_expr()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, _Internal::list_expr(this), target, stream);
  }

  // .google.api.expr.v1alpha1.Expr.CreateStruct struct_expr = 8;
  if (_internal_has_struct_expr()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, _Internal::struct_expr(this), target, stream);
  }

  // .google.api.expr.v1alpha1.Expr.Comprehension comprehension_expr = 9;
  if (_internal_has_comprehension_expr()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, _Internal::comprehension_expr(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Expr)
  return target;
}

size_t Expr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Expr)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  switch (expr_kind_case()) {
    // .google.api.expr.v1alpha1.Constant const_expr = 3;
    case kConstExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *expr_kind_.const_expr_);
      break;
    }
    // .google.api.expr.v1alpha1.Expr.Ident ident_expr = 4;
    case kIdentExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *expr_kind_.ident_expr_);
      break;
    }
    // .google.api.expr.v1alpha1.Expr.Select select_expr = 5;
    case kSelectExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *expr_kind_.select_expr_);
      break;
    }
    // .google.api.expr.v1alpha1.Expr.Call call_expr = 6;
    case kCallExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *expr_kind_.call_expr_);
      break;
    }
    // .google.api.expr.v1alpha1.Expr.CreateList list_expr = 7;
    case kListExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *expr_kind_.list_expr_);
      break;
    }
    // .google.api.expr.v1alpha1.Expr.CreateStruct struct_expr = 8;
    case kStructExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *expr_kind_.struct_expr_);
      break;
    }
    // .google.api.expr.v1alpha1.Expr.Comprehension comprehension_expr = 9;
    case kComprehensionExpr: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *expr_kind_.comprehension_expr_);
      break;
    }
    case EXPR_KIND_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Expr::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.Expr)
  GOOGLE_DCHECK_NE(&from, this);
  const Expr* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Expr>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.Expr)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.Expr)
    MergeFrom(*source);
  }
}

void Expr::MergeFrom(const Expr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Expr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  switch (from.expr_kind_case()) {
    case kConstExpr: {
      _internal_mutable_const_expr()->::google::api::expr::v1alpha1::Constant::MergeFrom(from._internal_const_expr());
      break;
    }
    case kIdentExpr: {
      _internal_mutable_ident_expr()->::google::api::expr::v1alpha1::Expr_Ident::MergeFrom(from._internal_ident_expr());
      break;
    }
    case kSelectExpr: {
      _internal_mutable_select_expr()->::google::api::expr::v1alpha1::Expr_Select::MergeFrom(from._internal_select_expr());
      break;
    }
    case kCallExpr: {
      _internal_mutable_call_expr()->::google::api::expr::v1alpha1::Expr_Call::MergeFrom(from._internal_call_expr());
      break;
    }
    case kListExpr: {
      _internal_mutable_list_expr()->::google::api::expr::v1alpha1::Expr_CreateList::MergeFrom(from._internal_list_expr());
      break;
    }
    case kStructExpr: {
      _internal_mutable_struct_expr()->::google::api::expr::v1alpha1::Expr_CreateStruct::MergeFrom(from._internal_struct_expr());
      break;
    }
    case kComprehensionExpr: {
      _internal_mutable_comprehension_expr()->::google::api::expr::v1alpha1::Expr_Comprehension::MergeFrom(from._internal_comprehension_expr());
      break;
    }
    case EXPR_KIND_NOT_SET: {
      break;
    }
  }
}

void Expr::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.Expr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Expr::CopyFrom(const Expr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Expr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Expr::IsInitialized() const {
  return true;
}

void Expr::InternalSwap(Expr* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(id_, other->id_);
  swap(expr_kind_, other->expr_kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Expr::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Constant::InitAsDefaultInstance() {
  ::google::api::expr::v1alpha1::_Constant_default_instance_.null_value_ = 0;
  ::google::api::expr::v1alpha1::_Constant_default_instance_.bool_value_ = false;
  ::google::api::expr::v1alpha1::_Constant_default_instance_.int64_value_ = PROTOBUF_LONGLONG(0);
  ::google::api::expr::v1alpha1::_Constant_default_instance_.uint64_value_ = PROTOBUF_ULONGLONG(0);
  ::google::api::expr::v1alpha1::_Constant_default_instance_.double_value_ = 0;
  ::google::api::expr::v1alpha1::_Constant_default_instance_.string_value_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::google::api::expr::v1alpha1::_Constant_default_instance_.bytes_value_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::google::api::expr::v1alpha1::_Constant_default_instance_.duration_value_ = const_cast< PROTOBUF_NAMESPACE_ID::Duration*>(
      PROTOBUF_NAMESPACE_ID::Duration::internal_default_instance());
  ::google::api::expr::v1alpha1::_Constant_default_instance_.timestamp_value_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class Constant::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Duration& duration_value(const Constant* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& timestamp_value(const Constant* msg);
};

const PROTOBUF_NAMESPACE_ID::Duration&
Constant::_Internal::duration_value(const Constant* msg) {
  return *msg->constant_kind_.duration_value_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
Constant::_Internal::timestamp_value(const Constant* msg) {
  return *msg->constant_kind_.timestamp_value_;
}
void Constant::set_allocated_duration_value(PROTOBUF_NAMESPACE_ID::Duration* duration_value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_constant_kind();
  if (duration_value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(duration_value)->GetArena();
    if (message_arena != submessage_arena) {
      duration_value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, duration_value, submessage_arena);
    }
    set_has_duration_value();
    constant_kind_.duration_value_ = duration_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Constant.duration_value)
}
void Constant::clear_duration_value() {
  if (_internal_has_duration_value()) {
    if (GetArenaNoVirtual() == nullptr) {
      delete constant_kind_.duration_value_;
    }
    clear_has_constant_kind();
  }
}
void Constant::set_allocated_timestamp_value(PROTOBUF_NAMESPACE_ID::Timestamp* timestamp_value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_constant_kind();
  if (timestamp_value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(timestamp_value)->GetArena();
    if (message_arena != submessage_arena) {
      timestamp_value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, timestamp_value, submessage_arena);
    }
    set_has_timestamp_value();
    constant_kind_.timestamp_value_ = timestamp_value;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.expr.v1alpha1.Constant.timestamp_value)
}
void Constant::clear_timestamp_value() {
  if (_internal_has_timestamp_value()) {
    if (GetArenaNoVirtual() == nullptr) {
      delete constant_kind_.timestamp_value_;
    }
    clear_has_constant_kind();
  }
}
Constant::Constant()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.Constant)
}
Constant::Constant(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.Constant)
}
Constant::Constant(const Constant& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_constant_kind();
  switch (from.constant_kind_case()) {
    case kNullValue: {
      _internal_set_null_value(from._internal_null_value());
      break;
    }
    case kBoolValue: {
      _internal_set_bool_value(from._internal_bool_value());
      break;
    }
    case kInt64Value: {
      _internal_set_int64_value(from._internal_int64_value());
      break;
    }
    case kUint64Value: {
      _internal_set_uint64_value(from._internal_uint64_value());
      break;
    }
    case kDoubleValue: {
      _internal_set_double_value(from._internal_double_value());
      break;
    }
    case kStringValue: {
      _internal_set_string_value(from._internal_string_value());
      break;
    }
    case kBytesValue: {
      _internal_set_bytes_value(from._internal_bytes_value());
      break;
    }
    case kDurationValue: {
      _internal_mutable_duration_value()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_duration_value());
      break;
    }
    case kTimestampValue: {
      _internal_mutable_timestamp_value()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_timestamp_value());
      break;
    }
    case CONSTANT_KIND_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.Constant)
}

void Constant::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Constant_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base);
  clear_has_constant_kind();
}

Constant::~Constant() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.Constant)
  SharedDtor();
}

void Constant::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  if (has_constant_kind()) {
    clear_constant_kind();
  }
}

void Constant::ArenaDtor(void* object) {
  Constant* _this = reinterpret_cast< Constant* >(object);
  (void)_this;
}
void Constant::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Constant::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Constant& Constant::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Constant_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base);
  return *internal_default_instance();
}


void Constant::clear_constant_kind() {
// @@protoc_insertion_point(one_of_clear_start:google.api.expr.v1alpha1.Constant)
  switch (constant_kind_case()) {
    case kNullValue: {
      // No need to clear
      break;
    }
    case kBoolValue: {
      // No need to clear
      break;
    }
    case kInt64Value: {
      // No need to clear
      break;
    }
    case kUint64Value: {
      // No need to clear
      break;
    }
    case kDoubleValue: {
      // No need to clear
      break;
    }
    case kStringValue: {
      constant_kind_.string_value_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kBytesValue: {
      constant_kind_.bytes_value_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kDurationValue: {
      if (GetArenaNoVirtual() == nullptr) {
        delete constant_kind_.duration_value_;
      }
      break;
    }
    case kTimestampValue: {
      if (GetArenaNoVirtual() == nullptr) {
        delete constant_kind_.timestamp_value_;
      }
      break;
    }
    case CONSTANT_KIND_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONSTANT_KIND_NOT_SET;
}


void Constant::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.Constant)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_constant_kind();
  _internal_metadata_.Clear();
}

const char* Constant::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.NullValue null_value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_null_value(static_cast<PROTOBUF_NAMESPACE_ID::NullValue>(val));
        } else goto handle_unusual;
        continue;
      // bool bool_value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _internal_set_bool_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 int64_value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _internal_set_int64_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 uint64_value = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _internal_set_uint64_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double double_value = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          _internal_set_double_value(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // string string_value = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_string_value(), ptr, ctx, "google.api.expr.v1alpha1.Constant.string_value");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes bytes_value = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(_internal_mutable_bytes_value(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Duration duration_value = 8 [deprecated = true];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_duration_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp timestamp_value = 9 [deprecated = true];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_timestamp_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Constant::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.Constant)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.NullValue null_value = 1;
  if (_internal_has_null_value()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_null_value(), target);
  }

  // bool bool_value = 2;
  if (_internal_has_bool_value()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_bool_value(), target);
  }

  // int64 int64_value = 3;
  if (_internal_has_int64_value()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_int64_value(), target);
  }

  // uint64 uint64_value = 4;
  if (_internal_has_uint64_value()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_uint64_value(), target);
  }

  // double double_value = 5;
  if (_internal_has_double_value()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_double_value(), target);
  }

  // string string_value = 6;
  if (_internal_has_string_value()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_string_value().data(), static_cast<int>(this->_internal_string_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.Constant.string_value");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_string_value(), target);
  }

  // bytes bytes_value = 7;
  if (_internal_has_bytes_value()) {
    target = stream->WriteBytesMaybeAliased(
        7, this->_internal_bytes_value(), target);
  }

  // .google.protobuf.Duration duration_value = 8 [deprecated = true];
  if (_internal_has_duration_value()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, _Internal::duration_value(this), target, stream);
  }

  // .google.protobuf.Timestamp timestamp_value = 9 [deprecated = true];
  if (_internal_has_timestamp_value()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, _Internal::timestamp_value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.Constant)
  return target;
}

size_t Constant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.Constant)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (constant_kind_case()) {
    // .google.protobuf.NullValue null_value = 1;
    case kNullValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_null_value());
      break;
    }
    // bool bool_value = 2;
    case kBoolValue: {
      total_size += 1 + 1;
      break;
    }
    // int64 int64_value = 3;
    case kInt64Value: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_int64_value());
      break;
    }
    // uint64 uint64_value = 4;
    case kUint64Value: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_uint64_value());
      break;
    }
    // double double_value = 5;
    case kDoubleValue: {
      total_size += 1 + 8;
      break;
    }
    // string string_value = 6;
    case kStringValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_string_value());
      break;
    }
    // bytes bytes_value = 7;
    case kBytesValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_bytes_value());
      break;
    }
    // .google.protobuf.Duration duration_value = 8 [deprecated = true];
    case kDurationValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *constant_kind_.duration_value_);
      break;
    }
    // .google.protobuf.Timestamp timestamp_value = 9 [deprecated = true];
    case kTimestampValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *constant_kind_.timestamp_value_);
      break;
    }
    case CONSTANT_KIND_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Constant::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.Constant)
  GOOGLE_DCHECK_NE(&from, this);
  const Constant* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Constant>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.Constant)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.Constant)
    MergeFrom(*source);
  }
}

void Constant::MergeFrom(const Constant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.Constant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.constant_kind_case()) {
    case kNullValue: {
      _internal_set_null_value(from._internal_null_value());
      break;
    }
    case kBoolValue: {
      _internal_set_bool_value(from._internal_bool_value());
      break;
    }
    case kInt64Value: {
      _internal_set_int64_value(from._internal_int64_value());
      break;
    }
    case kUint64Value: {
      _internal_set_uint64_value(from._internal_uint64_value());
      break;
    }
    case kDoubleValue: {
      _internal_set_double_value(from._internal_double_value());
      break;
    }
    case kStringValue: {
      _internal_set_string_value(from._internal_string_value());
      break;
    }
    case kBytesValue: {
      _internal_set_bytes_value(from._internal_bytes_value());
      break;
    }
    case kDurationValue: {
      _internal_mutable_duration_value()->PROTOBUF_NAMESPACE_ID::Duration::MergeFrom(from._internal_duration_value());
      break;
    }
    case kTimestampValue: {
      _internal_mutable_timestamp_value()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_timestamp_value());
      break;
    }
    case CONSTANT_KIND_NOT_SET: {
      break;
    }
  }
}

void Constant::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.Constant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Constant::CopyFrom(const Constant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.Constant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Constant::IsInitialized() const {
  return true;
}

void Constant::InternalSwap(Constant* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(constant_kind_, other->constant_kind_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Constant::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

SourceInfo_PositionsEntry_DoNotUse::SourceInfo_PositionsEntry_DoNotUse() {}
SourceInfo_PositionsEntry_DoNotUse::SourceInfo_PositionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SourceInfo_PositionsEntry_DoNotUse::MergeFrom(const SourceInfo_PositionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SourceInfo_PositionsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void SourceInfo_PositionsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

SourceInfo_MacroCallsEntry_DoNotUse::SourceInfo_MacroCallsEntry_DoNotUse() {}
SourceInfo_MacroCallsEntry_DoNotUse::SourceInfo_MacroCallsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void SourceInfo_MacroCallsEntry_DoNotUse::MergeFrom(const SourceInfo_MacroCallsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata SourceInfo_MacroCallsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void SourceInfo_MacroCallsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void SourceInfo::InitAsDefaultInstance() {
}
class SourceInfo::_Internal {
 public:
};

SourceInfo::SourceInfo()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.SourceInfo)
}
SourceInfo::SourceInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena),
  line_offsets_(arena),
  positions_(arena),
  macro_calls_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.SourceInfo)
}
SourceInfo::SourceInfo(const SourceInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      line_offsets_(from.line_offsets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  positions_.MergeFrom(from.positions_);
  macro_calls_.MergeFrom(from.macro_calls_);
  syntax_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_syntax_version().empty()) {
    syntax_version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_syntax_version(),
      GetArenaNoVirtual());
  }
  location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_location().empty()) {
    location_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_location(),
      GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.SourceInfo)
}

void SourceInfo::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SourceInfo_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base);
  syntax_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SourceInfo::~SourceInfo() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.SourceInfo)
  SharedDtor();
}

void SourceInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  syntax_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SourceInfo::ArenaDtor(void* object) {
  SourceInfo* _this = reinterpret_cast< SourceInfo* >(object);
  (void)_this;
}
void SourceInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SourceInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SourceInfo& SourceInfo::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SourceInfo_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base);
  return *internal_default_instance();
}


void SourceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.SourceInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  line_offsets_.Clear();
  positions_.Clear();
  macro_calls_.Clear();
  syntax_version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  location_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  _internal_metadata_.Clear();
}

const char* SourceInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string syntax_version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_syntax_version(), ptr, ctx, "google.api.expr.v1alpha1.SourceInfo.syntax_version");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string location = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_location(), ptr, ctx, "google.api.expr.v1alpha1.SourceInfo.location");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 line_offsets = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_line_offsets(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24) {
          _internal_add_line_offsets(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<int64, int32> positions = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&positions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // map<int64, .google.api.expr.v1alpha1.Expr> macro_calls = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&macro_calls_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SourceInfo::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.SourceInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string syntax_version = 1;
  if (this->syntax_version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_syntax_version().data(), static_cast<int>(this->_internal_syntax_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.SourceInfo.syntax_version");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_syntax_version(), target);
  }

  // string location = 2;
  if (this->location().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.SourceInfo.location");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_location(), target);
  }

  // repeated int32 line_offsets = 3;
  {
    int byte_size = _line_offsets_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          3, _internal_line_offsets(), byte_size, target);
    }
  }

  // map<int64, int32> positions = 4;
  if (!this->_internal_positions().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::int32 >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int64, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_positions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_positions().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::int32 >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::int32 >::const_iterator
          it = this->_internal_positions().begin();
          it != this->_internal_positions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = SourceInfo_PositionsEntry_DoNotUse::Funcs::InternalSerialize(4, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::int32 >::const_iterator
          it = this->_internal_positions().begin();
          it != this->_internal_positions().end(); ++it) {
        target = SourceInfo_PositionsEntry_DoNotUse::Funcs::InternalSerialize(4, it->first, it->second, target, stream);
      }
    }
  }

  // map<int64, .google.api.expr.v1alpha1.Expr> macro_calls = 5;
  if (!this->_internal_macro_calls().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::google::api::expr::v1alpha1::Expr >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int64, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_macro_calls().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_macro_calls().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::google::api::expr::v1alpha1::Expr >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::google::api::expr::v1alpha1::Expr >::const_iterator
          it = this->_internal_macro_calls().begin();
          it != this->_internal_macro_calls().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = SourceInfo_MacroCallsEntry_DoNotUse::Funcs::InternalSerialize(5, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::google::api::expr::v1alpha1::Expr >::const_iterator
          it = this->_internal_macro_calls().begin();
          it != this->_internal_macro_calls().end(); ++it) {
        target = SourceInfo_MacroCallsEntry_DoNotUse::Funcs::InternalSerialize(5, it->first, it->second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.SourceInfo)
  return target;
}

size_t SourceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.SourceInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 line_offsets = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->line_offsets_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _line_offsets_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // map<int64, int32> positions = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_positions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::PROTOBUF_NAMESPACE_ID::int32 >::const_iterator
      it = this->_internal_positions().begin();
      it != this->_internal_positions().end(); ++it) {
    total_size += SourceInfo_PositionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // map<int64, .google.api.expr.v1alpha1.Expr> macro_calls = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_macro_calls_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int64, ::google::api::expr::v1alpha1::Expr >::const_iterator
      it = this->_internal_macro_calls().begin();
      it != this->_internal_macro_calls().end(); ++it) {
    total_size += SourceInfo_MacroCallsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string syntax_version = 1;
  if (this->syntax_version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_syntax_version());
  }

  // string location = 2;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SourceInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.SourceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SourceInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SourceInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.SourceInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.SourceInfo)
    MergeFrom(*source);
  }
}

void SourceInfo::MergeFrom(const SourceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.SourceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  line_offsets_.MergeFrom(from.line_offsets_);
  positions_.MergeFrom(from.positions_);
  macro_calls_.MergeFrom(from.macro_calls_);
  if (from.syntax_version().size() > 0) {
    _internal_set_syntax_version(from._internal_syntax_version());
  }
  if (from.location().size() > 0) {
    _internal_set_location(from._internal_location());
  }
}

void SourceInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.SourceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourceInfo::CopyFrom(const SourceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.SourceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourceInfo::IsInitialized() const {
  return true;
}

void SourceInfo::InternalSwap(SourceInfo* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  line_offsets_.InternalSwap(&other->line_offsets_);
  positions_.Swap(&other->positions_);
  macro_calls_.Swap(&other->macro_calls_);
  syntax_version_.Swap(&other->syntax_version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  location_.Swap(&other->location_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata SourceInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SourcePosition::InitAsDefaultInstance() {
}
class SourcePosition::_Internal {
 public:
};

SourcePosition::SourcePosition()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.expr.v1alpha1.SourcePosition)
}
SourcePosition::SourcePosition(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.api.expr.v1alpha1.SourcePosition)
}
SourcePosition::SourcePosition(const SourcePosition& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_location().empty()) {
    location_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_location(),
      GetArenaNoVirtual());
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&column_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(column_));
  // @@protoc_insertion_point(copy_constructor:google.api.expr.v1alpha1.SourcePosition)
}

void SourcePosition::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SourcePosition_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base);
  location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&column_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(column_));
}

SourcePosition::~SourcePosition() {
  // @@protoc_insertion_point(destructor:google.api.expr.v1alpha1.SourcePosition)
  SharedDtor();
}

void SourcePosition::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == nullptr);
  location_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SourcePosition::ArenaDtor(void* object) {
  SourcePosition* _this = reinterpret_cast< SourcePosition* >(object);
  (void)_this;
}
void SourcePosition::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SourcePosition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SourcePosition& SourcePosition::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SourcePosition_google_2fapi_2fexpr_2fv1alpha1_2fsyntax_2eproto.base);
  return *internal_default_instance();
}


void SourcePosition::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.expr.v1alpha1.SourcePosition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&column_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(column_));
  _internal_metadata_.Clear();
}

const char* SourcePosition::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArenaNoVirtual(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string location = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_location(), ptr, ctx, "google.api.expr.v1alpha1.SourcePosition.location");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 offset = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 line = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          line_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 column = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          column_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SourcePosition::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.expr.v1alpha1.SourcePosition)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string location = 1;
  if (this->location().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.expr.v1alpha1.SourcePosition.location");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location(), target);
  }

  // int32 offset = 2;
  if (this->offset() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_offset(), target);
  }

  // int32 line = 3;
  if (this->line() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_line(), target);
  }

  // int32 column = 4;
  if (this->column() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_column(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.expr.v1alpha1.SourcePosition)
  return target;
}

size_t SourcePosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.expr.v1alpha1.SourcePosition)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location = 1;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location());
  }

  // int32 offset = 2;
  if (this->offset() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_offset());
  }

  // int32 line = 3;
  if (this->line() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_line());
  }

  // int32 column = 4;
  if (this->column() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_column());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SourcePosition::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.expr.v1alpha1.SourcePosition)
  GOOGLE_DCHECK_NE(&from, this);
  const SourcePosition* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SourcePosition>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.expr.v1alpha1.SourcePosition)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.expr.v1alpha1.SourcePosition)
    MergeFrom(*source);
  }
}

void SourcePosition::MergeFrom(const SourcePosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.expr.v1alpha1.SourcePosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.location().size() > 0) {
    _internal_set_location(from._internal_location());
  }
  if (from.offset() != 0) {
    _internal_set_offset(from._internal_offset());
  }
  if (from.line() != 0) {
    _internal_set_line(from._internal_line());
  }
  if (from.column() != 0) {
    _internal_set_column(from._internal_column());
  }
}

void SourcePosition::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.expr.v1alpha1.SourcePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SourcePosition::CopyFrom(const SourcePosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.expr.v1alpha1.SourcePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SourcePosition::IsInitialized() const {
  return true;
}

void SourcePosition::InternalSwap(SourcePosition* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  location_.Swap(&other->location_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(offset_, other->offset_);
  swap(line_, other->line_);
  swap(column_, other->column_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SourcePosition::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace expr
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::ParsedExpr* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::ParsedExpr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::ParsedExpr >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::Expr_Ident* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Expr_Ident >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Expr_Ident >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::Expr_Select* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Expr_Select >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Expr_Select >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::Expr_Call* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Expr_Call >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Expr_Call >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::Expr_CreateList* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Expr_CreateList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Expr_CreateList >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::Expr_CreateStruct_Entry* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Expr_CreateStruct_Entry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Expr_CreateStruct_Entry >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::Expr_CreateStruct* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Expr_CreateStruct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Expr_CreateStruct >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::Expr_Comprehension* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Expr_Comprehension >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Expr_Comprehension >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::Expr* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Expr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Expr >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::Constant* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::Constant >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::Constant >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::SourceInfo_PositionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::SourceInfo_PositionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::SourceInfo_PositionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::SourceInfo_MacroCallsEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::SourceInfo_MacroCallsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::SourceInfo_MacroCallsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::SourceInfo* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::SourceInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::SourceInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::expr::v1alpha1::SourcePosition* Arena::CreateMaybeMessage< ::google::api::expr::v1alpha1::SourcePosition >(Arena* arena) {
  return Arena::CreateMessageInternal< ::google::api::expr::v1alpha1::SourcePosition >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
