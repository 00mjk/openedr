// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicemanagement/v1/resources.proto

#include "google/api/servicemanagement/v1/resources.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fconfig_5fchange_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ConfigChange_google_2fapi_2fconfig_5fchange_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConfigFile_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OperationMetadata_Step_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Rollout_DeleteServiceStrategy_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Rollout_TrafficPercentStrategy_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
namespace google {
namespace api {
namespace servicemanagement {
namespace v1 {
class ManagedServiceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ManagedService> _instance;
} _ManagedService_default_instance_;
class OperationMetadata_StepDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OperationMetadata_Step> _instance;
} _OperationMetadata_Step_default_instance_;
class OperationMetadataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OperationMetadata> _instance;
} _OperationMetadata_default_instance_;
class DiagnosticDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Diagnostic> _instance;
} _Diagnostic_default_instance_;
class ConfigSourceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConfigSource> _instance;
} _ConfigSource_default_instance_;
class ConfigFileDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConfigFile> _instance;
} _ConfigFile_default_instance_;
class ConfigRefDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConfigRef> _instance;
} _ConfigRef_default_instance_;
class ChangeReportDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChangeReport> _instance;
} _ChangeReport_default_instance_;
class Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse> _instance;
} _Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse_default_instance_;
class Rollout_TrafficPercentStrategyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Rollout_TrafficPercentStrategy> _instance;
} _Rollout_TrafficPercentStrategy_default_instance_;
class Rollout_DeleteServiceStrategyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Rollout_DeleteServiceStrategy> _instance;
} _Rollout_DeleteServiceStrategy_default_instance_;
class RolloutDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Rollout> _instance;
  const ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy* traffic_percent_strategy_;
  const ::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy* delete_service_strategy_;
} _Rollout_default_instance_;
}  // namespace v1
}  // namespace servicemanagement
}  // namespace api
}  // namespace google
static void InitDefaultsscc_info_ChangeReport_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_ChangeReport_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::ChangeReport();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::ChangeReport::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ChangeReport_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ChangeReport_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto}, {
      &scc_info_ConfigChange_google_2fapi_2fconfig_5fchange_2eproto.base,}};

static void InitDefaultsscc_info_ConfigFile_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_ConfigFile_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::ConfigFile();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::ConfigFile::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConfigFile_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ConfigFile_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto}, {}};

static void InitDefaultsscc_info_ConfigRef_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_ConfigRef_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::ConfigRef();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::ConfigRef::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConfigRef_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ConfigRef_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto}, {}};

static void InitDefaultsscc_info_ConfigSource_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_ConfigSource_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::ConfigSource();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::ConfigSource::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ConfigSource_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ConfigSource_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto}, {
      &scc_info_ConfigFile_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base,}};

static void InitDefaultsscc_info_Diagnostic_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_Diagnostic_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::Diagnostic();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::Diagnostic::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Diagnostic_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Diagnostic_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto}, {}};

static void InitDefaultsscc_info_ManagedService_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_ManagedService_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::ManagedService();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::ManagedService::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ManagedService_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ManagedService_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto}, {}};

static void InitDefaultsscc_info_OperationMetadata_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_OperationMetadata_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::OperationMetadata();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::OperationMetadata::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_OperationMetadata_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_OperationMetadata_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto}, {
      &scc_info_OperationMetadata_Step_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base,
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static void InitDefaultsscc_info_OperationMetadata_Step_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_OperationMetadata_Step_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::OperationMetadata_Step();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::OperationMetadata_Step::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OperationMetadata_Step_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OperationMetadata_Step_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto}, {}};

static void InitDefaultsscc_info_Rollout_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_Rollout_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::Rollout();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::Rollout::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Rollout_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_Rollout_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,
      &scc_info_Rollout_TrafficPercentStrategy_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base,
      &scc_info_Rollout_DeleteServiceStrategy_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base,}};

static void InitDefaultsscc_info_Rollout_DeleteServiceStrategy_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_Rollout_DeleteServiceStrategy_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Rollout_DeleteServiceStrategy_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Rollout_DeleteServiceStrategy_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto}, {}};

static void InitDefaultsscc_info_Rollout_TrafficPercentStrategy_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_Rollout_TrafficPercentStrategy_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Rollout_TrafficPercentStrategy_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Rollout_TrafficPercentStrategy_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto}, {
      &scc_info_Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base,}};

static void InitDefaultsscc_info_Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse();
  }
  ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[12];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ManagedService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ManagedService, service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ManagedService, producer_project_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::OperationMetadata_Step, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::OperationMetadata_Step, description_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::OperationMetadata_Step, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::OperationMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::OperationMetadata, resource_names_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::OperationMetadata, steps_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::OperationMetadata, progress_percentage_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::OperationMetadata, start_time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Diagnostic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Diagnostic, location_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Diagnostic, kind_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Diagnostic, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ConfigSource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ConfigSource, id_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ConfigSource, files_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ConfigFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ConfigFile, file_path_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ConfigFile, file_contents_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ConfigFile, file_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ConfigRef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ConfigRef, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ChangeReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ChangeReport, config_changes_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy, percentages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout, rollout_id_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout, create_time_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout, created_by_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout, status_),
  offsetof(::google::api::servicemanagement::v1::RolloutDefaultTypeInternal, traffic_percent_strategy_),
  offsetof(::google::api::servicemanagement::v1::RolloutDefaultTypeInternal, delete_service_strategy_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout, service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::Rollout, strategy_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::api::servicemanagement::v1::ManagedService)},
  { 7, -1, sizeof(::google::api::servicemanagement::v1::OperationMetadata_Step)},
  { 14, -1, sizeof(::google::api::servicemanagement::v1::OperationMetadata)},
  { 23, -1, sizeof(::google::api::servicemanagement::v1::Diagnostic)},
  { 31, -1, sizeof(::google::api::servicemanagement::v1::ConfigSource)},
  { 38, -1, sizeof(::google::api::servicemanagement::v1::ConfigFile)},
  { 46, -1, sizeof(::google::api::servicemanagement::v1::ConfigRef)},
  { 52, -1, sizeof(::google::api::servicemanagement::v1::ChangeReport)},
  { 58, 65, sizeof(::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse)},
  { 67, -1, sizeof(::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy)},
  { 73, -1, sizeof(::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy)},
  { 78, -1, sizeof(::google::api::servicemanagement::v1::Rollout)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_ManagedService_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_OperationMetadata_Step_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_OperationMetadata_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_Diagnostic_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_ConfigSource_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_ConfigFile_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_ConfigRef_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_ChangeReport_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_Rollout_TrafficPercentStrategy_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_Rollout_DeleteServiceStrategy_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_Rollout_default_instance_),
};

const char descriptor_table_protodef_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n/google/api/servicemanagement/v1/resour"
  "ces.proto\022\037google.api.servicemanagement."
  "v1\032\034google/api/annotations.proto\032\036google"
  "/api/config_change.proto\032\027google/api/met"
  "ric.proto\032\030google/api/service.proto\032#goo"
  "gle/longrunning/operations.proto\032\031google"
  "/protobuf/any.proto\032 google/protobuf/fie"
  "ld_mask.proto\032\034google/protobuf/struct.pr"
  "oto\032\037google/protobuf/timestamp.proto\032\027go"
  "ogle/rpc/status.proto\"C\n\016ManagedService\022"
  "\024\n\014service_name\030\002 \001(\t\022\033\n\023producer_projec"
  "t_id\030\003 \001(\t\"\221\003\n\021OperationMetadata\022\026\n\016reso"
  "urce_names\030\001 \003(\t\022F\n\005steps\030\002 \003(\01327.google"
  ".api.servicemanagement.v1.OperationMetad"
  "ata.Step\022\033\n\023progress_percentage\030\003 \001(\005\022.\n"
  "\nstart_time\030\004 \001(\0132\032.google.protobuf.Time"
  "stamp\032f\n\004Step\022\023\n\013description\030\002 \001(\t\022I\n\006st"
  "atus\030\004 \001(\01629.google.api.servicemanagemen"
  "t.v1.OperationMetadata.Status\"g\n\006Status\022"
  "\026\n\022STATUS_UNSPECIFIED\020\000\022\010\n\004DONE\020\001\022\017\n\013NOT"
  "_STARTED\020\002\022\017\n\013IN_PROGRESS\020\003\022\n\n\006FAILED\020\004\022"
  "\r\n\tCANCELLED\020\005\"\217\001\n\nDiagnostic\022\020\n\010locatio"
  "n\030\001 \001(\t\022>\n\004kind\030\002 \001(\01620.google.api.servi"
  "cemanagement.v1.Diagnostic.Kind\022\017\n\007messa"
  "ge\030\003 \001(\t\"\036\n\004Kind\022\013\n\007WARNING\020\000\022\t\n\005ERROR\020\001"
  "\"V\n\014ConfigSource\022\n\n\002id\030\005 \001(\t\022:\n\005files\030\002 "
  "\003(\0132+.google.api.servicemanagement.v1.Co"
  "nfigFile\"\225\002\n\nConfigFile\022\021\n\tfile_path\030\001 \001"
  "(\t\022\025\n\rfile_contents\030\003 \001(\014\022G\n\tfile_type\030\004"
  " \001(\01624.google.api.servicemanagement.v1.C"
  "onfigFile.FileType\"\223\001\n\010FileType\022\031\n\025FILE_"
  "TYPE_UNSPECIFIED\020\000\022\027\n\023SERVICE_CONFIG_YAM"
  "L\020\001\022\021\n\rOPEN_API_JSON\020\002\022\021\n\rOPEN_API_YAML\020"
  "\003\022\035\n\031FILE_DESCRIPTOR_SET_PROTO\020\004\022\016\n\nPROT"
  "O_FILE\020\006\"\031\n\tConfigRef\022\014\n\004name\030\001 \001(\t\"@\n\014C"
  "hangeReport\0220\n\016config_changes\030\001 \003(\0132\030.go"
  "ogle.api.ConfigChange\"\364\005\n\007Rollout\022\022\n\nrol"
  "lout_id\030\001 \001(\t\022/\n\013create_time\030\002 \001(\0132\032.goo"
  "gle.protobuf.Timestamp\022\022\n\ncreated_by\030\003 \001"
  "(\t\022F\n\006status\030\004 \001(\01626.google.api.servicem"
  "anagement.v1.Rollout.RolloutStatus\022c\n\030tr"
  "affic_percent_strategy\030\005 \001(\0132\?.google.ap"
  "i.servicemanagement.v1.Rollout.TrafficPe"
  "rcentStrategyH\000\022b\n\027delete_service_strate"
  "gy\030\310\001 \001(\0132>.google.api.servicemanagement"
  ".v1.Rollout.DeleteServiceStrategyH\000\022\024\n\014s"
  "ervice_name\030\010 \001(\t\032\263\001\n\026TrafficPercentStra"
  "tegy\022e\n\013percentages\030\001 \003(\0132P.google.api.s"
  "ervicemanagement.v1.Rollout.TrafficPerce"
  "ntStrategy.PercentagesEntry\0322\n\020Percentag"
  "esEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\001:\0028\001\032"
  "\027\n\025DeleteServiceStrategy\"\215\001\n\rRolloutStat"
  "us\022\036\n\032ROLLOUT_STATUS_UNSPECIFIED\020\000\022\017\n\013IN"
  "_PROGRESS\020\001\022\013\n\007SUCCESS\020\002\022\r\n\tCANCELLED\020\003\022"
  "\n\n\006FAILED\020\004\022\013\n\007PENDING\020\005\022\026\n\022FAILED_ROLLE"
  "D_BACK\020\006B\n\n\010strategyB\330\001\n#com.google.api."
  "servicemanagement.v1B\016ResourcesProtoP\001ZP"
  "google.golang.org/genproto/googleapis/ap"
  "i/servicemanagement/v1;servicemanagement"
  "\242\002\004GASM\252\002!Google.Cloud.ServiceManagement"
  ".V1\312\002!Google\\Cloud\\ServiceManagement\\V1b"
  "\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_deps[10] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fapi_2fconfig_5fchange_2eproto,
  &::descriptor_table_google_2fapi_2fmetric_2eproto,
  &::descriptor_table_google_2fapi_2fservice_2eproto,
  &::descriptor_table_google_2flongrunning_2foperations_2eproto,
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_google_2fprotobuf_2ffield_5fmask_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
  &::descriptor_table_google_2frpc_2fstatus_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_sccs[12] = {
  &scc_info_ChangeReport_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base,
  &scc_info_ConfigFile_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base,
  &scc_info_ConfigRef_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base,
  &scc_info_ConfigSource_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base,
  &scc_info_Diagnostic_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base,
  &scc_info_ManagedService_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base,
  &scc_info_OperationMetadata_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base,
  &scc_info_OperationMetadata_Step_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base,
  &scc_info_Rollout_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base,
  &scc_info_Rollout_DeleteServiceStrategy_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base,
  &scc_info_Rollout_TrafficPercentStrategy_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base,
  &scc_info_Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_once;
static bool descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto = {
  &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_initialized, descriptor_table_protodef_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto, "google/api/servicemanagement/v1/resources.proto", 2447,
  &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_once, descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_sccs, descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto_deps, 12, 10,
  schemas, file_default_instances, TableStruct_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto::offsets,
  file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto, 12, file_level_enum_descriptors_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto, file_level_service_descriptors_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto), true);
namespace google {
namespace api {
namespace servicemanagement {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* OperationMetadata_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto);
  return file_level_enum_descriptors_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[0];
}
bool OperationMetadata_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr OperationMetadata_Status OperationMetadata::STATUS_UNSPECIFIED;
constexpr OperationMetadata_Status OperationMetadata::DONE;
constexpr OperationMetadata_Status OperationMetadata::NOT_STARTED;
constexpr OperationMetadata_Status OperationMetadata::IN_PROGRESS;
constexpr OperationMetadata_Status OperationMetadata::FAILED;
constexpr OperationMetadata_Status OperationMetadata::CANCELLED;
constexpr OperationMetadata_Status OperationMetadata::Status_MIN;
constexpr OperationMetadata_Status OperationMetadata::Status_MAX;
constexpr int OperationMetadata::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Diagnostic_Kind_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto);
  return file_level_enum_descriptors_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[1];
}
bool Diagnostic_Kind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Diagnostic_Kind Diagnostic::WARNING;
constexpr Diagnostic_Kind Diagnostic::ERROR;
constexpr Diagnostic_Kind Diagnostic::Kind_MIN;
constexpr Diagnostic_Kind Diagnostic::Kind_MAX;
constexpr int Diagnostic::Kind_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ConfigFile_FileType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto);
  return file_level_enum_descriptors_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[2];
}
bool ConfigFile_FileType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ConfigFile_FileType ConfigFile::FILE_TYPE_UNSPECIFIED;
constexpr ConfigFile_FileType ConfigFile::SERVICE_CONFIG_YAML;
constexpr ConfigFile_FileType ConfigFile::OPEN_API_JSON;
constexpr ConfigFile_FileType ConfigFile::OPEN_API_YAML;
constexpr ConfigFile_FileType ConfigFile::FILE_DESCRIPTOR_SET_PROTO;
constexpr ConfigFile_FileType ConfigFile::PROTO_FILE;
constexpr ConfigFile_FileType ConfigFile::FileType_MIN;
constexpr ConfigFile_FileType ConfigFile::FileType_MAX;
constexpr int ConfigFile::FileType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Rollout_RolloutStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto);
  return file_level_enum_descriptors_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto[3];
}
bool Rollout_RolloutStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Rollout_RolloutStatus Rollout::ROLLOUT_STATUS_UNSPECIFIED;
constexpr Rollout_RolloutStatus Rollout::IN_PROGRESS;
constexpr Rollout_RolloutStatus Rollout::SUCCESS;
constexpr Rollout_RolloutStatus Rollout::CANCELLED;
constexpr Rollout_RolloutStatus Rollout::FAILED;
constexpr Rollout_RolloutStatus Rollout::PENDING;
constexpr Rollout_RolloutStatus Rollout::FAILED_ROLLED_BACK;
constexpr Rollout_RolloutStatus Rollout::RolloutStatus_MIN;
constexpr Rollout_RolloutStatus Rollout::RolloutStatus_MAX;
constexpr int Rollout::RolloutStatus_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void ManagedService::InitAsDefaultInstance() {
}
class ManagedService::_Internal {
 public:
};

ManagedService::ManagedService()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.ManagedService)
}
ManagedService::ManagedService(const ManagedService& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_service_name().empty()) {
    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  producer_project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_producer_project_id().empty()) {
    producer_project_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.producer_project_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ManagedService)
}

void ManagedService::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ManagedService_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  producer_project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ManagedService::~ManagedService() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ManagedService)
  SharedDtor();
}

void ManagedService::SharedDtor() {
  service_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  producer_project_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ManagedService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ManagedService& ManagedService::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ManagedService_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base);
  return *internal_default_instance();
}


void ManagedService::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ManagedService)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  producer_project_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* ManagedService::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string service_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_service_name(), ptr, ctx, "google.api.servicemanagement.v1.ManagedService.service_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string producer_project_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_producer_project_id(), ptr, ctx, "google.api.servicemanagement.v1.ManagedService.producer_project_id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ManagedService::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ManagedService)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 2;
  if (this->service_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ManagedService.service_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_service_name(), target);
  }

  // string producer_project_id = 3;
  if (this->producer_project_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_producer_project_id().data(), static_cast<int>(this->_internal_producer_project_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ManagedService.producer_project_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_producer_project_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ManagedService)
  return target;
}

size_t ManagedService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ManagedService)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 2;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // string producer_project_id = 3;
  if (this->producer_project_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_producer_project_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ManagedService::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.ManagedService)
  GOOGLE_DCHECK_NE(&from, this);
  const ManagedService* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ManagedService>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.ManagedService)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.ManagedService)
    MergeFrom(*source);
  }
}

void ManagedService::MergeFrom(const ManagedService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ManagedService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.producer_project_id().size() > 0) {

    producer_project_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.producer_project_id_);
  }
}

void ManagedService::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.ManagedService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManagedService::CopyFrom(const ManagedService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ManagedService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManagedService::IsInitialized() const {
  return true;
}

void ManagedService::InternalSwap(ManagedService* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  service_name_.Swap(&other->service_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  producer_project_id_.Swap(&other->producer_project_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ManagedService::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OperationMetadata_Step::InitAsDefaultInstance() {
}
class OperationMetadata_Step::_Internal {
 public:
};

OperationMetadata_Step::OperationMetadata_Step()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.OperationMetadata.Step)
}
OperationMetadata_Step::OperationMetadata_Step(const OperationMetadata_Step& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.OperationMetadata.Step)
}

void OperationMetadata_Step::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OperationMetadata_Step_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

OperationMetadata_Step::~OperationMetadata_Step() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.OperationMetadata.Step)
  SharedDtor();
}

void OperationMetadata_Step::SharedDtor() {
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OperationMetadata_Step::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OperationMetadata_Step& OperationMetadata_Step::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OperationMetadata_Step_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base);
  return *internal_default_instance();
}


void OperationMetadata_Step::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.OperationMetadata.Step)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  _internal_metadata_.Clear();
}

const char* OperationMetadata_Step::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_description(), ptr, ctx, "google.api.servicemanagement.v1.OperationMetadata.Step.description");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.servicemanagement.v1.OperationMetadata.Status status = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::google::api::servicemanagement::v1::OperationMetadata_Status>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OperationMetadata_Step::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.OperationMetadata.Step)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 2;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.OperationMetadata.Step.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // .google.api.servicemanagement.v1.OperationMetadata.Status status = 4;
  if (this->status() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.OperationMetadata.Step)
  return target;
}

size_t OperationMetadata_Step::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.OperationMetadata.Step)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .google.api.servicemanagement.v1.OperationMetadata.Status status = 4;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperationMetadata_Step::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.OperationMetadata.Step)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationMetadata_Step* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OperationMetadata_Step>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.OperationMetadata.Step)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.OperationMetadata.Step)
    MergeFrom(*source);
  }
}

void OperationMetadata_Step::MergeFrom(const OperationMetadata_Step& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.OperationMetadata.Step)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void OperationMetadata_Step::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.OperationMetadata.Step)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationMetadata_Step::CopyFrom(const OperationMetadata_Step& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.OperationMetadata.Step)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationMetadata_Step::IsInitialized() const {
  return true;
}

void OperationMetadata_Step::InternalSwap(OperationMetadata_Step* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OperationMetadata_Step::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OperationMetadata::InitAsDefaultInstance() {
  ::google::api::servicemanagement::v1::_OperationMetadata_default_instance_._instance.get_mutable()->start_time_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class OperationMetadata::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& start_time(const OperationMetadata* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
OperationMetadata::_Internal::start_time(const OperationMetadata* msg) {
  return *msg->start_time_;
}
void OperationMetadata::clear_start_time() {
  if (GetArenaNoVirtual() == nullptr && start_time_ != nullptr) {
    delete start_time_;
  }
  start_time_ = nullptr;
}
OperationMetadata::OperationMetadata()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.OperationMetadata)
}
OperationMetadata::OperationMetadata(const OperationMetadata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      resource_names_(from.resource_names_),
      steps_(from.steps_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_start_time()) {
    start_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.start_time_);
  } else {
    start_time_ = nullptr;
  }
  progress_percentage_ = from.progress_percentage_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.OperationMetadata)
}

void OperationMetadata::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OperationMetadata_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base);
  ::memset(&start_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_percentage_) -
      reinterpret_cast<char*>(&start_time_)) + sizeof(progress_percentage_));
}

OperationMetadata::~OperationMetadata() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.OperationMetadata)
  SharedDtor();
}

void OperationMetadata::SharedDtor() {
  if (this != internal_default_instance()) delete start_time_;
}

void OperationMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OperationMetadata& OperationMetadata::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OperationMetadata_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base);
  return *internal_default_instance();
}


void OperationMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.OperationMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resource_names_.Clear();
  steps_.Clear();
  if (GetArenaNoVirtual() == nullptr && start_time_ != nullptr) {
    delete start_time_;
  }
  start_time_ = nullptr;
  progress_percentage_ = 0;
  _internal_metadata_.Clear();
}

const char* OperationMetadata::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string resource_names = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_add_resource_names(), ptr, ctx, "google.api.servicemanagement.v1.OperationMetadata.resource_names");
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .google.api.servicemanagement.v1.OperationMetadata.Step steps = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_steps(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 progress_percentage = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          progress_percentage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp start_time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_start_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OperationMetadata::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.OperationMetadata)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string resource_names = 1;
  for (int i = 0, n = this->_internal_resource_names_size(); i < n; i++) {
    const auto& s = this->_internal_resource_names(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.OperationMetadata.resource_names");
    target = stream->WriteString(1, s, target);
  }

  // repeated .google.api.servicemanagement.v1.OperationMetadata.Step steps = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_steps_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(2, this->_internal_steps(i), target, stream);
  }

  // int32 progress_percentage = 3;
  if (this->progress_percentage() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_progress_percentage(), target);
  }

  // .google.protobuf.Timestamp start_time = 4;
  if (this->has_start_time()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::start_time(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.OperationMetadata)
  return target;
}

size_t OperationMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.OperationMetadata)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string resource_names = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(resource_names_.size());
  for (int i = 0, n = resource_names_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      resource_names_.Get(i));
  }

  // repeated .google.api.servicemanagement.v1.OperationMetadata.Step steps = 2;
  total_size += 1UL * this->_internal_steps_size();
  for (const auto& msg : this->steps_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .google.protobuf.Timestamp start_time = 4;
  if (this->has_start_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *start_time_);
  }

  // int32 progress_percentage = 3;
  if (this->progress_percentage() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_progress_percentage());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OperationMetadata::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.OperationMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const OperationMetadata* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OperationMetadata>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.OperationMetadata)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.OperationMetadata)
    MergeFrom(*source);
  }
}

void OperationMetadata::MergeFrom(const OperationMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.OperationMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resource_names_.MergeFrom(from.resource_names_);
  steps_.MergeFrom(from.steps_);
  if (from.has_start_time()) {
    _internal_mutable_start_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_start_time());
  }
  if (from.progress_percentage() != 0) {
    _internal_set_progress_percentage(from._internal_progress_percentage());
  }
}

void OperationMetadata::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.OperationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationMetadata::CopyFrom(const OperationMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.OperationMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationMetadata::IsInitialized() const {
  return true;
}

void OperationMetadata::InternalSwap(OperationMetadata* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  resource_names_.InternalSwap(&other->resource_names_);
  steps_.InternalSwap(&other->steps_);
  swap(start_time_, other->start_time_);
  swap(progress_percentage_, other->progress_percentage_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OperationMetadata::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Diagnostic::InitAsDefaultInstance() {
}
class Diagnostic::_Internal {
 public:
};

Diagnostic::Diagnostic()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.Diagnostic)
}
Diagnostic::Diagnostic(const Diagnostic& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_location().empty()) {
    location_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  kind_ = from.kind_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.Diagnostic)
}

void Diagnostic::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Diagnostic_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base);
  location_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  kind_ = 0;
}

Diagnostic::~Diagnostic() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.Diagnostic)
  SharedDtor();
}

void Diagnostic::SharedDtor() {
  location_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Diagnostic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Diagnostic& Diagnostic::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Diagnostic_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base);
  return *internal_default_instance();
}


void Diagnostic::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.Diagnostic)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  kind_ = 0;
  _internal_metadata_.Clear();
}

const char* Diagnostic::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string location = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_location(), ptr, ctx, "google.api.servicemanagement.v1.Diagnostic.location");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.servicemanagement.v1.Diagnostic.Kind kind = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_kind(static_cast<::google::api::servicemanagement::v1::Diagnostic_Kind>(val));
        } else goto handle_unusual;
        continue;
      // string message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_message(), ptr, ctx, "google.api.servicemanagement.v1.Diagnostic.message");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Diagnostic::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.Diagnostic)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string location = 1;
  if (this->location().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_location().data(), static_cast<int>(this->_internal_location().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.Diagnostic.location");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_location(), target);
  }

  // .google.api.servicemanagement.v1.Diagnostic.Kind kind = 2;
  if (this->kind() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_kind(), target);
  }

  // string message = 3;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.Diagnostic.message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.Diagnostic)
  return target;
}

size_t Diagnostic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.Diagnostic)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string location = 1;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_location());
  }

  // string message = 3;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // .google.api.servicemanagement.v1.Diagnostic.Kind kind = 2;
  if (this->kind() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_kind());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Diagnostic::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.Diagnostic)
  GOOGLE_DCHECK_NE(&from, this);
  const Diagnostic* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Diagnostic>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.Diagnostic)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.Diagnostic)
    MergeFrom(*source);
  }
}

void Diagnostic::MergeFrom(const Diagnostic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.Diagnostic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.location().size() > 0) {

    location_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.kind() != 0) {
    _internal_set_kind(from._internal_kind());
  }
}

void Diagnostic::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.Diagnostic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Diagnostic::CopyFrom(const Diagnostic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.Diagnostic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Diagnostic::IsInitialized() const {
  return true;
}

void Diagnostic::InternalSwap(Diagnostic* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  location_.Swap(&other->location_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(kind_, other->kind_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Diagnostic::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConfigSource::InitAsDefaultInstance() {
}
class ConfigSource::_Internal {
 public:
};

ConfigSource::ConfigSource()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.ConfigSource)
}
ConfigSource::ConfigSource(const ConfigSource& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      files_(from.files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ConfigSource)
}

void ConfigSource::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConfigSource_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ConfigSource::~ConfigSource() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ConfigSource)
  SharedDtor();
}

void ConfigSource::SharedDtor() {
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ConfigSource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConfigSource& ConfigSource::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConfigSource_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base);
  return *internal_default_instance();
}


void ConfigSource::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ConfigSource)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  files_.Clear();
  id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* ConfigSource::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .google.api.servicemanagement.v1.ConfigFile files = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_files(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // string id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_id(), ptr, ctx, "google.api.servicemanagement.v1.ConfigSource.id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConfigSource::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ConfigSource)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.servicemanagement.v1.ConfigFile files = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_files_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(2, this->_internal_files(i), target, stream);
  }

  // string id = 5;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ConfigSource.id");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ConfigSource)
  return target;
}

size_t ConfigSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ConfigSource)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.servicemanagement.v1.ConfigFile files = 2;
  total_size += 1UL * this->_internal_files_size();
  for (const auto& msg : this->files_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string id = 5;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigSource::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.ConfigSource)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigSource* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConfigSource>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.ConfigSource)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.ConfigSource)
    MergeFrom(*source);
  }
}

void ConfigSource::MergeFrom(const ConfigSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ConfigSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  files_.MergeFrom(from.files_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void ConfigSource::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.ConfigSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigSource::CopyFrom(const ConfigSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ConfigSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigSource::IsInitialized() const {
  return true;
}

void ConfigSource::InternalSwap(ConfigSource* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  files_.InternalSwap(&other->files_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigSource::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConfigFile::InitAsDefaultInstance() {
}
class ConfigFile::_Internal {
 public:
};

ConfigFile::ConfigFile()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.ConfigFile)
}
ConfigFile::ConfigFile(const ConfigFile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_file_path().empty()) {
    file_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_path_);
  }
  file_contents_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_file_contents().empty()) {
    file_contents_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_contents_);
  }
  file_type_ = from.file_type_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ConfigFile)
}

void ConfigFile::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConfigFile_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base);
  file_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  file_contents_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  file_type_ = 0;
}

ConfigFile::~ConfigFile() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ConfigFile)
  SharedDtor();
}

void ConfigFile::SharedDtor() {
  file_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  file_contents_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ConfigFile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConfigFile& ConfigFile::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConfigFile_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base);
  return *internal_default_instance();
}


void ConfigFile::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ConfigFile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  file_contents_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  file_type_ = 0;
  _internal_metadata_.Clear();
}

const char* ConfigFile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string file_path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_file_path(), ptr, ctx, "google.api.servicemanagement.v1.ConfigFile.file_path");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes file_contents = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(_internal_mutable_file_contents(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.servicemanagement.v1.ConfigFile.FileType file_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_file_type(static_cast<::google::api::servicemanagement::v1::ConfigFile_FileType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConfigFile::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ConfigFile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file_path = 1;
  if (this->file_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_file_path().data(), static_cast<int>(this->_internal_file_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ConfigFile.file_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_file_path(), target);
  }

  // bytes file_contents = 3;
  if (this->file_contents().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_file_contents(), target);
  }

  // .google.api.servicemanagement.v1.ConfigFile.FileType file_type = 4;
  if (this->file_type() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_file_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ConfigFile)
  return target;
}

size_t ConfigFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ConfigFile)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string file_path = 1;
  if (this->file_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_file_path());
  }

  // bytes file_contents = 3;
  if (this->file_contents().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_file_contents());
  }

  // .google.api.servicemanagement.v1.ConfigFile.FileType file_type = 4;
  if (this->file_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_file_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigFile::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.ConfigFile)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigFile* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConfigFile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.ConfigFile)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.ConfigFile)
    MergeFrom(*source);
  }
}

void ConfigFile::MergeFrom(const ConfigFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ConfigFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.file_path().size() > 0) {

    file_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_path_);
  }
  if (from.file_contents().size() > 0) {

    file_contents_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.file_contents_);
  }
  if (from.file_type() != 0) {
    _internal_set_file_type(from._internal_file_type());
  }
}

void ConfigFile::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.ConfigFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigFile::CopyFrom(const ConfigFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ConfigFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigFile::IsInitialized() const {
  return true;
}

void ConfigFile::InternalSwap(ConfigFile* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  file_path_.Swap(&other->file_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_contents_.Swap(&other->file_contents_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(file_type_, other->file_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigFile::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConfigRef::InitAsDefaultInstance() {
}
class ConfigRef::_Internal {
 public:
};

ConfigRef::ConfigRef()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.ConfigRef)
}
ConfigRef::ConfigRef(const ConfigRef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ConfigRef)
}

void ConfigRef::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConfigRef_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ConfigRef::~ConfigRef() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ConfigRef)
  SharedDtor();
}

void ConfigRef::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ConfigRef::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConfigRef& ConfigRef::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConfigRef_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base);
  return *internal_default_instance();
}


void ConfigRef::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ConfigRef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* ConfigRef::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_name(), ptr, ctx, "google.api.servicemanagement.v1.ConfigRef.name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConfigRef::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ConfigRef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ConfigRef.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ConfigRef)
  return target;
}

size_t ConfigRef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ConfigRef)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigRef::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.ConfigRef)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigRef* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConfigRef>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.ConfigRef)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.ConfigRef)
    MergeFrom(*source);
  }
}

void ConfigRef::MergeFrom(const ConfigRef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ConfigRef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void ConfigRef::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.ConfigRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigRef::CopyFrom(const ConfigRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ConfigRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigRef::IsInitialized() const {
  return true;
}

void ConfigRef::InternalSwap(ConfigRef* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigRef::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ChangeReport::InitAsDefaultInstance() {
}
class ChangeReport::_Internal {
 public:
};

void ChangeReport::clear_config_changes() {
  config_changes_.Clear();
}
ChangeReport::ChangeReport()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.ChangeReport)
}
ChangeReport::ChangeReport(const ChangeReport& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      config_changes_(from.config_changes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ChangeReport)
}

void ChangeReport::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ChangeReport_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base);
}

ChangeReport::~ChangeReport() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ChangeReport)
  SharedDtor();
}

void ChangeReport::SharedDtor() {
}

void ChangeReport::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChangeReport& ChangeReport::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChangeReport_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base);
  return *internal_default_instance();
}


void ChangeReport::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ChangeReport)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  config_changes_.Clear();
  _internal_metadata_.Clear();
}

const char* ChangeReport::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .google.api.ConfigChange config_changes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_config_changes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChangeReport::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ChangeReport)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.ConfigChange config_changes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_config_changes_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(1, this->_internal_config_changes(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ChangeReport)
  return target;
}

size_t ChangeReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ChangeReport)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.ConfigChange config_changes = 1;
  total_size += 1UL * this->_internal_config_changes_size();
  for (const auto& msg : this->config_changes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChangeReport::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.ChangeReport)
  GOOGLE_DCHECK_NE(&from, this);
  const ChangeReport* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChangeReport>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.ChangeReport)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.ChangeReport)
    MergeFrom(*source);
  }
}

void ChangeReport::MergeFrom(const ChangeReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ChangeReport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  config_changes_.MergeFrom(from.config_changes_);
}

void ChangeReport::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.ChangeReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeReport::CopyFrom(const ChangeReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ChangeReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeReport::IsInitialized() const {
  return true;
}

void ChangeReport::InternalSwap(ChangeReport* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  config_changes_.InternalSwap(&other->config_changes_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ChangeReport::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse::Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse() {}
Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse::Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse::MergeFrom(const Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void Rollout_TrafficPercentStrategy::InitAsDefaultInstance() {
}
class Rollout_TrafficPercentStrategy::_Internal {
 public:
};

Rollout_TrafficPercentStrategy::Rollout_TrafficPercentStrategy()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
}
Rollout_TrafficPercentStrategy::Rollout_TrafficPercentStrategy(const Rollout_TrafficPercentStrategy& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  percentages_.MergeFrom(from.percentages_);
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
}

void Rollout_TrafficPercentStrategy::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Rollout_TrafficPercentStrategy_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base);
}

Rollout_TrafficPercentStrategy::~Rollout_TrafficPercentStrategy() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
  SharedDtor();
}

void Rollout_TrafficPercentStrategy::SharedDtor() {
}

void Rollout_TrafficPercentStrategy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rollout_TrafficPercentStrategy& Rollout_TrafficPercentStrategy::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Rollout_TrafficPercentStrategy_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base);
  return *internal_default_instance();
}


void Rollout_TrafficPercentStrategy::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  percentages_.Clear();
  _internal_metadata_.Clear();
}

const char* Rollout_TrafficPercentStrategy::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, double> percentages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&percentages_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Rollout_TrafficPercentStrategy::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, double> percentages = 1;
  if (!this->_internal_percentages().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy.PercentagesEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_percentages().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_percentages().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, double >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, double >::const_iterator
          it = this->_internal_percentages().begin();
          it != this->_internal_percentages().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, double >::const_iterator
          it = this->_internal_percentages().begin();
          it != this->_internal_percentages().end(); ++it) {
        target = Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
  return target;
}

size_t Rollout_TrafficPercentStrategy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, double> percentages = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_percentages_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, double >::const_iterator
      it = this->_internal_percentages().begin();
      it != this->_internal_percentages().end(); ++it) {
    total_size += Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rollout_TrafficPercentStrategy::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
  GOOGLE_DCHECK_NE(&from, this);
  const Rollout_TrafficPercentStrategy* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Rollout_TrafficPercentStrategy>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
    MergeFrom(*source);
  }
}

void Rollout_TrafficPercentStrategy::MergeFrom(const Rollout_TrafficPercentStrategy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  percentages_.MergeFrom(from.percentages_);
}

void Rollout_TrafficPercentStrategy::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rollout_TrafficPercentStrategy::CopyFrom(const Rollout_TrafficPercentStrategy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rollout_TrafficPercentStrategy::IsInitialized() const {
  return true;
}

void Rollout_TrafficPercentStrategy::InternalSwap(Rollout_TrafficPercentStrategy* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  percentages_.Swap(&other->percentages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Rollout_TrafficPercentStrategy::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Rollout_DeleteServiceStrategy::InitAsDefaultInstance() {
}
class Rollout_DeleteServiceStrategy::_Internal {
 public:
};

Rollout_DeleteServiceStrategy::Rollout_DeleteServiceStrategy()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
}
Rollout_DeleteServiceStrategy::Rollout_DeleteServiceStrategy(const Rollout_DeleteServiceStrategy& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
}

void Rollout_DeleteServiceStrategy::SharedCtor() {
}

Rollout_DeleteServiceStrategy::~Rollout_DeleteServiceStrategy() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
  SharedDtor();
}

void Rollout_DeleteServiceStrategy::SharedDtor() {
}

void Rollout_DeleteServiceStrategy::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rollout_DeleteServiceStrategy& Rollout_DeleteServiceStrategy::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Rollout_DeleteServiceStrategy_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base);
  return *internal_default_instance();
}


void Rollout_DeleteServiceStrategy::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Rollout_DeleteServiceStrategy::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Rollout_DeleteServiceStrategy::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
  return target;
}

size_t Rollout_DeleteServiceStrategy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rollout_DeleteServiceStrategy::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
  GOOGLE_DCHECK_NE(&from, this);
  const Rollout_DeleteServiceStrategy* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Rollout_DeleteServiceStrategy>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
    MergeFrom(*source);
  }
}

void Rollout_DeleteServiceStrategy::MergeFrom(const Rollout_DeleteServiceStrategy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Rollout_DeleteServiceStrategy::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rollout_DeleteServiceStrategy::CopyFrom(const Rollout_DeleteServiceStrategy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rollout_DeleteServiceStrategy::IsInitialized() const {
  return true;
}

void Rollout_DeleteServiceStrategy::InternalSwap(Rollout_DeleteServiceStrategy* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Rollout_DeleteServiceStrategy::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Rollout::InitAsDefaultInstance() {
  ::google::api::servicemanagement::v1::_Rollout_default_instance_._instance.get_mutable()->create_time_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::google::api::servicemanagement::v1::_Rollout_default_instance_.traffic_percent_strategy_ = const_cast< ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy*>(
      ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy::internal_default_instance());
  ::google::api::servicemanagement::v1::_Rollout_default_instance_.delete_service_strategy_ = const_cast< ::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy*>(
      ::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy::internal_default_instance());
}
class Rollout::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& create_time(const Rollout* msg);
  static const ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy& traffic_percent_strategy(const Rollout* msg);
  static const ::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy& delete_service_strategy(const Rollout* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
Rollout::_Internal::create_time(const Rollout* msg) {
  return *msg->create_time_;
}
const ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy&
Rollout::_Internal::traffic_percent_strategy(const Rollout* msg) {
  return *msg->strategy_.traffic_percent_strategy_;
}
const ::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy&
Rollout::_Internal::delete_service_strategy(const Rollout* msg) {
  return *msg->strategy_.delete_service_strategy_;
}
void Rollout::clear_create_time() {
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
}
void Rollout::set_allocated_traffic_percent_strategy(::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy* traffic_percent_strategy) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_strategy();
  if (traffic_percent_strategy) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      traffic_percent_strategy = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, traffic_percent_strategy, submessage_arena);
    }
    set_has_traffic_percent_strategy();
    strategy_.traffic_percent_strategy_ = traffic_percent_strategy;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.Rollout.traffic_percent_strategy)
}
void Rollout::set_allocated_delete_service_strategy(::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy* delete_service_strategy) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_strategy();
  if (delete_service_strategy) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      delete_service_strategy = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, delete_service_strategy, submessage_arena);
    }
    set_has_delete_service_strategy();
    strategy_.delete_service_strategy_ = delete_service_strategy;
  }
  // @@protoc_insertion_point(field_set_allocated:google.api.servicemanagement.v1.Rollout.delete_service_strategy)
}
Rollout::Rollout()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.Rollout)
}
Rollout::Rollout(const Rollout& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rollout_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rollout_id().empty()) {
    rollout_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.rollout_id_);
  }
  created_by_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_created_by().empty()) {
    created_by_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.created_by_);
  }
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_service_name().empty()) {
    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from._internal_has_create_time()) {
    create_time_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.create_time_);
  } else {
    create_time_ = nullptr;
  }
  status_ = from.status_;
  clear_has_strategy();
  switch (from.strategy_case()) {
    case kTrafficPercentStrategy: {
      _internal_mutable_traffic_percent_strategy()->::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy::MergeFrom(from._internal_traffic_percent_strategy());
      break;
    }
    case kDeleteServiceStrategy: {
      _internal_mutable_delete_service_strategy()->::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy::MergeFrom(from._internal_delete_service_strategy());
      break;
    }
    case STRATEGY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.Rollout)
}

void Rollout::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Rollout_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base);
  rollout_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  created_by_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&create_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&create_time_)) + sizeof(status_));
  clear_has_strategy();
}

Rollout::~Rollout() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.Rollout)
  SharedDtor();
}

void Rollout::SharedDtor() {
  rollout_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  created_by_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  service_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete create_time_;
  if (has_strategy()) {
    clear_strategy();
  }
}

void Rollout::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rollout& Rollout::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Rollout_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base);
  return *internal_default_instance();
}


void Rollout::clear_strategy() {
// @@protoc_insertion_point(one_of_clear_start:google.api.servicemanagement.v1.Rollout)
  switch (strategy_case()) {
    case kTrafficPercentStrategy: {
      delete strategy_.traffic_percent_strategy_;
      break;
    }
    case kDeleteServiceStrategy: {
      delete strategy_.delete_service_strategy_;
      break;
    }
    case STRATEGY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = STRATEGY_NOT_SET;
}


void Rollout::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.Rollout)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rollout_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  created_by_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  service_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && create_time_ != nullptr) {
    delete create_time_;
  }
  create_time_ = nullptr;
  status_ = 0;
  clear_strategy();
  _internal_metadata_.Clear();
}

const char* Rollout::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string rollout_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_rollout_id(), ptr, ctx, "google.api.servicemanagement.v1.Rollout.rollout_id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp create_time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_create_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string created_by = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_created_by(), ptr, ctx, "google.api.servicemanagement.v1.Rollout.created_by");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::google::api::servicemanagement::v1::Rollout_RolloutStatus>(val));
        } else goto handle_unusual;
        continue;
      // .google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_traffic_percent_strategy(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string service_name = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_service_name(), ptr, ctx, "google.api.servicemanagement.v1.Rollout.service_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;
      case 200:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_delete_service_strategy(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Rollout::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.Rollout)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string rollout_id = 1;
  if (this->rollout_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rollout_id().data(), static_cast<int>(this->_internal_rollout_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.Rollout.rollout_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_rollout_id(), target);
  }

  // .google.protobuf.Timestamp create_time = 2;
  if (this->has_create_time()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::create_time(this), target, stream);
  }

  // string created_by = 3;
  if (this->created_by().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_created_by().data(), static_cast<int>(this->_internal_created_by().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.Rollout.created_by");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_created_by(), target);
  }

  // .google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4;
  if (this->status() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_status(), target);
  }

  // .google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;
  if (_internal_has_traffic_percent_strategy()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::traffic_percent_strategy(this), target, stream);
  }

  // string service_name = 8;
  if (this->service_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.Rollout.service_name");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_service_name(), target);
  }

  // .google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;
  if (_internal_has_delete_service_strategy()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        200, _Internal::delete_service_strategy(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.Rollout)
  return target;
}

size_t Rollout::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.Rollout)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rollout_id = 1;
  if (this->rollout_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rollout_id());
  }

  // string created_by = 3;
  if (this->created_by().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_created_by());
  }

  // string service_name = 8;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // .google.protobuf.Timestamp create_time = 2;
  if (this->has_create_time()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *create_time_);
  }

  // .google.api.servicemanagement.v1.Rollout.RolloutStatus status = 4;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  switch (strategy_case()) {
    // .google.api.servicemanagement.v1.Rollout.TrafficPercentStrategy traffic_percent_strategy = 5;
    case kTrafficPercentStrategy: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *strategy_.traffic_percent_strategy_);
      break;
    }
    // .google.api.servicemanagement.v1.Rollout.DeleteServiceStrategy delete_service_strategy = 200;
    case kDeleteServiceStrategy: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *strategy_.delete_service_strategy_);
      break;
    }
    case STRATEGY_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rollout::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.Rollout)
  GOOGLE_DCHECK_NE(&from, this);
  const Rollout* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Rollout>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.Rollout)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.Rollout)
    MergeFrom(*source);
  }
}

void Rollout::MergeFrom(const Rollout& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.Rollout)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rollout_id().size() > 0) {

    rollout_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.rollout_id_);
  }
  if (from.created_by().size() > 0) {

    created_by_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.created_by_);
  }
  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.has_create_time()) {
    _internal_mutable_create_time()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_create_time());
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
  switch (from.strategy_case()) {
    case kTrafficPercentStrategy: {
      _internal_mutable_traffic_percent_strategy()->::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy::MergeFrom(from._internal_traffic_percent_strategy());
      break;
    }
    case kDeleteServiceStrategy: {
      _internal_mutable_delete_service_strategy()->::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy::MergeFrom(from._internal_delete_service_strategy());
      break;
    }
    case STRATEGY_NOT_SET: {
      break;
    }
  }
}

void Rollout::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.Rollout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rollout::CopyFrom(const Rollout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.Rollout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rollout::IsInitialized() const {
  return true;
}

void Rollout::InternalSwap(Rollout* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  rollout_id_.Swap(&other->rollout_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  created_by_.Swap(&other->created_by_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  service_name_.Swap(&other->service_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(create_time_, other->create_time_);
  swap(status_, other->status_);
  swap(strategy_, other->strategy_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Rollout::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace servicemanagement
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::ManagedService* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::ManagedService >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::ManagedService >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::OperationMetadata_Step* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::OperationMetadata_Step >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::OperationMetadata_Step >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::OperationMetadata* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::OperationMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::OperationMetadata >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::Diagnostic* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::Diagnostic >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::Diagnostic >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::ConfigSource* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::ConfigSource >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::ConfigSource >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::ConfigFile* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::ConfigFile >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::ConfigFile >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::ConfigRef* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::ConfigRef >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::ConfigRef >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::ChangeReport* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::ChangeReport >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::ChangeReport >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy_PercentagesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::Rollout_TrafficPercentStrategy >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::Rollout_DeleteServiceStrategy >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::Rollout* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::Rollout >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::Rollout >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
