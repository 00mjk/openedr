// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/servicemanagement/v1/servicemanager.proto

#include "google/api/servicemanagement/v1/servicemanager.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fservice_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<21> scc_info_Service_google_2fapi_2fservice_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ChangeReport_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ConfigSource_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Diagnostic_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ManagedService_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Rollout_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fany_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Any_google_2fprotobuf_2fany_2eproto;
namespace google {
namespace api {
namespace servicemanagement {
namespace v1 {
class ListServicesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListServicesRequest> _instance;
} _ListServicesRequest_default_instance_;
class ListServicesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListServicesResponse> _instance;
} _ListServicesResponse_default_instance_;
class GetServiceRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetServiceRequest> _instance;
} _GetServiceRequest_default_instance_;
class CreateServiceRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateServiceRequest> _instance;
} _CreateServiceRequest_default_instance_;
class DeleteServiceRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteServiceRequest> _instance;
} _DeleteServiceRequest_default_instance_;
class UndeleteServiceRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UndeleteServiceRequest> _instance;
} _UndeleteServiceRequest_default_instance_;
class UndeleteServiceResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UndeleteServiceResponse> _instance;
} _UndeleteServiceResponse_default_instance_;
class GetServiceConfigRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetServiceConfigRequest> _instance;
} _GetServiceConfigRequest_default_instance_;
class ListServiceConfigsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListServiceConfigsRequest> _instance;
} _ListServiceConfigsRequest_default_instance_;
class ListServiceConfigsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListServiceConfigsResponse> _instance;
} _ListServiceConfigsResponse_default_instance_;
class CreateServiceConfigRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateServiceConfigRequest> _instance;
} _CreateServiceConfigRequest_default_instance_;
class SubmitConfigSourceRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubmitConfigSourceRequest> _instance;
} _SubmitConfigSourceRequest_default_instance_;
class SubmitConfigSourceResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SubmitConfigSourceResponse> _instance;
} _SubmitConfigSourceResponse_default_instance_;
class CreateServiceRolloutRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateServiceRolloutRequest> _instance;
} _CreateServiceRolloutRequest_default_instance_;
class ListServiceRolloutsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListServiceRolloutsRequest> _instance;
} _ListServiceRolloutsRequest_default_instance_;
class ListServiceRolloutsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListServiceRolloutsResponse> _instance;
} _ListServiceRolloutsResponse_default_instance_;
class GetServiceRolloutRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetServiceRolloutRequest> _instance;
} _GetServiceRolloutRequest_default_instance_;
class EnableServiceRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EnableServiceRequest> _instance;
} _EnableServiceRequest_default_instance_;
class DisableServiceRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DisableServiceRequest> _instance;
} _DisableServiceRequest_default_instance_;
class GenerateConfigReportRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GenerateConfigReportRequest> _instance;
} _GenerateConfigReportRequest_default_instance_;
class GenerateConfigReportResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GenerateConfigReportResponse> _instance;
} _GenerateConfigReportResponse_default_instance_;
}  // namespace v1
}  // namespace servicemanagement
}  // namespace api
}  // namespace google
static void InitDefaultsscc_info_CreateServiceConfigRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_CreateServiceConfigRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::CreateServiceConfigRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::CreateServiceConfigRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateServiceConfigRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateServiceConfigRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto}, {
      &scc_info_Service_google_2fapi_2fservice_2eproto.base,}};

static void InitDefaultsscc_info_CreateServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_CreateServiceRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::CreateServiceRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::CreateServiceRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto}, {
      &scc_info_ManagedService_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base,}};

static void InitDefaultsscc_info_CreateServiceRolloutRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_CreateServiceRolloutRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::CreateServiceRolloutRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::CreateServiceRolloutRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateServiceRolloutRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateServiceRolloutRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto}, {
      &scc_info_Rollout_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base,}};

static void InitDefaultsscc_info_DeleteServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_DeleteServiceRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::DeleteServiceRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::DeleteServiceRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto}, {}};

static void InitDefaultsscc_info_DisableServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_DisableServiceRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::DisableServiceRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::DisableServiceRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DisableServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DisableServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto}, {}};

static void InitDefaultsscc_info_EnableServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_EnableServiceRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::EnableServiceRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::EnableServiceRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EnableServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EnableServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto}, {}};

static void InitDefaultsscc_info_GenerateConfigReportRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_GenerateConfigReportRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::GenerateConfigReportRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::GenerateConfigReportRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GenerateConfigReportRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GenerateConfigReportRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsscc_info_GenerateConfigReportResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_GenerateConfigReportResponse_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::GenerateConfigReportResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::GenerateConfigReportResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GenerateConfigReportResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GenerateConfigReportResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto}, {
      &scc_info_ChangeReport_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base,
      &scc_info_Diagnostic_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base,}};

static void InitDefaultsscc_info_GetServiceConfigRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_GetServiceConfigRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::GetServiceConfigRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::GetServiceConfigRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetServiceConfigRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetServiceConfigRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto}, {}};

static void InitDefaultsscc_info_GetServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_GetServiceRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::GetServiceRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::GetServiceRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto}, {}};

static void InitDefaultsscc_info_GetServiceRolloutRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_GetServiceRolloutRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::GetServiceRolloutRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::GetServiceRolloutRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetServiceRolloutRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetServiceRolloutRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto}, {}};

static void InitDefaultsscc_info_ListServiceConfigsRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_ListServiceConfigsRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::ListServiceConfigsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::ListServiceConfigsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListServiceConfigsRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListServiceConfigsRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto}, {}};

static void InitDefaultsscc_info_ListServiceConfigsResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_ListServiceConfigsResponse_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::ListServiceConfigsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::ListServiceConfigsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListServiceConfigsResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListServiceConfigsResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto}, {
      &scc_info_Service_google_2fapi_2fservice_2eproto.base,}};

static void InitDefaultsscc_info_ListServiceRolloutsRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_ListServiceRolloutsRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::ListServiceRolloutsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::ListServiceRolloutsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListServiceRolloutsRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListServiceRolloutsRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto}, {}};

static void InitDefaultsscc_info_ListServiceRolloutsResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_ListServiceRolloutsResponse_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::ListServiceRolloutsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::ListServiceRolloutsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListServiceRolloutsResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListServiceRolloutsResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto}, {
      &scc_info_Rollout_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base,}};

static void InitDefaultsscc_info_ListServicesRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_ListServicesRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::ListServicesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::ListServicesRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListServicesRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListServicesRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto}, {}};

static void InitDefaultsscc_info_ListServicesResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_ListServicesResponse_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::ListServicesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::ListServicesResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListServicesResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListServicesResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto}, {
      &scc_info_ManagedService_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base,}};

static void InitDefaultsscc_info_SubmitConfigSourceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_SubmitConfigSourceRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::SubmitConfigSourceRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::SubmitConfigSourceRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SubmitConfigSourceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SubmitConfigSourceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto}, {
      &scc_info_ConfigSource_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base,}};

static void InitDefaultsscc_info_SubmitConfigSourceResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_SubmitConfigSourceResponse_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::SubmitConfigSourceResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::SubmitConfigSourceResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SubmitConfigSourceResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SubmitConfigSourceResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto}, {
      &scc_info_Service_google_2fapi_2fservice_2eproto.base,}};

static void InitDefaultsscc_info_UndeleteServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_UndeleteServiceRequest_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::UndeleteServiceRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::UndeleteServiceRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UndeleteServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UndeleteServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto}, {}};

static void InitDefaultsscc_info_UndeleteServiceResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::api::servicemanagement::v1::_UndeleteServiceResponse_default_instance_;
    new (ptr) ::google::api::servicemanagement::v1::UndeleteServiceResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::api::servicemanagement::v1::UndeleteServiceResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_UndeleteServiceResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_UndeleteServiceResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto}, {
      &scc_info_ManagedService_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[21];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServicesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServicesRequest, producer_project_id_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServicesRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServicesRequest, page_token_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServicesRequest, consumer_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServicesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServicesResponse, services_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServicesResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceRequest, service_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::CreateServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::CreateServiceRequest, service_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::DeleteServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::DeleteServiceRequest, service_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::UndeleteServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::UndeleteServiceRequest, service_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::UndeleteServiceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::UndeleteServiceResponse, service_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceConfigRequest, service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceConfigRequest, config_id_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceConfigRequest, view_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceConfigsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceConfigsRequest, service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceConfigsRequest, page_token_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceConfigsRequest, page_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceConfigsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceConfigsResponse, service_configs_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceConfigsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::CreateServiceConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::CreateServiceConfigRequest, service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::CreateServiceConfigRequest, service_config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::SubmitConfigSourceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::SubmitConfigSourceRequest, service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::SubmitConfigSourceRequest, config_source_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::SubmitConfigSourceRequest, validate_only_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::SubmitConfigSourceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::SubmitConfigSourceResponse, service_config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::CreateServiceRolloutRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::CreateServiceRolloutRequest, service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::CreateServiceRolloutRequest, rollout_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceRolloutsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceRolloutsRequest, service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceRolloutsRequest, page_token_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceRolloutsRequest, page_size_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceRolloutsRequest, filter_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceRolloutsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceRolloutsResponse, rollouts_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::ListServiceRolloutsResponse, next_page_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceRolloutRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceRolloutRequest, service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GetServiceRolloutRequest, rollout_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::EnableServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::EnableServiceRequest, service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::EnableServiceRequest, consumer_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::DisableServiceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::DisableServiceRequest, service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::DisableServiceRequest, consumer_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GenerateConfigReportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GenerateConfigReportRequest, new_config_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GenerateConfigReportRequest, old_config_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GenerateConfigReportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GenerateConfigReportResponse, service_name_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GenerateConfigReportResponse, id_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GenerateConfigReportResponse, change_reports_),
  PROTOBUF_FIELD_OFFSET(::google::api::servicemanagement::v1::GenerateConfigReportResponse, diagnostics_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::api::servicemanagement::v1::ListServicesRequest)},
  { 9, -1, sizeof(::google::api::servicemanagement::v1::ListServicesResponse)},
  { 16, -1, sizeof(::google::api::servicemanagement::v1::GetServiceRequest)},
  { 22, -1, sizeof(::google::api::servicemanagement::v1::CreateServiceRequest)},
  { 28, -1, sizeof(::google::api::servicemanagement::v1::DeleteServiceRequest)},
  { 34, -1, sizeof(::google::api::servicemanagement::v1::UndeleteServiceRequest)},
  { 40, -1, sizeof(::google::api::servicemanagement::v1::UndeleteServiceResponse)},
  { 46, -1, sizeof(::google::api::servicemanagement::v1::GetServiceConfigRequest)},
  { 54, -1, sizeof(::google::api::servicemanagement::v1::ListServiceConfigsRequest)},
  { 62, -1, sizeof(::google::api::servicemanagement::v1::ListServiceConfigsResponse)},
  { 69, -1, sizeof(::google::api::servicemanagement::v1::CreateServiceConfigRequest)},
  { 76, -1, sizeof(::google::api::servicemanagement::v1::SubmitConfigSourceRequest)},
  { 84, -1, sizeof(::google::api::servicemanagement::v1::SubmitConfigSourceResponse)},
  { 90, -1, sizeof(::google::api::servicemanagement::v1::CreateServiceRolloutRequest)},
  { 97, -1, sizeof(::google::api::servicemanagement::v1::ListServiceRolloutsRequest)},
  { 106, -1, sizeof(::google::api::servicemanagement::v1::ListServiceRolloutsResponse)},
  { 113, -1, sizeof(::google::api::servicemanagement::v1::GetServiceRolloutRequest)},
  { 120, -1, sizeof(::google::api::servicemanagement::v1::EnableServiceRequest)},
  { 127, -1, sizeof(::google::api::servicemanagement::v1::DisableServiceRequest)},
  { 134, -1, sizeof(::google::api::servicemanagement::v1::GenerateConfigReportRequest)},
  { 141, -1, sizeof(::google::api::servicemanagement::v1::GenerateConfigReportResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_ListServicesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_ListServicesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_GetServiceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_CreateServiceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_DeleteServiceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_UndeleteServiceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_UndeleteServiceResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_GetServiceConfigRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_ListServiceConfigsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_ListServiceConfigsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_CreateServiceConfigRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_SubmitConfigSourceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_SubmitConfigSourceResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_CreateServiceRolloutRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_ListServiceRolloutsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_ListServiceRolloutsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_GetServiceRolloutRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_EnableServiceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_DisableServiceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_GenerateConfigReportRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::google::api::servicemanagement::v1::_GenerateConfigReportResponse_default_instance_),
};

const char descriptor_table_protodef_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n4google/api/servicemanagement/v1/servic"
  "emanager.proto\022\037google.api.servicemanage"
  "ment.v1\032\034google/api/annotations.proto\032\030g"
  "oogle/api/service.proto\032/google/api/serv"
  "icemanagement/v1/resources.proto\032#google"
  "/longrunning/operations.proto\032\031google/pr"
  "otobuf/any.proto\032 google/protobuf/field_"
  "mask.proto\032\034google/protobuf/struct.proto"
  "\032\027google/rpc/status.proto\"n\n\023ListService"
  "sRequest\022\033\n\023producer_project_id\030\001 \001(\t\022\021\n"
  "\tpage_size\030\005 \001(\005\022\022\n\npage_token\030\006 \001(\t\022\023\n\013"
  "consumer_id\030\007 \001(\t\"r\n\024ListServicesRespons"
  "e\022A\n\010services\030\001 \003(\0132/.google.api.service"
  "management.v1.ManagedService\022\027\n\017next_pag"
  "e_token\030\002 \001(\t\")\n\021GetServiceRequest\022\024\n\014se"
  "rvice_name\030\001 \001(\t\"X\n\024CreateServiceRequest"
  "\022@\n\007service\030\001 \001(\0132/.google.api.servicema"
  "nagement.v1.ManagedService\",\n\024DeleteServ"
  "iceRequest\022\024\n\014service_name\030\001 \001(\t\".\n\026Unde"
  "leteServiceRequest\022\024\n\014service_name\030\001 \001(\t"
  "\"[\n\027UndeleteServiceResponse\022@\n\007service\030\001"
  " \001(\0132/.google.api.servicemanagement.v1.M"
  "anagedService\"\270\001\n\027GetServiceConfigReques"
  "t\022\024\n\014service_name\030\001 \001(\t\022\021\n\tconfig_id\030\002 \001"
  "(\t\022Q\n\004view\030\003 \001(\0162C.google.api.serviceman"
  "agement.v1.GetServiceConfigRequest.Confi"
  "gView\"!\n\nConfigView\022\t\n\005BASIC\020\000\022\010\n\004FULL\020\001"
  "\"X\n\031ListServiceConfigsRequest\022\024\n\014service"
  "_name\030\001 \001(\t\022\022\n\npage_token\030\002 \001(\t\022\021\n\tpage_"
  "size\030\003 \001(\005\"c\n\032ListServiceConfigsResponse"
  "\022,\n\017service_configs\030\001 \003(\0132\023.google.api.S"
  "ervice\022\027\n\017next_page_token\030\002 \001(\t\"_\n\032Creat"
  "eServiceConfigRequest\022\024\n\014service_name\030\001 "
  "\001(\t\022+\n\016service_config\030\002 \001(\0132\023.google.api"
  ".Service\"\216\001\n\031SubmitConfigSourceRequest\022\024"
  "\n\014service_name\030\001 \001(\t\022D\n\rconfig_source\030\002 "
  "\001(\0132-.google.api.servicemanagement.v1.Co"
  "nfigSource\022\025\n\rvalidate_only\030\003 \001(\010\"I\n\032Sub"
  "mitConfigSourceResponse\022+\n\016service_confi"
  "g\030\001 \001(\0132\023.google.api.Service\"n\n\033CreateSe"
  "rviceRolloutRequest\022\024\n\014service_name\030\001 \001("
  "\t\0229\n\007rollout\030\002 \001(\0132(.google.api.servicem"
  "anagement.v1.Rollout\"i\n\032ListServiceRollo"
  "utsRequest\022\024\n\014service_name\030\001 \001(\t\022\022\n\npage"
  "_token\030\002 \001(\t\022\021\n\tpage_size\030\003 \001(\005\022\016\n\006filte"
  "r\030\004 \001(\t\"r\n\033ListServiceRolloutsResponse\022:"
  "\n\010rollouts\030\001 \003(\0132(.google.api.serviceman"
  "agement.v1.Rollout\022\027\n\017next_page_token\030\002 "
  "\001(\t\"D\n\030GetServiceRolloutRequest\022\024\n\014servi"
  "ce_name\030\001 \001(\t\022\022\n\nrollout_id\030\002 \001(\t\"A\n\024Ena"
  "bleServiceRequest\022\024\n\014service_name\030\001 \001(\t\022"
  "\023\n\013consumer_id\030\002 \001(\t\"B\n\025DisableServiceRe"
  "quest\022\024\n\014service_name\030\001 \001(\t\022\023\n\013consumer_"
  "id\030\002 \001(\t\"q\n\033GenerateConfigReportRequest\022"
  "(\n\nnew_config\030\001 \001(\0132\024.google.protobuf.An"
  "y\022(\n\nold_config\030\002 \001(\0132\024.google.protobuf."
  "Any\"\311\001\n\034GenerateConfigReportResponse\022\024\n\014"
  "service_name\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\022E\n\016change"
  "_reports\030\003 \003(\0132-.google.api.servicemanag"
  "ement.v1.ChangeReport\022@\n\013diagnostics\030\004 \003"
  "(\0132+.google.api.servicemanagement.v1.Dia"
  "gnostic2\324\023\n\016ServiceManager\022\221\001\n\014ListServi"
  "ces\0224.google.api.servicemanagement.v1.Li"
  "stServicesRequest\0325.google.api.servicema"
  "nagement.v1.ListServicesResponse\"\024\202\323\344\223\002\016"
  "\022\014/v1/services\022\226\001\n\nGetService\0222.google.a"
  "pi.servicemanagement.v1.GetServiceReques"
  "t\032/.google.api.servicemanagement.v1.Mana"
  "gedService\"#\202\323\344\223\002\035\022\033/v1/services/{servic"
  "e_name}\022\204\001\n\rCreateService\0225.google.api.s"
  "ervicemanagement.v1.CreateServiceRequest"
  "\032\035.google.longrunning.Operation\"\035\202\323\344\223\002\027\""
  "\014/v1/services:\007service\022\212\001\n\rDeleteService"
  "\0225.google.api.servicemanagement.v1.Delet"
  "eServiceRequest\032\035.google.longrunning.Ope"
  "ration\"#\202\323\344\223\002\035*\033/v1/services/{service_na"
  "me}\022\227\001\n\017UndeleteService\0227.google.api.ser"
  "vicemanagement.v1.UndeleteServiceRequest"
  "\032\035.google.longrunning.Operation\",\202\323\344\223\002&\""
  "$/v1/services/{service_name}:undelete\022\272\001"
  "\n\022ListServiceConfigs\022:.google.api.servic"
  "emanagement.v1.ListServiceConfigsRequest"
  "\032;.google.api.servicemanagement.v1.ListS"
  "erviceConfigsResponse\"+\202\323\344\223\002%\022#/v1/servi"
  "ces/{service_name}/configs\022\300\001\n\020GetServic"
  "eConfig\0228.google.api.servicemanagement.v"
  "1.GetServiceConfigRequest\032\023.google.api.S"
  "ervice\"]\202\323\344\223\002W\022//v1/services/{service_na"
  "me}/configs/{config_id}Z$\022\"/v1/services/"
  "{service_name}/config\022\244\001\n\023CreateServiceC"
  "onfig\022;.google.api.servicemanagement.v1."
  "CreateServiceConfigRequest\032\023.google.api."
  "Service\";\202\323\344\223\0025\"#/v1/services/{service_n"
  "ame}/configs:\016service_config\022\246\001\n\022SubmitC"
  "onfigSource\022:.google.api.servicemanageme"
  "nt.v1.SubmitConfigSourceRequest\032\035.google"
  ".longrunning.Operation\"5\202\323\344\223\002/\"*/v1/serv"
  "ices/{service_name}/configs:submit:\001*\022\276\001"
  "\n\023ListServiceRollouts\022;.google.api.servi"
  "cemanagement.v1.ListServiceRolloutsReque"
  "st\032<.google.api.servicemanagement.v1.Lis"
  "tServiceRolloutsResponse\",\202\323\344\223\002&\022$/v1/se"
  "rvices/{service_name}/rollouts\022\263\001\n\021GetSe"
  "rviceRollout\0229.google.api.servicemanagem"
  "ent.v1.GetServiceRolloutRequest\032(.google"
  ".api.servicemanagement.v1.Rollout\"9\202\323\344\223\002"
  "3\0221/v1/services/{service_name}/rollouts/"
  "{rollout_id}\022\252\001\n\024CreateServiceRollout\022<."
  "google.api.servicemanagement.v1.CreateSe"
  "rviceRolloutRequest\032\035.google.longrunning"
  ".Operation\"5\202\323\344\223\002/\"$/v1/services/{servic"
  "e_name}/rollouts:\007rollout\022\301\001\n\024GenerateCo"
  "nfigReport\022<.google.api.servicemanagemen"
  "t.v1.GenerateConfigReportRequest\032=.googl"
  "e.api.servicemanagement.v1.GenerateConfi"
  "gReportResponse\",\202\323\344\223\002&\"!/v1/services:ge"
  "nerateConfigReport:\001*\022\224\001\n\rEnableService\022"
  "5.google.api.servicemanagement.v1.Enable"
  "ServiceRequest\032\035.google.longrunning.Oper"
  "ation\"-\202\323\344\223\002\'\"\"/v1/services/{service_nam"
  "e}:enable:\001*\022\227\001\n\016DisableService\0226.google"
  ".api.servicemanagement.v1.DisableService"
  "Request\032\035.google.longrunning.Operation\"."
  "\202\323\344\223\002(\"#/v1/services/{service_name}:disa"
  "ble:\001*B\335\001\n#com.google.api.servicemanagem"
  "ent.v1B\023ServiceManagerProtoP\001ZPgoogle.go"
  "lang.org/genproto/googleapis/api/service"
  "management/v1;servicemanagement\242\002\004GASM\252\002"
  "!Google.Cloud.ServiceManagement.V1\312\002!Goo"
  "gle\\Cloud\\ServiceManagement\\V1b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_deps[8] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fapi_2fservice_2eproto,
  &::descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fresources_2eproto,
  &::descriptor_table_google_2flongrunning_2foperations_2eproto,
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_google_2fprotobuf_2ffield_5fmask_2eproto,
  &::descriptor_table_google_2fprotobuf_2fstruct_2eproto,
  &::descriptor_table_google_2frpc_2fstatus_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_sccs[21] = {
  &scc_info_CreateServiceConfigRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base,
  &scc_info_CreateServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base,
  &scc_info_CreateServiceRolloutRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base,
  &scc_info_DeleteServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base,
  &scc_info_DisableServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base,
  &scc_info_EnableServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base,
  &scc_info_GenerateConfigReportRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base,
  &scc_info_GenerateConfigReportResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base,
  &scc_info_GetServiceConfigRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base,
  &scc_info_GetServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base,
  &scc_info_GetServiceRolloutRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base,
  &scc_info_ListServiceConfigsRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base,
  &scc_info_ListServiceConfigsResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base,
  &scc_info_ListServiceRolloutsRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base,
  &scc_info_ListServiceRolloutsResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base,
  &scc_info_ListServicesRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base,
  &scc_info_ListServicesResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base,
  &scc_info_SubmitConfigSourceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base,
  &scc_info_SubmitConfigSourceResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base,
  &scc_info_UndeleteServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base,
  &scc_info_UndeleteServiceResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_once;
static bool descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto = {
  &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_initialized, descriptor_table_protodef_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto, "google/api/servicemanagement/v1/servicemanager.proto", 5198,
  &descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_once, descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_sccs, descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto_deps, 21, 8,
  schemas, file_default_instances, TableStruct_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto::offsets,
  file_level_metadata_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto, 21, file_level_enum_descriptors_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto, file_level_service_descriptors_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto), true);
namespace google {
namespace api {
namespace servicemanagement {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GetServiceConfigRequest_ConfigView_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto);
  return file_level_enum_descriptors_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto[0];
}
bool GetServiceConfigRequest_ConfigView_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr GetServiceConfigRequest_ConfigView GetServiceConfigRequest::BASIC;
constexpr GetServiceConfigRequest_ConfigView GetServiceConfigRequest::FULL;
constexpr GetServiceConfigRequest_ConfigView GetServiceConfigRequest::ConfigView_MIN;
constexpr GetServiceConfigRequest_ConfigView GetServiceConfigRequest::ConfigView_MAX;
constexpr int GetServiceConfigRequest::ConfigView_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void ListServicesRequest::InitAsDefaultInstance() {
}
class ListServicesRequest::_Internal {
 public:
};

ListServicesRequest::ListServicesRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.ListServicesRequest)
}
ListServicesRequest::ListServicesRequest(const ListServicesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  producer_project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_producer_project_id().empty()) {
    producer_project_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.producer_project_id_);
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_page_token().empty()) {
    page_token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  consumer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_consumer_id().empty()) {
    consumer_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.consumer_id_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ListServicesRequest)
}

void ListServicesRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListServicesRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  producer_project_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  consumer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListServicesRequest::~ListServicesRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ListServicesRequest)
  SharedDtor();
}

void ListServicesRequest::SharedDtor() {
  producer_project_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  consumer_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListServicesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListServicesRequest& ListServicesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListServicesRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  return *internal_default_instance();
}


void ListServicesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ListServicesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  producer_project_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  consumer_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

const char* ListServicesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string producer_project_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_producer_project_id(), ptr, ctx, "google.api.servicemanagement.v1.ListServicesRequest.producer_project_id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 page_size = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string page_token = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_page_token(), ptr, ctx, "google.api.servicemanagement.v1.ListServicesRequest.page_token");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string consumer_id = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_consumer_id(), ptr, ctx, "google.api.servicemanagement.v1.ListServicesRequest.consumer_id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListServicesRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ListServicesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string producer_project_id = 1;
  if (this->producer_project_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_producer_project_id().data(), static_cast<int>(this->_internal_producer_project_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServicesRequest.producer_project_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_producer_project_id(), target);
  }

  // int32 page_size = 5;
  if (this->page_size() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_page_size(), target);
  }

  // string page_token = 6;
  if (this->page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServicesRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_page_token(), target);
  }

  // string consumer_id = 7;
  if (this->consumer_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_consumer_id().data(), static_cast<int>(this->_internal_consumer_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServicesRequest.consumer_id");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_consumer_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ListServicesRequest)
  return target;
}

size_t ListServicesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ListServicesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string producer_project_id = 1;
  if (this->producer_project_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_producer_project_id());
  }

  // string page_token = 6;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // string consumer_id = 7;
  if (this->consumer_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_consumer_id());
  }

  // int32 page_size = 5;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_page_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListServicesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.ListServicesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListServicesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListServicesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.ListServicesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.ListServicesRequest)
    MergeFrom(*source);
  }
}

void ListServicesRequest::MergeFrom(const ListServicesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ListServicesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.producer_project_id().size() > 0) {

    producer_project_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.producer_project_id_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.consumer_id().size() > 0) {

    consumer_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.consumer_id_);
  }
  if (from.page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
}

void ListServicesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.ListServicesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListServicesRequest::CopyFrom(const ListServicesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ListServicesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServicesRequest::IsInitialized() const {
  return true;
}

void ListServicesRequest::InternalSwap(ListServicesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  producer_project_id_.Swap(&other->producer_project_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  consumer_id_.Swap(&other->consumer_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListServicesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListServicesResponse::InitAsDefaultInstance() {
}
class ListServicesResponse::_Internal {
 public:
};

void ListServicesResponse::clear_services() {
  services_.Clear();
}
ListServicesResponse::ListServicesResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.ListServicesResponse)
}
ListServicesResponse::ListServicesResponse(const ListServicesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      services_(from.services_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ListServicesResponse)
}

void ListServicesResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListServicesResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListServicesResponse::~ListServicesResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ListServicesResponse)
  SharedDtor();
}

void ListServicesResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListServicesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListServicesResponse& ListServicesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListServicesResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  return *internal_default_instance();
}


void ListServicesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ListServicesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  services_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* ListServicesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .google.api.servicemanagement.v1.ManagedService services = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_services(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_next_page_token(), ptr, ctx, "google.api.servicemanagement.v1.ListServicesResponse.next_page_token");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListServicesResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ListServicesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.servicemanagement.v1.ManagedService services = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_services_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(1, this->_internal_services(i), target, stream);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServicesResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ListServicesResponse)
  return target;
}

size_t ListServicesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ListServicesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.servicemanagement.v1.ManagedService services = 1;
  total_size += 1UL * this->_internal_services_size();
  for (const auto& msg : this->services_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListServicesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.ListServicesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListServicesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListServicesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.ListServicesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.ListServicesResponse)
    MergeFrom(*source);
  }
}

void ListServicesResponse::MergeFrom(const ListServicesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ListServicesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  services_.MergeFrom(from.services_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListServicesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.ListServicesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListServicesResponse::CopyFrom(const ListServicesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ListServicesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServicesResponse::IsInitialized() const {
  return true;
}

void ListServicesResponse::InternalSwap(ListServicesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  services_.InternalSwap(&other->services_);
  next_page_token_.Swap(&other->next_page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListServicesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetServiceRequest::InitAsDefaultInstance() {
}
class GetServiceRequest::_Internal {
 public:
};

GetServiceRequest::GetServiceRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.GetServiceRequest)
}
GetServiceRequest::GetServiceRequest(const GetServiceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_service_name().empty()) {
    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.GetServiceRequest)
}

void GetServiceRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetServiceRequest::~GetServiceRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.GetServiceRequest)
  SharedDtor();
}

void GetServiceRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetServiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetServiceRequest& GetServiceRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  return *internal_default_instance();
}


void GetServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.GetServiceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* GetServiceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_service_name(), ptr, ctx, "google.api.servicemanagement.v1.GetServiceRequest.service_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetServiceRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.GetServiceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GetServiceRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.GetServiceRequest)
  return target;
}

size_t GetServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.GetServiceRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetServiceRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.GetServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServiceRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetServiceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.GetServiceRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.GetServiceRequest)
    MergeFrom(*source);
  }
}

void GetServiceRequest::MergeFrom(const GetServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.GetServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
}

void GetServiceRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.GetServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServiceRequest::CopyFrom(const GetServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.GetServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServiceRequest::IsInitialized() const {
  return true;
}

void GetServiceRequest::InternalSwap(GetServiceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  service_name_.Swap(&other->service_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetServiceRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateServiceRequest::InitAsDefaultInstance() {
  ::google::api::servicemanagement::v1::_CreateServiceRequest_default_instance_._instance.get_mutable()->service_ = const_cast< ::google::api::servicemanagement::v1::ManagedService*>(
      ::google::api::servicemanagement::v1::ManagedService::internal_default_instance());
}
class CreateServiceRequest::_Internal {
 public:
  static const ::google::api::servicemanagement::v1::ManagedService& service(const CreateServiceRequest* msg);
};

const ::google::api::servicemanagement::v1::ManagedService&
CreateServiceRequest::_Internal::service(const CreateServiceRequest* msg) {
  return *msg->service_;
}
void CreateServiceRequest::clear_service() {
  if (GetArenaNoVirtual() == nullptr && service_ != nullptr) {
    delete service_;
  }
  service_ = nullptr;
}
CreateServiceRequest::CreateServiceRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.CreateServiceRequest)
}
CreateServiceRequest::CreateServiceRequest(const CreateServiceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_service()) {
    service_ = new ::google::api::servicemanagement::v1::ManagedService(*from.service_);
  } else {
    service_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.CreateServiceRequest)
}

void CreateServiceRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  service_ = nullptr;
}

CreateServiceRequest::~CreateServiceRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.CreateServiceRequest)
  SharedDtor();
}

void CreateServiceRequest::SharedDtor() {
  if (this != internal_default_instance()) delete service_;
}

void CreateServiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateServiceRequest& CreateServiceRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  return *internal_default_instance();
}


void CreateServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.CreateServiceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && service_ != nullptr) {
    delete service_;
  }
  service_ = nullptr;
  _internal_metadata_.Clear();
}

const char* CreateServiceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.api.servicemanagement.v1.ManagedService service = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_service(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateServiceRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.CreateServiceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.servicemanagement.v1.ManagedService service = 1;
  if (this->has_service()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::service(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.CreateServiceRequest)
  return target;
}

size_t CreateServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.CreateServiceRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.api.servicemanagement.v1.ManagedService service = 1;
  if (this->has_service()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *service_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateServiceRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.CreateServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateServiceRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateServiceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.CreateServiceRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.CreateServiceRequest)
    MergeFrom(*source);
  }
}

void CreateServiceRequest::MergeFrom(const CreateServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.CreateServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_service()) {
    _internal_mutable_service()->::google::api::servicemanagement::v1::ManagedService::MergeFrom(from._internal_service());
  }
}

void CreateServiceRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.CreateServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateServiceRequest::CopyFrom(const CreateServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.CreateServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateServiceRequest::IsInitialized() const {
  return true;
}

void CreateServiceRequest::InternalSwap(CreateServiceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(service_, other->service_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateServiceRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteServiceRequest::InitAsDefaultInstance() {
}
class DeleteServiceRequest::_Internal {
 public:
};

DeleteServiceRequest::DeleteServiceRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.DeleteServiceRequest)
}
DeleteServiceRequest::DeleteServiceRequest(const DeleteServiceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_service_name().empty()) {
    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.DeleteServiceRequest)
}

void DeleteServiceRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteServiceRequest::~DeleteServiceRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.DeleteServiceRequest)
  SharedDtor();
}

void DeleteServiceRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteServiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteServiceRequest& DeleteServiceRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  return *internal_default_instance();
}


void DeleteServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.DeleteServiceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* DeleteServiceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_service_name(), ptr, ctx, "google.api.servicemanagement.v1.DeleteServiceRequest.service_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteServiceRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.DeleteServiceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.DeleteServiceRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.DeleteServiceRequest)
  return target;
}

size_t DeleteServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.DeleteServiceRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteServiceRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.DeleteServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteServiceRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteServiceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.DeleteServiceRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.DeleteServiceRequest)
    MergeFrom(*source);
  }
}

void DeleteServiceRequest::MergeFrom(const DeleteServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.DeleteServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
}

void DeleteServiceRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.DeleteServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteServiceRequest::CopyFrom(const DeleteServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.DeleteServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteServiceRequest::IsInitialized() const {
  return true;
}

void DeleteServiceRequest::InternalSwap(DeleteServiceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  service_name_.Swap(&other->service_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteServiceRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UndeleteServiceRequest::InitAsDefaultInstance() {
}
class UndeleteServiceRequest::_Internal {
 public:
};

UndeleteServiceRequest::UndeleteServiceRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.UndeleteServiceRequest)
}
UndeleteServiceRequest::UndeleteServiceRequest(const UndeleteServiceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_service_name().empty()) {
    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.UndeleteServiceRequest)
}

void UndeleteServiceRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UndeleteServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

UndeleteServiceRequest::~UndeleteServiceRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.UndeleteServiceRequest)
  SharedDtor();
}

void UndeleteServiceRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UndeleteServiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UndeleteServiceRequest& UndeleteServiceRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UndeleteServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  return *internal_default_instance();
}


void UndeleteServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.UndeleteServiceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* UndeleteServiceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_service_name(), ptr, ctx, "google.api.servicemanagement.v1.UndeleteServiceRequest.service_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UndeleteServiceRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.UndeleteServiceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.UndeleteServiceRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.UndeleteServiceRequest)
  return target;
}

size_t UndeleteServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.UndeleteServiceRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UndeleteServiceRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.UndeleteServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UndeleteServiceRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UndeleteServiceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.UndeleteServiceRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.UndeleteServiceRequest)
    MergeFrom(*source);
  }
}

void UndeleteServiceRequest::MergeFrom(const UndeleteServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.UndeleteServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
}

void UndeleteServiceRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.UndeleteServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UndeleteServiceRequest::CopyFrom(const UndeleteServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.UndeleteServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UndeleteServiceRequest::IsInitialized() const {
  return true;
}

void UndeleteServiceRequest::InternalSwap(UndeleteServiceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  service_name_.Swap(&other->service_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata UndeleteServiceRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UndeleteServiceResponse::InitAsDefaultInstance() {
  ::google::api::servicemanagement::v1::_UndeleteServiceResponse_default_instance_._instance.get_mutable()->service_ = const_cast< ::google::api::servicemanagement::v1::ManagedService*>(
      ::google::api::servicemanagement::v1::ManagedService::internal_default_instance());
}
class UndeleteServiceResponse::_Internal {
 public:
  static const ::google::api::servicemanagement::v1::ManagedService& service(const UndeleteServiceResponse* msg);
};

const ::google::api::servicemanagement::v1::ManagedService&
UndeleteServiceResponse::_Internal::service(const UndeleteServiceResponse* msg) {
  return *msg->service_;
}
void UndeleteServiceResponse::clear_service() {
  if (GetArenaNoVirtual() == nullptr && service_ != nullptr) {
    delete service_;
  }
  service_ = nullptr;
}
UndeleteServiceResponse::UndeleteServiceResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.UndeleteServiceResponse)
}
UndeleteServiceResponse::UndeleteServiceResponse(const UndeleteServiceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_service()) {
    service_ = new ::google::api::servicemanagement::v1::ManagedService(*from.service_);
  } else {
    service_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.UndeleteServiceResponse)
}

void UndeleteServiceResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UndeleteServiceResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  service_ = nullptr;
}

UndeleteServiceResponse::~UndeleteServiceResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.UndeleteServiceResponse)
  SharedDtor();
}

void UndeleteServiceResponse::SharedDtor() {
  if (this != internal_default_instance()) delete service_;
}

void UndeleteServiceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UndeleteServiceResponse& UndeleteServiceResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UndeleteServiceResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  return *internal_default_instance();
}


void UndeleteServiceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.UndeleteServiceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && service_ != nullptr) {
    delete service_;
  }
  service_ = nullptr;
  _internal_metadata_.Clear();
}

const char* UndeleteServiceResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.api.servicemanagement.v1.ManagedService service = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_service(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UndeleteServiceResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.UndeleteServiceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.servicemanagement.v1.ManagedService service = 1;
  if (this->has_service()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::service(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.UndeleteServiceResponse)
  return target;
}

size_t UndeleteServiceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.UndeleteServiceResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.api.servicemanagement.v1.ManagedService service = 1;
  if (this->has_service()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *service_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UndeleteServiceResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.UndeleteServiceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UndeleteServiceResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UndeleteServiceResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.UndeleteServiceResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.UndeleteServiceResponse)
    MergeFrom(*source);
  }
}

void UndeleteServiceResponse::MergeFrom(const UndeleteServiceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.UndeleteServiceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_service()) {
    _internal_mutable_service()->::google::api::servicemanagement::v1::ManagedService::MergeFrom(from._internal_service());
  }
}

void UndeleteServiceResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.UndeleteServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UndeleteServiceResponse::CopyFrom(const UndeleteServiceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.UndeleteServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UndeleteServiceResponse::IsInitialized() const {
  return true;
}

void UndeleteServiceResponse::InternalSwap(UndeleteServiceResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(service_, other->service_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UndeleteServiceResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetServiceConfigRequest::InitAsDefaultInstance() {
}
class GetServiceConfigRequest::_Internal {
 public:
};

GetServiceConfigRequest::GetServiceConfigRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.GetServiceConfigRequest)
}
GetServiceConfigRequest::GetServiceConfigRequest(const GetServiceConfigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_service_name().empty()) {
    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  config_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_config_id().empty()) {
    config_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.config_id_);
  }
  view_ = from.view_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.GetServiceConfigRequest)
}

void GetServiceConfigRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetServiceConfigRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  config_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  view_ = 0;
}

GetServiceConfigRequest::~GetServiceConfigRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.GetServiceConfigRequest)
  SharedDtor();
}

void GetServiceConfigRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  config_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetServiceConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetServiceConfigRequest& GetServiceConfigRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetServiceConfigRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  return *internal_default_instance();
}


void GetServiceConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.GetServiceConfigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  config_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  view_ = 0;
  _internal_metadata_.Clear();
}

const char* GetServiceConfigRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_service_name(), ptr, ctx, "google.api.servicemanagement.v1.GetServiceConfigRequest.service_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string config_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_config_id(), ptr, ctx, "google.api.servicemanagement.v1.GetServiceConfigRequest.config_id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.servicemanagement.v1.GetServiceConfigRequest.ConfigView view = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_view(static_cast<::google::api::servicemanagement::v1::GetServiceConfigRequest_ConfigView>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetServiceConfigRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.GetServiceConfigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GetServiceConfigRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // string config_id = 2;
  if (this->config_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_config_id().data(), static_cast<int>(this->_internal_config_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GetServiceConfigRequest.config_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_config_id(), target);
  }

  // .google.api.servicemanagement.v1.GetServiceConfigRequest.ConfigView view = 3;
  if (this->view() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_view(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.GetServiceConfigRequest)
  return target;
}

size_t GetServiceConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.GetServiceConfigRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // string config_id = 2;
  if (this->config_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_config_id());
  }

  // .google.api.servicemanagement.v1.GetServiceConfigRequest.ConfigView view = 3;
  if (this->view() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_view());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetServiceConfigRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.GetServiceConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServiceConfigRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetServiceConfigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.GetServiceConfigRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.GetServiceConfigRequest)
    MergeFrom(*source);
  }
}

void GetServiceConfigRequest::MergeFrom(const GetServiceConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.GetServiceConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.config_id().size() > 0) {

    config_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.config_id_);
  }
  if (from.view() != 0) {
    _internal_set_view(from._internal_view());
  }
}

void GetServiceConfigRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.GetServiceConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServiceConfigRequest::CopyFrom(const GetServiceConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.GetServiceConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServiceConfigRequest::IsInitialized() const {
  return true;
}

void GetServiceConfigRequest::InternalSwap(GetServiceConfigRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  service_name_.Swap(&other->service_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  config_id_.Swap(&other->config_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(view_, other->view_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetServiceConfigRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListServiceConfigsRequest::InitAsDefaultInstance() {
}
class ListServiceConfigsRequest::_Internal {
 public:
};

ListServiceConfigsRequest::ListServiceConfigsRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.ListServiceConfigsRequest)
}
ListServiceConfigsRequest::ListServiceConfigsRequest(const ListServiceConfigsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_service_name().empty()) {
    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_page_token().empty()) {
    page_token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ListServiceConfigsRequest)
}

void ListServiceConfigsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListServiceConfigsRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListServiceConfigsRequest::~ListServiceConfigsRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  SharedDtor();
}

void ListServiceConfigsRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListServiceConfigsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListServiceConfigsRequest& ListServiceConfigsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListServiceConfigsRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  return *internal_default_instance();
}


void ListServiceConfigsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

const char* ListServiceConfigsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_service_name(), ptr, ctx, "google.api.servicemanagement.v1.ListServiceConfigsRequest.service_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_page_token(), ptr, ctx, "google.api.servicemanagement.v1.ListServiceConfigsRequest.page_token");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 page_size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListServiceConfigsRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceConfigsRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceConfigsRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_page_token(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_page_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  return target;
}

size_t ListServiceConfigsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_page_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListServiceConfigsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListServiceConfigsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListServiceConfigsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.ListServiceConfigsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.ListServiceConfigsRequest)
    MergeFrom(*source);
  }
}

void ListServiceConfigsRequest::MergeFrom(const ListServiceConfigsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
}

void ListServiceConfigsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListServiceConfigsRequest::CopyFrom(const ListServiceConfigsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ListServiceConfigsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServiceConfigsRequest::IsInitialized() const {
  return true;
}

void ListServiceConfigsRequest::InternalSwap(ListServiceConfigsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  service_name_.Swap(&other->service_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListServiceConfigsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListServiceConfigsResponse::InitAsDefaultInstance() {
}
class ListServiceConfigsResponse::_Internal {
 public:
};

void ListServiceConfigsResponse::clear_service_configs() {
  service_configs_.Clear();
}
ListServiceConfigsResponse::ListServiceConfigsResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.ListServiceConfigsResponse)
}
ListServiceConfigsResponse::ListServiceConfigsResponse(const ListServiceConfigsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      service_configs_(from.service_configs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ListServiceConfigsResponse)
}

void ListServiceConfigsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListServiceConfigsResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListServiceConfigsResponse::~ListServiceConfigsResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  SharedDtor();
}

void ListServiceConfigsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListServiceConfigsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListServiceConfigsResponse& ListServiceConfigsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListServiceConfigsResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  return *internal_default_instance();
}


void ListServiceConfigsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_configs_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* ListServiceConfigsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .google.api.Service service_configs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_service_configs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_next_page_token(), ptr, ctx, "google.api.servicemanagement.v1.ListServiceConfigsResponse.next_page_token");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListServiceConfigsResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.Service service_configs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_service_configs_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(1, this->_internal_service_configs(i), target, stream);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceConfigsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  return target;
}

size_t ListServiceConfigsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.Service service_configs = 1;
  total_size += 1UL * this->_internal_service_configs_size();
  for (const auto& msg : this->service_configs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListServiceConfigsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListServiceConfigsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListServiceConfigsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.ListServiceConfigsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.ListServiceConfigsResponse)
    MergeFrom(*source);
  }
}

void ListServiceConfigsResponse::MergeFrom(const ListServiceConfigsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  service_configs_.MergeFrom(from.service_configs_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListServiceConfigsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListServiceConfigsResponse::CopyFrom(const ListServiceConfigsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ListServiceConfigsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServiceConfigsResponse::IsInitialized() const {
  return true;
}

void ListServiceConfigsResponse::InternalSwap(ListServiceConfigsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  service_configs_.InternalSwap(&other->service_configs_);
  next_page_token_.Swap(&other->next_page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListServiceConfigsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateServiceConfigRequest::InitAsDefaultInstance() {
  ::google::api::servicemanagement::v1::_CreateServiceConfigRequest_default_instance_._instance.get_mutable()->service_config_ = const_cast< ::google::api::Service*>(
      ::google::api::Service::internal_default_instance());
}
class CreateServiceConfigRequest::_Internal {
 public:
  static const ::google::api::Service& service_config(const CreateServiceConfigRequest* msg);
};

const ::google::api::Service&
CreateServiceConfigRequest::_Internal::service_config(const CreateServiceConfigRequest* msg) {
  return *msg->service_config_;
}
void CreateServiceConfigRequest::clear_service_config() {
  if (GetArenaNoVirtual() == nullptr && service_config_ != nullptr) {
    delete service_config_;
  }
  service_config_ = nullptr;
}
CreateServiceConfigRequest::CreateServiceConfigRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.CreateServiceConfigRequest)
}
CreateServiceConfigRequest::CreateServiceConfigRequest(const CreateServiceConfigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_service_name().empty()) {
    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from._internal_has_service_config()) {
    service_config_ = new ::google::api::Service(*from.service_config_);
  } else {
    service_config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.CreateServiceConfigRequest)
}

void CreateServiceConfigRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateServiceConfigRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  service_config_ = nullptr;
}

CreateServiceConfigRequest::~CreateServiceConfigRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  SharedDtor();
}

void CreateServiceConfigRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete service_config_;
}

void CreateServiceConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateServiceConfigRequest& CreateServiceConfigRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateServiceConfigRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  return *internal_default_instance();
}


void CreateServiceConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && service_config_ != nullptr) {
    delete service_config_;
  }
  service_config_ = nullptr;
  _internal_metadata_.Clear();
}

const char* CreateServiceConfigRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_service_name(), ptr, ctx, "google.api.servicemanagement.v1.CreateServiceConfigRequest.service_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.Service service_config = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_service_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateServiceConfigRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.CreateServiceConfigRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // .google.api.Service service_config = 2;
  if (this->has_service_config()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::service_config(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  return target;
}

size_t CreateServiceConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // .google.api.Service service_config = 2;
  if (this->has_service_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *service_config_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateServiceConfigRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateServiceConfigRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateServiceConfigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.CreateServiceConfigRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.CreateServiceConfigRequest)
    MergeFrom(*source);
  }
}

void CreateServiceConfigRequest::MergeFrom(const CreateServiceConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.has_service_config()) {
    _internal_mutable_service_config()->::google::api::Service::MergeFrom(from._internal_service_config());
  }
}

void CreateServiceConfigRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateServiceConfigRequest::CopyFrom(const CreateServiceConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.CreateServiceConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateServiceConfigRequest::IsInitialized() const {
  return true;
}

void CreateServiceConfigRequest::InternalSwap(CreateServiceConfigRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  service_name_.Swap(&other->service_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(service_config_, other->service_config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateServiceConfigRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubmitConfigSourceRequest::InitAsDefaultInstance() {
  ::google::api::servicemanagement::v1::_SubmitConfigSourceRequest_default_instance_._instance.get_mutable()->config_source_ = const_cast< ::google::api::servicemanagement::v1::ConfigSource*>(
      ::google::api::servicemanagement::v1::ConfigSource::internal_default_instance());
}
class SubmitConfigSourceRequest::_Internal {
 public:
  static const ::google::api::servicemanagement::v1::ConfigSource& config_source(const SubmitConfigSourceRequest* msg);
};

const ::google::api::servicemanagement::v1::ConfigSource&
SubmitConfigSourceRequest::_Internal::config_source(const SubmitConfigSourceRequest* msg) {
  return *msg->config_source_;
}
void SubmitConfigSourceRequest::clear_config_source() {
  if (GetArenaNoVirtual() == nullptr && config_source_ != nullptr) {
    delete config_source_;
  }
  config_source_ = nullptr;
}
SubmitConfigSourceRequest::SubmitConfigSourceRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
}
SubmitConfigSourceRequest::SubmitConfigSourceRequest(const SubmitConfigSourceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_service_name().empty()) {
    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from._internal_has_config_source()) {
    config_source_ = new ::google::api::servicemanagement::v1::ConfigSource(*from.config_source_);
  } else {
    config_source_ = nullptr;
  }
  validate_only_ = from.validate_only_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
}

void SubmitConfigSourceRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SubmitConfigSourceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&config_source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&validate_only_) -
      reinterpret_cast<char*>(&config_source_)) + sizeof(validate_only_));
}

SubmitConfigSourceRequest::~SubmitConfigSourceRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  SharedDtor();
}

void SubmitConfigSourceRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete config_source_;
}

void SubmitConfigSourceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubmitConfigSourceRequest& SubmitConfigSourceRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubmitConfigSourceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  return *internal_default_instance();
}


void SubmitConfigSourceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && config_source_ != nullptr) {
    delete config_source_;
  }
  config_source_ = nullptr;
  validate_only_ = false;
  _internal_metadata_.Clear();
}

const char* SubmitConfigSourceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_service_name(), ptr, ctx, "google.api.servicemanagement.v1.SubmitConfigSourceRequest.service_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.servicemanagement.v1.ConfigSource config_source = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_config_source(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool validate_only = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          validate_only_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubmitConfigSourceRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.SubmitConfigSourceRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // .google.api.servicemanagement.v1.ConfigSource config_source = 2;
  if (this->has_config_source()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::config_source(this), target, stream);
  }

  // bool validate_only = 3;
  if (this->validate_only() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_validate_only(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  return target;
}

size_t SubmitConfigSourceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // .google.api.servicemanagement.v1.ConfigSource config_source = 2;
  if (this->has_config_source()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *config_source_);
  }

  // bool validate_only = 3;
  if (this->validate_only() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubmitConfigSourceRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubmitConfigSourceRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubmitConfigSourceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
    MergeFrom(*source);
  }
}

void SubmitConfigSourceRequest::MergeFrom(const SubmitConfigSourceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.has_config_source()) {
    _internal_mutable_config_source()->::google::api::servicemanagement::v1::ConfigSource::MergeFrom(from._internal_config_source());
  }
  if (from.validate_only() != 0) {
    _internal_set_validate_only(from._internal_validate_only());
  }
}

void SubmitConfigSourceRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubmitConfigSourceRequest::CopyFrom(const SubmitConfigSourceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.SubmitConfigSourceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitConfigSourceRequest::IsInitialized() const {
  return true;
}

void SubmitConfigSourceRequest::InternalSwap(SubmitConfigSourceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  service_name_.Swap(&other->service_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(config_source_, other->config_source_);
  swap(validate_only_, other->validate_only_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SubmitConfigSourceRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SubmitConfigSourceResponse::InitAsDefaultInstance() {
  ::google::api::servicemanagement::v1::_SubmitConfigSourceResponse_default_instance_._instance.get_mutable()->service_config_ = const_cast< ::google::api::Service*>(
      ::google::api::Service::internal_default_instance());
}
class SubmitConfigSourceResponse::_Internal {
 public:
  static const ::google::api::Service& service_config(const SubmitConfigSourceResponse* msg);
};

const ::google::api::Service&
SubmitConfigSourceResponse::_Internal::service_config(const SubmitConfigSourceResponse* msg) {
  return *msg->service_config_;
}
void SubmitConfigSourceResponse::clear_service_config() {
  if (GetArenaNoVirtual() == nullptr && service_config_ != nullptr) {
    delete service_config_;
  }
  service_config_ = nullptr;
}
SubmitConfigSourceResponse::SubmitConfigSourceResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
}
SubmitConfigSourceResponse::SubmitConfigSourceResponse(const SubmitConfigSourceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_service_config()) {
    service_config_ = new ::google::api::Service(*from.service_config_);
  } else {
    service_config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
}

void SubmitConfigSourceResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SubmitConfigSourceResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  service_config_ = nullptr;
}

SubmitConfigSourceResponse::~SubmitConfigSourceResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  SharedDtor();
}

void SubmitConfigSourceResponse::SharedDtor() {
  if (this != internal_default_instance()) delete service_config_;
}

void SubmitConfigSourceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SubmitConfigSourceResponse& SubmitConfigSourceResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SubmitConfigSourceResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  return *internal_default_instance();
}


void SubmitConfigSourceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && service_config_ != nullptr) {
    delete service_config_;
  }
  service_config_ = nullptr;
  _internal_metadata_.Clear();
}

const char* SubmitConfigSourceResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.api.Service service_config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_service_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SubmitConfigSourceResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.api.Service service_config = 1;
  if (this->has_service_config()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::service_config(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  return target;
}

size_t SubmitConfigSourceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.api.Service service_config = 1;
  if (this->has_service_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *service_config_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubmitConfigSourceResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SubmitConfigSourceResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SubmitConfigSourceResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
    MergeFrom(*source);
  }
}

void SubmitConfigSourceResponse::MergeFrom(const SubmitConfigSourceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_service_config()) {
    _internal_mutable_service_config()->::google::api::Service::MergeFrom(from._internal_service_config());
  }
}

void SubmitConfigSourceResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubmitConfigSourceResponse::CopyFrom(const SubmitConfigSourceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.SubmitConfigSourceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitConfigSourceResponse::IsInitialized() const {
  return true;
}

void SubmitConfigSourceResponse::InternalSwap(SubmitConfigSourceResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(service_config_, other->service_config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SubmitConfigSourceResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateServiceRolloutRequest::InitAsDefaultInstance() {
  ::google::api::servicemanagement::v1::_CreateServiceRolloutRequest_default_instance_._instance.get_mutable()->rollout_ = const_cast< ::google::api::servicemanagement::v1::Rollout*>(
      ::google::api::servicemanagement::v1::Rollout::internal_default_instance());
}
class CreateServiceRolloutRequest::_Internal {
 public:
  static const ::google::api::servicemanagement::v1::Rollout& rollout(const CreateServiceRolloutRequest* msg);
};

const ::google::api::servicemanagement::v1::Rollout&
CreateServiceRolloutRequest::_Internal::rollout(const CreateServiceRolloutRequest* msg) {
  return *msg->rollout_;
}
void CreateServiceRolloutRequest::clear_rollout() {
  if (GetArenaNoVirtual() == nullptr && rollout_ != nullptr) {
    delete rollout_;
  }
  rollout_ = nullptr;
}
CreateServiceRolloutRequest::CreateServiceRolloutRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
}
CreateServiceRolloutRequest::CreateServiceRolloutRequest(const CreateServiceRolloutRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_service_name().empty()) {
    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from._internal_has_rollout()) {
    rollout_ = new ::google::api::servicemanagement::v1::Rollout(*from.rollout_);
  } else {
    rollout_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
}

void CreateServiceRolloutRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateServiceRolloutRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rollout_ = nullptr;
}

CreateServiceRolloutRequest::~CreateServiceRolloutRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  SharedDtor();
}

void CreateServiceRolloutRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete rollout_;
}

void CreateServiceRolloutRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateServiceRolloutRequest& CreateServiceRolloutRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateServiceRolloutRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  return *internal_default_instance();
}


void CreateServiceRolloutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && rollout_ != nullptr) {
    delete rollout_;
  }
  rollout_ = nullptr;
  _internal_metadata_.Clear();
}

const char* CreateServiceRolloutRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_service_name(), ptr, ctx, "google.api.servicemanagement.v1.CreateServiceRolloutRequest.service_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.api.servicemanagement.v1.Rollout rollout = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rollout(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateServiceRolloutRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.CreateServiceRolloutRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // .google.api.servicemanagement.v1.Rollout rollout = 2;
  if (this->has_rollout()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::rollout(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  return target;
}

size_t CreateServiceRolloutRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // .google.api.servicemanagement.v1.Rollout rollout = 2;
  if (this->has_rollout()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rollout_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateServiceRolloutRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateServiceRolloutRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateServiceRolloutRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
    MergeFrom(*source);
  }
}

void CreateServiceRolloutRequest::MergeFrom(const CreateServiceRolloutRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.has_rollout()) {
    _internal_mutable_rollout()->::google::api::servicemanagement::v1::Rollout::MergeFrom(from._internal_rollout());
  }
}

void CreateServiceRolloutRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateServiceRolloutRequest::CopyFrom(const CreateServiceRolloutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.CreateServiceRolloutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateServiceRolloutRequest::IsInitialized() const {
  return true;
}

void CreateServiceRolloutRequest::InternalSwap(CreateServiceRolloutRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  service_name_.Swap(&other->service_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rollout_, other->rollout_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateServiceRolloutRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListServiceRolloutsRequest::InitAsDefaultInstance() {
}
class ListServiceRolloutsRequest::_Internal {
 public:
};

ListServiceRolloutsRequest::ListServiceRolloutsRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
}
ListServiceRolloutsRequest::ListServiceRolloutsRequest(const ListServiceRolloutsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_service_name().empty()) {
    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_page_token().empty()) {
    page_token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  filter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_filter().empty()) {
    filter_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  page_size_ = from.page_size_;
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
}

void ListServiceRolloutsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListServiceRolloutsRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
}

ListServiceRolloutsRequest::~ListServiceRolloutsRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  SharedDtor();
}

void ListServiceRolloutsRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filter_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListServiceRolloutsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListServiceRolloutsRequest& ListServiceRolloutsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListServiceRolloutsRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  return *internal_default_instance();
}


void ListServiceRolloutsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filter_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  page_size_ = 0;
  _internal_metadata_.Clear();
}

const char* ListServiceRolloutsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_service_name(), ptr, ctx, "google.api.servicemanagement.v1.ListServiceRolloutsRequest.service_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_page_token(), ptr, ctx, "google.api.servicemanagement.v1.ListServiceRolloutsRequest.page_token");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 page_size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string filter = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_filter(), ptr, ctx, "google.api.servicemanagement.v1.ListServiceRolloutsRequest.filter");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListServiceRolloutsRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceRolloutsRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_page_token().data(), static_cast<int>(this->_internal_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceRolloutsRequest.page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_page_token(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_page_size(), target);
  }

  // string filter = 4;
  if (this->filter().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filter().data(), static_cast<int>(this->_internal_filter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceRolloutsRequest.filter");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_filter(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  return target;
}

size_t ListServiceRolloutsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // string page_token = 2;
  if (this->page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_page_token());
  }

  // string filter = 4;
  if (this->filter().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filter());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_page_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListServiceRolloutsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListServiceRolloutsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListServiceRolloutsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
    MergeFrom(*source);
  }
}

void ListServiceRolloutsRequest::MergeFrom(const ListServiceRolloutsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.page_token().size() > 0) {

    page_token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.page_token_);
  }
  if (from.filter().size() > 0) {

    filter_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.filter_);
  }
  if (from.page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
}

void ListServiceRolloutsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListServiceRolloutsRequest::CopyFrom(const ListServiceRolloutsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ListServiceRolloutsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServiceRolloutsRequest::IsInitialized() const {
  return true;
}

void ListServiceRolloutsRequest::InternalSwap(ListServiceRolloutsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  service_name_.Swap(&other->service_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  page_token_.Swap(&other->page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filter_.Swap(&other->filter_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(page_size_, other->page_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListServiceRolloutsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListServiceRolloutsResponse::InitAsDefaultInstance() {
}
class ListServiceRolloutsResponse::_Internal {
 public:
};

void ListServiceRolloutsResponse::clear_rollouts() {
  rollouts_.Clear();
}
ListServiceRolloutsResponse::ListServiceRolloutsResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
}
ListServiceRolloutsResponse::ListServiceRolloutsResponse(const ListServiceRolloutsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      rollouts_(from.rollouts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_next_page_token().empty()) {
    next_page_token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
}

void ListServiceRolloutsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListServiceRolloutsResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  next_page_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ListServiceRolloutsResponse::~ListServiceRolloutsResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  SharedDtor();
}

void ListServiceRolloutsResponse::SharedDtor() {
  next_page_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListServiceRolloutsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListServiceRolloutsResponse& ListServiceRolloutsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListServiceRolloutsResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  return *internal_default_instance();
}


void ListServiceRolloutsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rollouts_.Clear();
  next_page_token_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* ListServiceRolloutsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .google.api.servicemanagement.v1.Rollout rollouts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_rollouts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string next_page_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_next_page_token(), ptr, ctx, "google.api.servicemanagement.v1.ListServiceRolloutsResponse.next_page_token");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListServiceRolloutsResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.api.servicemanagement.v1.Rollout rollouts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_rollouts_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(1, this->_internal_rollouts(i), target, stream);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_page_token().data(), static_cast<int>(this->_internal_next_page_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.ListServiceRolloutsResponse.next_page_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_next_page_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  return target;
}

size_t ListServiceRolloutsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.servicemanagement.v1.Rollout rollouts = 1;
  total_size += 1UL * this->_internal_rollouts_size();
  for (const auto& msg : this->rollouts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_page_token = 2;
  if (this->next_page_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_page_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListServiceRolloutsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListServiceRolloutsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListServiceRolloutsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
    MergeFrom(*source);
  }
}

void ListServiceRolloutsResponse::MergeFrom(const ListServiceRolloutsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rollouts_.MergeFrom(from.rollouts_);
  if (from.next_page_token().size() > 0) {

    next_page_token_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.next_page_token_);
  }
}

void ListServiceRolloutsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListServiceRolloutsResponse::CopyFrom(const ListServiceRolloutsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.ListServiceRolloutsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServiceRolloutsResponse::IsInitialized() const {
  return true;
}

void ListServiceRolloutsResponse::InternalSwap(ListServiceRolloutsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  rollouts_.InternalSwap(&other->rollouts_);
  next_page_token_.Swap(&other->next_page_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ListServiceRolloutsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetServiceRolloutRequest::InitAsDefaultInstance() {
}
class GetServiceRolloutRequest::_Internal {
 public:
};

GetServiceRolloutRequest::GetServiceRolloutRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.GetServiceRolloutRequest)
}
GetServiceRolloutRequest::GetServiceRolloutRequest(const GetServiceRolloutRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_service_name().empty()) {
    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  rollout_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rollout_id().empty()) {
    rollout_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.rollout_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.GetServiceRolloutRequest)
}

void GetServiceRolloutRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetServiceRolloutRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rollout_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetServiceRolloutRequest::~GetServiceRolloutRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  SharedDtor();
}

void GetServiceRolloutRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rollout_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetServiceRolloutRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetServiceRolloutRequest& GetServiceRolloutRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetServiceRolloutRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  return *internal_default_instance();
}


void GetServiceRolloutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rollout_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* GetServiceRolloutRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_service_name(), ptr, ctx, "google.api.servicemanagement.v1.GetServiceRolloutRequest.service_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rollout_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_rollout_id(), ptr, ctx, "google.api.servicemanagement.v1.GetServiceRolloutRequest.rollout_id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetServiceRolloutRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GetServiceRolloutRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // string rollout_id = 2;
  if (this->rollout_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rollout_id().data(), static_cast<int>(this->_internal_rollout_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GetServiceRolloutRequest.rollout_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rollout_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  return target;
}

size_t GetServiceRolloutRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // string rollout_id = 2;
  if (this->rollout_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rollout_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetServiceRolloutRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetServiceRolloutRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetServiceRolloutRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.GetServiceRolloutRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.GetServiceRolloutRequest)
    MergeFrom(*source);
  }
}

void GetServiceRolloutRequest::MergeFrom(const GetServiceRolloutRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.rollout_id().size() > 0) {

    rollout_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.rollout_id_);
  }
}

void GetServiceRolloutRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServiceRolloutRequest::CopyFrom(const GetServiceRolloutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.GetServiceRolloutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServiceRolloutRequest::IsInitialized() const {
  return true;
}

void GetServiceRolloutRequest::InternalSwap(GetServiceRolloutRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  service_name_.Swap(&other->service_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rollout_id_.Swap(&other->rollout_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetServiceRolloutRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EnableServiceRequest::InitAsDefaultInstance() {
}
class EnableServiceRequest::_Internal {
 public:
};

EnableServiceRequest::EnableServiceRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.EnableServiceRequest)
}
EnableServiceRequest::EnableServiceRequest(const EnableServiceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_service_name().empty()) {
    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  consumer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_consumer_id().empty()) {
    consumer_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.consumer_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.EnableServiceRequest)
}

void EnableServiceRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EnableServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  consumer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

EnableServiceRequest::~EnableServiceRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.EnableServiceRequest)
  SharedDtor();
}

void EnableServiceRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  consumer_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EnableServiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EnableServiceRequest& EnableServiceRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EnableServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  return *internal_default_instance();
}


void EnableServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.EnableServiceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  consumer_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* EnableServiceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_service_name(), ptr, ctx, "google.api.servicemanagement.v1.EnableServiceRequest.service_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string consumer_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_consumer_id(), ptr, ctx, "google.api.servicemanagement.v1.EnableServiceRequest.consumer_id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EnableServiceRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.EnableServiceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.EnableServiceRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // string consumer_id = 2;
  if (this->consumer_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_consumer_id().data(), static_cast<int>(this->_internal_consumer_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.EnableServiceRequest.consumer_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_consumer_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.EnableServiceRequest)
  return target;
}

size_t EnableServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.EnableServiceRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // string consumer_id = 2;
  if (this->consumer_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_consumer_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnableServiceRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.EnableServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EnableServiceRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EnableServiceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.EnableServiceRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.EnableServiceRequest)
    MergeFrom(*source);
  }
}

void EnableServiceRequest::MergeFrom(const EnableServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.EnableServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.consumer_id().size() > 0) {

    consumer_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.consumer_id_);
  }
}

void EnableServiceRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.EnableServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnableServiceRequest::CopyFrom(const EnableServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.EnableServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnableServiceRequest::IsInitialized() const {
  return true;
}

void EnableServiceRequest::InternalSwap(EnableServiceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  service_name_.Swap(&other->service_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  consumer_id_.Swap(&other->consumer_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata EnableServiceRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DisableServiceRequest::InitAsDefaultInstance() {
}
class DisableServiceRequest::_Internal {
 public:
};

DisableServiceRequest::DisableServiceRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.DisableServiceRequest)
}
DisableServiceRequest::DisableServiceRequest(const DisableServiceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_service_name().empty()) {
    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  consumer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_consumer_id().empty()) {
    consumer_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.consumer_id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.DisableServiceRequest)
}

void DisableServiceRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DisableServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  consumer_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DisableServiceRequest::~DisableServiceRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.DisableServiceRequest)
  SharedDtor();
}

void DisableServiceRequest::SharedDtor() {
  service_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  consumer_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DisableServiceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DisableServiceRequest& DisableServiceRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DisableServiceRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  return *internal_default_instance();
}


void DisableServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.DisableServiceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  consumer_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* DisableServiceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_service_name(), ptr, ctx, "google.api.servicemanagement.v1.DisableServiceRequest.service_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string consumer_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_consumer_id(), ptr, ctx, "google.api.servicemanagement.v1.DisableServiceRequest.consumer_id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DisableServiceRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.DisableServiceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.DisableServiceRequest.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // string consumer_id = 2;
  if (this->consumer_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_consumer_id().data(), static_cast<int>(this->_internal_consumer_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.DisableServiceRequest.consumer_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_consumer_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.DisableServiceRequest)
  return target;
}

size_t DisableServiceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.DisableServiceRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // string consumer_id = 2;
  if (this->consumer_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_consumer_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisableServiceRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.DisableServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DisableServiceRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DisableServiceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.DisableServiceRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.DisableServiceRequest)
    MergeFrom(*source);
  }
}

void DisableServiceRequest::MergeFrom(const DisableServiceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.DisableServiceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.consumer_id().size() > 0) {

    consumer_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.consumer_id_);
  }
}

void DisableServiceRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.DisableServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisableServiceRequest::CopyFrom(const DisableServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.DisableServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisableServiceRequest::IsInitialized() const {
  return true;
}

void DisableServiceRequest::InternalSwap(DisableServiceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  service_name_.Swap(&other->service_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  consumer_id_.Swap(&other->consumer_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata DisableServiceRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GenerateConfigReportRequest::InitAsDefaultInstance() {
  ::google::api::servicemanagement::v1::_GenerateConfigReportRequest_default_instance_._instance.get_mutable()->new_config_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
  ::google::api::servicemanagement::v1::_GenerateConfigReportRequest_default_instance_._instance.get_mutable()->old_config_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
}
class GenerateConfigReportRequest::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Any& new_config(const GenerateConfigReportRequest* msg);
  static const PROTOBUF_NAMESPACE_ID::Any& old_config(const GenerateConfigReportRequest* msg);
};

const PROTOBUF_NAMESPACE_ID::Any&
GenerateConfigReportRequest::_Internal::new_config(const GenerateConfigReportRequest* msg) {
  return *msg->new_config_;
}
const PROTOBUF_NAMESPACE_ID::Any&
GenerateConfigReportRequest::_Internal::old_config(const GenerateConfigReportRequest* msg) {
  return *msg->old_config_;
}
void GenerateConfigReportRequest::clear_new_config() {
  if (GetArenaNoVirtual() == nullptr && new_config_ != nullptr) {
    delete new_config_;
  }
  new_config_ = nullptr;
}
void GenerateConfigReportRequest::clear_old_config() {
  if (GetArenaNoVirtual() == nullptr && old_config_ != nullptr) {
    delete old_config_;
  }
  old_config_ = nullptr;
}
GenerateConfigReportRequest::GenerateConfigReportRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.GenerateConfigReportRequest)
}
GenerateConfigReportRequest::GenerateConfigReportRequest(const GenerateConfigReportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_new_config()) {
    new_config_ = new PROTOBUF_NAMESPACE_ID::Any(*from.new_config_);
  } else {
    new_config_ = nullptr;
  }
  if (from._internal_has_old_config()) {
    old_config_ = new PROTOBUF_NAMESPACE_ID::Any(*from.old_config_);
  } else {
    old_config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.GenerateConfigReportRequest)
}

void GenerateConfigReportRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GenerateConfigReportRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  ::memset(&new_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&old_config_) -
      reinterpret_cast<char*>(&new_config_)) + sizeof(old_config_));
}

GenerateConfigReportRequest::~GenerateConfigReportRequest() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  SharedDtor();
}

void GenerateConfigReportRequest::SharedDtor() {
  if (this != internal_default_instance()) delete new_config_;
  if (this != internal_default_instance()) delete old_config_;
}

void GenerateConfigReportRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenerateConfigReportRequest& GenerateConfigReportRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GenerateConfigReportRequest_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  return *internal_default_instance();
}


void GenerateConfigReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && new_config_ != nullptr) {
    delete new_config_;
  }
  new_config_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && old_config_ != nullptr) {
    delete old_config_;
  }
  old_config_ = nullptr;
  _internal_metadata_.Clear();
}

const char* GenerateConfigReportRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .google.protobuf.Any new_config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_new_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Any old_config = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_old_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenerateConfigReportRequest::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any new_config = 1;
  if (this->has_new_config()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::new_config(this), target, stream);
  }

  // .google.protobuf.Any old_config = 2;
  if (this->has_old_config()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::old_config(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  return target;
}

size_t GenerateConfigReportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Any new_config = 1;
  if (this->has_new_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *new_config_);
  }

  // .google.protobuf.Any old_config = 2;
  if (this->has_old_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *old_config_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerateConfigReportRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerateConfigReportRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenerateConfigReportRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.GenerateConfigReportRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.GenerateConfigReportRequest)
    MergeFrom(*source);
  }
}

void GenerateConfigReportRequest::MergeFrom(const GenerateConfigReportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_new_config()) {
    _internal_mutable_new_config()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_new_config());
  }
  if (from.has_old_config()) {
    _internal_mutable_old_config()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_old_config());
  }
}

void GenerateConfigReportRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerateConfigReportRequest::CopyFrom(const GenerateConfigReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.GenerateConfigReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateConfigReportRequest::IsInitialized() const {
  return true;
}

void GenerateConfigReportRequest::InternalSwap(GenerateConfigReportRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(new_config_, other->new_config_);
  swap(old_config_, other->old_config_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerateConfigReportRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GenerateConfigReportResponse::InitAsDefaultInstance() {
}
class GenerateConfigReportResponse::_Internal {
 public:
};

void GenerateConfigReportResponse::clear_change_reports() {
  change_reports_.Clear();
}
void GenerateConfigReportResponse::clear_diagnostics() {
  diagnostics_.Clear();
}
GenerateConfigReportResponse::GenerateConfigReportResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.api.servicemanagement.v1.GenerateConfigReportResponse)
}
GenerateConfigReportResponse::GenerateConfigReportResponse(const GenerateConfigReportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      change_reports_(from.change_reports_),
      diagnostics_(from.diagnostics_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_service_name().empty()) {
    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:google.api.servicemanagement.v1.GenerateConfigReportResponse)
}

void GenerateConfigReportResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GenerateConfigReportResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  service_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GenerateConfigReportResponse::~GenerateConfigReportResponse() {
  // @@protoc_insertion_point(destructor:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  SharedDtor();
}

void GenerateConfigReportResponse::SharedDtor() {
  service_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GenerateConfigReportResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GenerateConfigReportResponse& GenerateConfigReportResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GenerateConfigReportResponse_google_2fapi_2fservicemanagement_2fv1_2fservicemanager_2eproto.base);
  return *internal_default_instance();
}


void GenerateConfigReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  change_reports_.Clear();
  diagnostics_.Clear();
  service_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* GenerateConfigReportResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string service_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_service_name(), ptr, ctx, "google.api.servicemanagement.v1.GenerateConfigReportResponse.service_name");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_id(), ptr, ctx, "google.api.servicemanagement.v1.GenerateConfigReportResponse.id");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .google.api.servicemanagement.v1.ChangeReport change_reports = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_change_reports(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .google.api.servicemanagement.v1.Diagnostic diagnostics = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_diagnostics(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GenerateConfigReportResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_service_name().data(), static_cast<int>(this->_internal_service_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GenerateConfigReportResponse.service_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_service_name(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "google.api.servicemanagement.v1.GenerateConfigReportResponse.id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_id(), target);
  }

  // repeated .google.api.servicemanagement.v1.ChangeReport change_reports = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_change_reports_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(3, this->_internal_change_reports(i), target, stream);
  }

  // repeated .google.api.servicemanagement.v1.Diagnostic diagnostics = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_diagnostics_size()); i < n; i++) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(4, this->_internal_diagnostics(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  return target;
}

size_t GenerateConfigReportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .google.api.servicemanagement.v1.ChangeReport change_reports = 3;
  total_size += 1UL * this->_internal_change_reports_size();
  for (const auto& msg : this->change_reports_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .google.api.servicemanagement.v1.Diagnostic diagnostics = 4;
  total_size += 1UL * this->_internal_diagnostics_size();
  for (const auto& msg : this->diagnostics_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string service_name = 1;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_service_name());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenerateConfigReportResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GenerateConfigReportResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GenerateConfigReportResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.api.servicemanagement.v1.GenerateConfigReportResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.api.servicemanagement.v1.GenerateConfigReportResponse)
    MergeFrom(*source);
  }
}

void GenerateConfigReportResponse::MergeFrom(const GenerateConfigReportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  change_reports_.MergeFrom(from.change_reports_);
  diagnostics_.MergeFrom(from.diagnostics_);
  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void GenerateConfigReportResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenerateConfigReportResponse::CopyFrom(const GenerateConfigReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.api.servicemanagement.v1.GenerateConfigReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenerateConfigReportResponse::IsInitialized() const {
  return true;
}

void GenerateConfigReportResponse::InternalSwap(GenerateConfigReportResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  change_reports_.InternalSwap(&other->change_reports_);
  diagnostics_.InternalSwap(&other->diagnostics_);
  service_name_.Swap(&other->service_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata GenerateConfigReportResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace servicemanagement
}  // namespace api
}  // namespace google
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::ListServicesRequest* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::ListServicesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::ListServicesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::ListServicesResponse* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::ListServicesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::ListServicesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::GetServiceRequest* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::GetServiceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::GetServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::CreateServiceRequest* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::CreateServiceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::CreateServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::DeleteServiceRequest* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::DeleteServiceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::DeleteServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::UndeleteServiceRequest* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::UndeleteServiceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::UndeleteServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::UndeleteServiceResponse* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::UndeleteServiceResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::UndeleteServiceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::GetServiceConfigRequest* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::GetServiceConfigRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::GetServiceConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::ListServiceConfigsRequest* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::ListServiceConfigsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::ListServiceConfigsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::ListServiceConfigsResponse* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::ListServiceConfigsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::ListServiceConfigsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::CreateServiceConfigRequest* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::CreateServiceConfigRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::CreateServiceConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::SubmitConfigSourceRequest* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::SubmitConfigSourceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::SubmitConfigSourceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::SubmitConfigSourceResponse* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::SubmitConfigSourceResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::SubmitConfigSourceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::CreateServiceRolloutRequest* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::CreateServiceRolloutRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::CreateServiceRolloutRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::ListServiceRolloutsRequest* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::ListServiceRolloutsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::ListServiceRolloutsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::ListServiceRolloutsResponse* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::ListServiceRolloutsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::ListServiceRolloutsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::GetServiceRolloutRequest* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::GetServiceRolloutRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::GetServiceRolloutRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::EnableServiceRequest* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::EnableServiceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::EnableServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::DisableServiceRequest* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::DisableServiceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::DisableServiceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::GenerateConfigReportRequest* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::GenerateConfigReportRequest >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::GenerateConfigReportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::google::api::servicemanagement::v1::GenerateConfigReportResponse* Arena::CreateMaybeMessage< ::google::api::servicemanagement::v1::GenerateConfigReportResponse >(Arena* arena) {
  return Arena::CreateInternal< ::google::api::servicemanagement::v1::GenerateConfigReportResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
